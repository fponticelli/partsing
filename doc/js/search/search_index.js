var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/CombineErrors.html",[0,0.216,1,1.784]],["body/classes/CombineErrors.html",[0,0.315,1,2.603,2,0.481,3,0.349,4,0.288,5,2.668,6,0.935,7,0.859,8,0.23,9,0.726,10,0.703,11,0.859,12,0.726,13,0.932,14,0.827,15,0.714,16,3.26,17,3.08,18,0.746,19,4.271,20,0.803,21,0.043,22,0.714,23,0.413,24,0.803,25,2.897,26,0.803,27,0.554,28,3.328,29,3.26,30,0.809,31,0.604,32,0.803,33,0.803,34,0.935,35,0.803,36,0.481,37,0.9,38,0.9,39,1.987,40,3.26,41,4.271,42,3.26,43,2.278,44,3.26,45,1.005,46,1.987,47,3.26,48,0.031,49,0.031]],["title/classes/CustomError.html",[0,0.216,50,1.784]],["body/classes/CustomError.html",[0,0.327,2,0.51,3,0.37,4,0.305,6,0.971,7,0.878,8,0.244,9,0.753,10,0.723,11,0.878,12,0.753,13,0.945,14,0.858,15,0.756,18,0.763,20,0.851,21,0.042,22,0.756,23,0.438,24,0.851,25,2.635,26,0.851,27,0.587,30,0.832,31,0.677,32,0.851,33,0.851,34,0.756,35,0.851,36,0.51,37,0.953,38,0.953,48,0.032,49,0.032,50,2.702,51,2.826,52,3.453,53,4.433,54,4.433,55,4.896,56,3.453,57,3.453]],["title/classes/DecodeErrorBase.html",[0,0.216,7,0.497]],["body/classes/DecodeErrorBase.html",[0,0.368,2,0.615,3,0.446,4,0.368,7,0.846,8,0.294,12,0.846,13,0.938,14,1.069,18,0.615,21,0.041,30,0.708,31,0.631,36,0.615,48,0.036,49,0.036,58,3.41,59,2.54,60,4.167]],["title/classes/DecodeResultBase.html",[0,0.216,61,2.045]],["body/classes/DecodeResultBase.html",[0,0.24,2,0.198,3,0.144,4,0.119,6,0.484,8,0.095,9,0.375,10,0.716,11,0.375,12,0.375,13,0.657,14,1.083,15,0.294,18,0.737,20,1.194,21,0.043,22,0.895,23,0.66,24,1.006,27,0.228,30,0.942,31,0.413,36,0.531,37,0.371,39,1.346,43,1.543,48,0.023,49,0.023,59,0.819,61,2.275,62,0.939,63,3.255,64,3.255,65,3.255,66,2.208,67,2.208,68,3.866,69,3.866,70,3.866,71,3.866,72,2.208,73,2.208,74,2.208,75,2.811,76,2.208,77,1.393,78,4.179,79,1.344,80,3.569,81,1.344,82,3.255,83,5.051,84,3.596,85,1.344,86,3.596,87,4.085,88,2.513,89,3.847,90,3.255,91,1.344,92,3.596,93,1.344,94,1.344,95,1.344,96,3.179,97,1.344,98,2.773,99,3.255,100,1.344,101,3.255,102,1.344,103,3.255,104,1.344,105,3.255,106,3.255,107,2.208,108,1.344,109,4.759,110,1.344,111,3.343,112,2.773,113,1.346,114,2.208,115,1.344,116,1.344,117,1.344,118,2.901,119,2.811,120,1.344,121,2.664,122,1.344,123,2.208,124,2.208,125,2.208,126,2.208,127,2.208,128,1.344,129,0.939,130,1.344,131,2.811,132,3.255,133,1.344,134,1.344,135,1.344,136,1.344,137,1.344,138,1.344]],["title/classes/ExpectedAnyOf.html",[0,0.216,139,1.784]],["body/classes/ExpectedAnyOf.html",[0,0.252,2,0.504,3,0.365,4,0.301,6,0.747,7,0.827,8,0.241,9,0.747,10,0.65,11,0.827,12,0.747,13,0.926,14,0.852,15,0.747,18,0.76,20,0.841,21,0.043,22,0.747,23,0.433,24,0.841,26,0.841,27,0.874,30,0.827,31,0.675,32,0.841,33,0.841,34,0.964,35,0.841,36,0.504,39,2.681,45,1.052,48,0.032,49,0.032,139,2.08,140,2.793,141,2.385,142,2.549,143,4.399,144,3.412,145,1.836,146,2.385,147,4.869,148,3.412,149,2.385]],["title/classes/ExpectedAtLeast.html",[0,0.216,150,1.784]],["body/classes/ExpectedAtLeast.html",[0,0.319,2,0.491,3,0.356,4,0.294,6,0.947,7,0.865,8,0.235,9,0.735,10,0.752,11,0.865,12,0.735,13,0.936,14,0.838,15,0.728,18,0.752,20,0.819,21,0.042,22,0.728,23,0.422,24,0.819,26,0.819,27,0.565,30,0.817,31,0.548,32,0.819,33,0.819,34,0.947,35,0.819,36,0.491,37,0.918,38,0.918,45,1.57,48,0.031,49,0.031,142,2.675,145,1.789,150,2.637,151,2.721,152,2.721,153,2.931,154,4.326,155,3.54,156,3.325,157,3.54,158,2.324]],["title/classes/ExpectedEoi.html",[0,0.216,159,1.784]],["body/classes/ExpectedEoi.html",[0,0.332,2,0.522,3,0.378,4,0.312,6,0.986,7,0.886,8,0.249,9,0.765,10,0.731,11,0.886,12,0.765,13,0.95,14,0.871,15,1.084,18,0.77,21,0.042,26,0.871,27,0.601,30,0.841,31,0.571,32,0.871,33,0.871,34,0.774,35,0.871,36,0.522,38,0.976,45,1.607,48,0.032,49,0.032,77,1.513,159,2.743,160,2.894,161,4.501,162,4.951,163,3.536,164,2.471]],["title/classes/ExpectedField.html",[0,0.216,165,1.784]],["body/classes/ExpectedField.html",[0,0.326,2,0.507,3,0.367,4,0.303,6,0.967,7,0.876,8,0.242,9,0.75,10,0.721,11,0.876,12,0.75,13,0.943,14,0.855,15,0.752,18,0.761,20,0.846,21,0.042,22,0.752,23,0.435,24,0.846,26,0.846,27,0.583,30,0.83,31,0.676,32,0.846,33,0.846,34,0.752,35,0.846,36,0.507,37,0.947,38,0.947,45,1.589,48,0.032,49,0.032,165,2.692,166,2.809,167,3.432,168,4.416,169,3.815,170,3.432,171,3.432]],["title/classes/ExpectedMatch.html",[0,0.216,172,1.784]],["body/classes/ExpectedMatch.html",[0,0.327,2,0.508,3,0.368,4,0.304,6,0.969,7,0.877,8,0.243,9,0.752,10,0.722,11,0.877,12,0.752,13,0.944,14,0.857,15,0.754,18,0.762,20,0.848,21,0.042,22,0.754,23,0.436,24,0.848,26,0.848,27,0.831,30,0.831,31,0.677,32,0.848,33,0.848,34,0.754,35,0.848,36,0.508,37,0.95,38,0.95,45,1.591,48,0.032,49,0.038,121,2.817,172,2.697,173,2.817,174,3.442,175,4.424,176,3.442]],["title/classes/ExpectedNoneOf.html",[0,0.216,177,1.784]],["body/classes/ExpectedNoneOf.html",[0,0.315,2,0.48,3,0.348,4,0.287,6,0.934,7,0.858,8,0.229,9,0.724,10,0.746,11,0.858,12,0.724,13,0.931,14,0.825,15,0.712,18,0.746,20,0.801,21,0.042,22,0.712,23,0.412,24,0.801,25,2.56,26,0.801,27,0.858,30,0.808,31,0.665,32,0.801,33,0.801,34,1.042,35,0.801,36,0.48,37,0.897,38,0.897,45,1.002,48,0.031,49,0.031,141,2.272,142,2.625,145,1.75,146,2.272,158,2.272,177,2.598,178,2.661,179,4.263,180,3.893,181,3.251,182,3.251,183,1.981,184,3.251]],["title/classes/ExpectedOnce.html",[0,0.216,185,1.784]],["body/classes/ExpectedOnce.html",[0,0.322,2,0.498,3,0.361,4,0.298,6,0.956,7,0.87,8,0.238,9,0.742,10,0.715,11,0.87,12,0.742,13,0.94,14,0.845,15,0.739,18,0.756,20,0.831,21,0.042,22,0.739,23,0.428,24,0.831,26,0.831,27,0.573,30,0.823,31,0.554,32,0.831,33,0.831,34,0.956,35,0.831,36,0.498,37,0.931,38,0.931,45,1.579,48,0.031,49,0.031,141,2.357,142,2.648,145,1.815,158,2.357,183,2.056,185,2.661,186,2.76,187,4.366,188,3.963,189,3.373]],["title/classes/ExpectedWithinRange.html",[0,0.216,190,1.784]],["body/classes/ExpectedWithinRange.html",[0,0.319,2,0.491,3,0.356,4,0.294,6,0.947,7,0.865,8,0.235,9,0.735,10,0.752,11,0.865,12,0.735,13,0.936,14,0.838,15,0.728,18,0.752,20,0.819,21,0.042,22,0.728,23,0.422,24,0.819,26,0.819,27,0.565,30,0.817,31,0.708,32,0.819,33,0.819,34,0.728,35,0.819,36,0.491,37,0.918,38,0.918,45,1.57,48,0.031,49,0.031,152,2.721,155,3.54,157,2.721,190,2.637,191,2.721,192,4.809,193,4.326,194,3.36,195,4.809,196,3.325,197,3.325,198,3.325]],["title/classes/PatternMismatch.html",[0,0.216,199,1.784]],["body/classes/PatternMismatch.html",[0,0.325,2,0.505,3,0.366,4,0.302,6,0.965,7,0.875,8,0.241,9,0.749,10,0.72,11,0.875,12,0.749,13,0.943,14,0.853,15,0.75,18,0.76,20,0.843,21,0.042,22,0.75,23,0.434,24,0.843,26,0.843,27,0.581,30,0.828,31,0.675,32,0.843,33,0.843,34,0.75,35,0.843,36,0.505,37,0.945,38,0.945,45,1.055,48,0.032,49,0.035,199,2.686,200,2.801,201,3.422,202,4.408,203,5.454,204,4.875,205,3.422,206,3.422]],["title/interfaces/TextInput.html",[207,1.252,208,1.784]],["body/interfaces/TextInput.html",[2,0.605,3,0.438,4,0.362,8,0.396,9,0.837,10,0.728,21,0.041,23,0.625,31,0.67,36,0.605,48,0.035,49,0.035,77,2.348,153,3.223,207,2.109,208,3.004,209,3.35]],["title/classes/UnexpectedEoi.html",[0,0.216,210,1.784]],["body/classes/UnexpectedEoi.html",[0,0.332,2,0.522,3,0.378,4,0.312,6,0.986,7,0.886,8,0.249,9,0.765,10,0.731,11,0.886,12,0.765,13,0.95,14,0.871,15,1.084,18,0.77,21,0.042,26,0.871,27,0.601,30,0.841,31,0.571,32,0.871,33,0.871,34,0.774,35,0.871,36,0.522,38,0.976,48,0.032,49,0.032,77,1.513,164,2.471,210,2.743,211,2.894,212,4.501,213,5.212,214,4.052,215,3.536]],["title/interfaces/ValueInput.html",[207,1.252,216,1.784]],["body/interfaces/ValueInput.html",[2,0.598,3,0.434,4,0.358,8,0.286,9,0.832,10,0.723,21,0.042,23,0.621,31,0.667,36,0.598,48,0.035,49,0.035,77,2.34,153,3.208,207,2.096,216,2.985,217,3.316,218,4.475]],["title/contributing.html",[219,1.715,220,1.495,221,1.715]],["body/contributing.html",[3,0.366,4,0.302,21,0.032,46,2.686,48,0.032,49,0.032,118,2.086,188,2.801,221,3.723,222,3.422,223,3.422,224,2.801,225,3.422,226,5.454,227,2.801,228,3.422,229,4.875,230,3.99,231,3.607,232,3.607,233,3.08,234,3.99,235,3.422,236,3.422,237,2.801,238,2.801,239,3.422,240,2.392,241,2.801,242,3.407,243,2.801,244,2.801,245,3.422,246,2.801,247,3.422,248,2.801,249,2.801,250,3.422,251,2.392,252,3.607,253,3.422,254,3.422,255,3.422,256,2.801,257,2.801,258,2.801,259,2.801,260,3.422,261,2.801,262,4.408,263,3.607,264,2.801,265,3.422,266,2.801,267,4.408,268,4.408,269,3.607,270,2.801,271,3.422,272,3.422,273,2.801,274,2.801,275,3.607,276,3.422,277,3.422]],["title/coverage.html",[278,3.252]],["body/coverage.html",[0,0.39,1,0.963,4,0.14,5,1.293,7,0.268,17,0.963,21,0.043,23,0.2,48,0.018,49,0.023,50,0.963,51,1.293,58,1.293,61,1.104,62,2.732,96,1.104,98,0.963,111,1.293,112,0.963,113,0.963,118,0.963,129,1.104,139,0.963,140,2.06,145,0.85,146,1.104,149,4.161,150,0.963,151,1.293,159,0.963,160,1.293,165,0.963,166,1.293,172,0.963,173,1.293,177,0.963,178,1.293,180,1.293,185,0.963,186,1.293,190,0.963,191,1.293,199,0.963,200,1.293,207,1.077,208,0.963,209,1.293,210,0.963,211,1.293,214,1.293,216,0.963,217,1.293,278,1.293,279,1.293,280,1.293,281,1.293,282,3.408,283,1.58,284,1.58,285,5.907,286,3.909,287,3.909,288,1.58,289,1.293,290,1.58,291,1.58,292,2.517,293,1.58,294,5.883,295,4.979,296,1.58,297,1.293,298,1.293,299,4.555,300,1.293,301,2.06,302,2.517,303,2.06,304,2.517,305,1.759,306,1.58,307,1.58,308,1.58,309,1.58,310,1.58,311,1.58,312,1.58,313,1.58,314,1.58,315,2.517,316,1.293,317,1.58,318,2.517,319,4.536,320,1.58,321,1.58,322,1.58,323,1.58,324,1.293,325,1.58,326,1.58,327,1.58,328,1.58,329,1.58,330,1.58,331,1.58,332,1.293,333,1.58,334,1.58,335,1.58,336,1.58,337,1.58,338,1.58,339,1.58,340,1.58,341,1.58,342,1.58,343,1.58,344,1.58]],["title/miscellaneous/enumerations.html",[345,1.495,346,2.876]],["body/miscellaneous/enumerations.html",[8,0.286,21,0.042,27,0.978,48,0.035,49,0.035,142,2.345,297,3.316,301,4.008,303,4.475,316,4.008,345,2.469,346,3.316,347,4.051,348,4.008,349,4.897,350,4.051,351,4.051,352,4.051,353,4.051]],["title/index.html",[8,0.173,219,1.715,220,1.495]],["body/index.html",[0,0.263,8,0.22,10,0.369,11,0.53,12,0.266,13,0.266,17,0.954,18,0.369,20,0.386,21,0.042,22,0.343,23,0.619,24,0.386,25,2.232,27,0.868,28,1.746,30,0.661,31,0.591,37,0.861,39,2.84,43,2.179,46,1.523,48,0.026,49,0.018,59,2.17,77,2.158,78,1.281,80,1.094,88,2.898,89,1.746,98,0.954,112,0.954,113,3.413,118,2.84,129,1.094,149,1.746,153,2.528,169,1.746,183,0.954,194,2.179,208,0.954,216,0.954,218,2.045,220,0.954,227,1.281,230,2.914,240,1.094,242,3.042,246,1.281,249,2.552,251,1.094,258,1.281,269,1.281,289,2.045,300,2.045,305,1.094,324,2.045,332,2.045,354,2.499,355,3.119,356,1.565,357,1.565,358,1.565,359,1.565,360,1.565,361,2.045,362,1.565,363,2.914,364,2.499,365,1.565,366,1.565,367,1.565,368,3.184,369,1.565,370,3.891,371,2.499,372,1.565,373,1.565,374,1.565,375,1.281,376,1.565,377,1.565,378,1.565,379,1.565,380,2.499,381,1.565,382,1.565,383,1.565,384,1.565,385,2.499,386,1.281,387,2.045,388,1.565,389,2.499,390,1.565,391,1.565,392,1.565,393,1.565,394,1.565,395,1.565,396,3.119,397,3.394,398,2.499,399,1.565,400,2.499,401,2.045,402,2.914,403,1.565,404,1.281,405,1.565,406,1.281,407,1.565,408,1.565,409,2.499,410,2.499,411,1.565,412,1.565,413,1.565,414,1.565,415,1.565,416,1.565,417,1.565,418,2.499,419,1.094,420,1.565,421,2.499,422,3.119,423,1.565,424,3.119,425,3.891,426,3.56,427,1.565,428,1.565,429,1.565,430,2.499,431,1.565,432,2.499,433,1.565,434,1.565,435,1.565,436,4.147,437,1.565,438,1.565,439,1.565,440,2.499,441,1.565,442,1.565,443,1.565,444,1.565,445,1.565,446,2.499,447,1.565,448,1.565,449,1.565,450,1.565,451,1.565,452,1.565,453,1.565,454,1.565,455,2.499,456,1.565,457,1.565,458,1.281,459,1.565,460,1.565,461,1.565,462,1.565,463,1.565,464,1.565,465,1.565,466,1.565,467,1.565,468,1.565,469,1.565,470,1.565,471,1.565,472,1.565,473,2.499,474,1.281,475,2.499,476,2.499,477,1.565,478,1.565,479,1.281,480,1.281,481,1.565,482,3.56,483,3.119,484,2.499,485,3.119,486,2.499,487,1.565,488,2.499,489,1.281,490,1.565,491,1.281,492,1.565,493,3.891,494,1.565,495,3.56,496,2.499,497,1.565,498,1.281,499,1.565,500,2.499,501,1.565,502,1.565,503,1.565,504,1.565,505,1.565]],["title/license.html",[219,1.715,220,1.495,233,1.715]],["body/license.html",[0,0.075,3,0.465,4,0.384,11,0.297,18,0.15,21,0.016,22,0.672,23,0.129,28,0.711,34,0.223,46,0.62,48,0.02,49,0.013,59,0.62,80,0.711,112,0.62,142,2.027,164,0.711,169,0.711,183,0.62,194,2.645,207,0.435,221,2.645,224,2.231,231,1.88,232,3.358,233,3.79,234,0.833,237,0.833,238,3.642,240,0.711,241,2.231,242,2.958,243,1.88,244,2.231,248,0.833,251,1.221,252,2.512,256,0.833,257,0.833,259,0.833,261,1.88,263,0.833,264,3.783,266,2.231,270,2.934,273,0.833,274,1.43,275,1.88,279,2.231,280,0.833,281,0.833,305,1.221,348,0.833,361,2.512,363,3.097,368,0.833,375,2.742,386,0.833,387,0.833,397,2.231,404,2.231,406,1.43,419,2.341,458,0.833,474,0.833,479,0.833,480,0.833,489,1.88,491,1.88,498,3.558,506,2.725,507,2.297,508,2.297,509,1.017,510,1.017,511,1.017,512,3.955,513,4.449,514,2.725,515,4.449,516,4.623,517,1.747,518,1.017,519,1.017,520,4.103,521,3.35,522,1.747,523,3.784,524,3.069,525,1.017,526,2.297,527,3.955,528,1.017,529,1.017,530,2.725,531,1.747,532,1.747,533,1.747,534,4.826,535,2.725,536,1.747,537,3.35,538,1.017,539,1.747,540,1.017,541,1.017,542,1.017,543,1.017,544,1.017,545,1.017,546,1.017,547,2.297,548,1.747,549,4.449,550,1.017,551,3.35,552,3.585,553,1.747,554,1.017,555,1.017,556,1.017,557,1.017,558,1.017,559,1.017,560,5.648,561,2.297,562,1.747,563,1.017,564,4.765,565,1.747,566,1.747,567,1.017,568,4.883,569,1.017,570,1.017,571,1.017,572,1.017,573,1.017,574,1.747,575,1.747,576,2.297,577,1.017,578,1.747,579,1.017,580,1.017,581,1.017,582,2.725,583,1.747,584,1.747,585,3.069,586,1.747,587,1.017,588,1.017,589,1.017,590,1.017,591,1.017,592,1.747,593,1.017,594,1.017,595,1.017,596,2.297,597,1.017,598,1.747,599,1.017,600,1.017,601,1.017,602,1.747,603,1.747,604,2.725,605,1.747,606,1.747,607,1.747,608,2.297,609,1.747,610,2.297,611,1.747,612,1.747,613,1.747,614,2.297,615,1.017,616,1.747,617,1.747,618,1.017,619,1.017,620,3.585,621,2.297,622,2.725,623,1.747,624,1.747,625,1.017,626,2.297,627,2.297,628,1.017,629,2.297,630,2.297,631,1.017,632,1.017,633,1.747,634,1.747,635,1.017,636,1.017,637,1.017,638,1.017,639,1.017,640,1.017,641,1.017,642,1.017,643,2.725,644,1.017,645,3.069,646,1.017,647,1.017,648,1.017,649,2.725,650,1.017,651,1.017,652,1.017,653,1.017,654,2.297,655,2.725,656,1.747,657,1.017,658,1.017,659,1.017,660,1.017,661,1.017,662,1.017,663,1.747,664,1.747,665,1.017,666,1.017,667,1.747,668,1.747,669,1.017,670,1.017,671,1.017,672,1.017,673,1.017,674,2.725,675,1.017,676,1.017,677,1.017,678,1.017,679,1.017,680,1.017,681,1.017,682,1.017,683,1.017,684,1.747,685,1.017,686,1.017,687,3.585,688,2.297,689,2.297,690,2.725,691,1.747,692,1.747,693,1.017,694,1.017,695,1.017,696,1.747,697,1.747,698,1.017,699,1.747,700,1.017,701,1.017,702,1.017,703,3.069,704,1.017,705,1.017,706,1.017,707,1.747,708,1.017,709,1.017,710,1.017,711,3.069,712,1.017,713,1.017,714,1.017,715,1.017,716,1.017,717,1.747,718,1.017,719,1.017,720,1.017,721,1.017,722,1.017,723,1.017,724,1.017,725,1.017,726,1.017,727,1.017,728,1.017,729,1.747,730,1.017,731,1.017,732,1.017,733,1.017,734,1.017,735,1.017,736,1.017,737,1.017,738,1.017,739,1.017,740,1.747,741,1.747,742,1.017,743,1.017,744,1.017,745,1.017,746,1.017,747,1.017,748,1.017,749,1.017,750,1.017,751,1.017,752,1.017,753,1.017,754,1.017,755,1.017,756,1.017,757,1.017,758,1.017,759,1.017,760,1.017]],["title/modules.html",[761,3.252]],["body/modules.html",[21,0.038,48,0.038,49,0.038,761,3.789]],["title/overview.html",[762,3.252]],["body/overview.html",[0,0.336,21,0.038,48,0.038,49,0.038,207,1.95,762,3.729,763,4.557,764,4.557]],["title/miscellaneous/typealiases.html",[345,1.495,765,3.514]],["body/miscellaneous/typealiases.html",[1,2.092,8,0.242,17,2.976,21,0.042,23,0.56,25,2.628,48,0.035,49,0.032,50,2.092,62,2.399,77,2.206,88,3.086,89,3.412,96,2.399,98,2.092,113,3.327,139,2.092,150,2.092,159,2.092,165,2.092,172,2.092,177,2.092,185,2.092,190,2.092,199,2.092,210,2.092,282,2.809,298,2.809,299,2.809,319,2.809,345,2.092,401,3.996,402,2.809,419,2.399,766,3.432,767,4.882,768,3.432,769,3.432,770,5.333,771,4.882,772,4.882,773,4.882,774,4.882,775,3.432,776,3.432,777,3.432]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":149,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"coverage.html":{},"index.html":{}}}],["0.2",{"_index":484,"title":{},"body":{"index.html":{}}}],["0.3",{"_index":464,"title":{},"body":{"index.html":{}}}],["0.5",{"_index":482,"title":{},"body":{"index.html":{}}}],["0.8",{"_index":486,"title":{},"body":{"index.html":{}}}],["0/1",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["003366",{"_index":481,"title":{},"body":{"index.html":{}}}],["1",{"_index":183,"title":{},"body":{"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"index.html":{},"license.html":{}}}],["1/1",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":438,"title":{},"body":{"index.html":{}}}],["17",{"_index":763,"title":{},"body":{"overview.html":{}}}],["2",{"_index":764,"title":{},"body":{"overview.html":{}}}],["2.0",{"_index":508,"title":{},"body":{"license.html":{}}}],["2004",{"_index":510,"title":{},"body":{"license.html":{}}}],["23/26",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":364,"title":{},"body":{"index.html":{}}}],["50",{"_index":542,"title":{},"body":{"license.html":{}}}],["88",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":519,"title":{},"body":{"license.html":{}}}],["9a",{"_index":434,"title":{},"body":{"index.html":{}}}],["_e",{"_index":63,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["_i",{"_index":64,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["_o",{"_index":65,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["abov",{"_index":480,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":14,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}}}],["accept",{"_index":224,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["accompani",{"_index":235,"title":{},"body":{"contributing.html":{}}}],["act",{"_index":526,"title":{},"body":{"license.html":{}}}],["add",{"_index":668,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":670,"title":{},"body":{"license.html":{}}}],["addit",{"_index":375,"title":{},"body":{"index.html":{},"license.html":{}}}],["adopt",{"_index":382,"title":{},"body":{"index.html":{}}}],["advis",{"_index":723,"title":{},"body":{"license.html":{}}}],["again",{"_index":260,"title":{},"body":{"contributing.html":{}}}],["against",{"_index":634,"title":{},"body":{"license.html":{}}}],["agre",{"_index":690,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":234,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["alias",{"_index":766,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alleg",{"_index":638,"title":{},"body":{"license.html":{}}}],["alon",{"_index":631,"title":{},"body":{"license.html":{}}}],["along",{"_index":661,"title":{},"body":{"license.html":{}}}],["alongsid",{"_index":669,"title":{},"body":{"license.html":{}}}],["alreadi",{"_index":255,"title":{},"body":{"contributing.html":{}}}],["and(b",{"_index":648,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":653,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":657,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":730,"title":{},"body":{"license.html":{}}}],["annot",{"_index":572,"title":{},"body":{"license.html":{}}}],["anyarrayvalu",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["anyvalu",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["apach",{"_index":506,"title":{},"body":{"license.html":{}}}],["appear",{"_index":666,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":566,"title":{},"body":{"license.html":{}}}],["appli",{"_index":626,"title":{},"body":{"license.html":{}}}],["applic",{"_index":688,"title":{},"body":{"license.html":{}}}],["appropri",{"_index":699,"title":{},"body":{"license.html":{}}}],["archiv",{"_index":753,"title":{},"body":{"license.html":{}}}],["aris",{"_index":715,"title":{},"body":{"license.html":{}}}],["array",{"_index":418,"title":{},"body":{"index.html":{}}}],["array/tupl",{"_index":420,"title":{},"body":{"index.html":{}}}],["arrayvalu",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["assert",{"_index":738,"title":{},"body":{"license.html":{}}}],["associ",{"_index":702,"title":{},"body":{"license.html":{}}}],["assum",{"_index":700,"title":{},"body":{"license.html":{}}}],["attach",{"_index":565,"title":{},"body":{"license.html":{}}}],["attribut",{"_index":655,"title":{},"body":{"license.html":{}}}],["author",{"_index":522,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":561,"title":{},"body":{"license.html":{}}}],["avail",{"_index":387,"title":{},"body":{"index.html":{},"license.html":{}}}],["base",{"_index":569,"title":{},"body":{"license.html":{}}}],["basi",{"_index":691,"title":{},"body":{"license.html":{}}}],["be",{"_index":477,"title":{},"body":{"index.html":{}}}],["behalf",{"_index":585,"title":{},"body":{"license.html":{}}}],["below",{"_index":567,"title":{},"body":{"license.html":{}}}],["benefici",{"_index":546,"title":{},"body":{"license.html":{}}}],["between",{"_index":197,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["bind",{"_index":581,"title":{},"body":{"license.html":{}}}],["boilerpl",{"_index":739,"title":{},"body":{"license.html":{}}}],["booleanvalu",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["both",{"_index":396,"title":{},"body":{"index.html":{}}}],["bracket",{"_index":741,"title":{},"body":{"license.html":{}}}],["build",{"_index":356,"title":{},"body":{"index.html":{}}}],["carri",{"_index":650,"title":{},"body":{"license.html":{}}}],["case",{"_index":492,"title":{},"body":{"index.html":{}}}],["caus",{"_index":532,"title":{},"body":{"license.html":{}}}],["chang",{"_index":652,"title":{},"body":{"license.html":{}}}],["char",{"_index":180,"title":{},"body":{"classes/ExpectedNoneOf.html":{},"coverage.html":{}}}],["charact",{"_index":348,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["charg",{"_index":610,"title":{},"body":{"license.html":{}}}],["choos",{"_index":725,"title":{},"body":{"license.html":{}}}],["cla",{"_index":253,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":627,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"coverage.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["code",{"_index":261,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["color",{"_index":422,"title":{},"body":{"index.html":{}}}],["colortextdecod",{"_index":454,"title":{},"body":{"index.html":{}}}],["colortextdecoder('#003355",{"_index":461,"title":{},"body":{"index.html":{}}}],["colortextdecoder('gray",{"_index":463,"title":{},"body":{"index.html":{}}}],["colortextdecoder('gray0.2",{"_index":466,"title":{},"body":{"index.html":{}}}],["colortextdecoder('hsl(0.1,0.2,0.3",{"_index":468,"title":{},"body":{"index.html":{}}}],["colorvaluedecod",{"_index":488,"title":{},"body":{"index.html":{}}}],["combin",{"_index":28,"title":{},"body":{"classes/CombineErrors.html":{},"index.html":{},"license.html":{}}}],["combineerror",{"_index":1,"title":{"classes/CombineErrors.html":{}},"body":{"classes/CombineErrors.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["come",{"_index":471,"title":{},"body":{"index.html":{}}}],["comment",{"_index":743,"title":{},"body":{"license.html":{}}}],["commerci",{"_index":722,"title":{},"body":{"license.html":{}}}],["common",{"_index":528,"title":{},"body":{"license.html":{}}}],["commun",{"_index":275,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["compil",{"_index":557,"title":{},"body":{"license.html":{}}}],["compli",{"_index":673,"title":{},"body":{"license.html":{}}}],["complianc",{"_index":755,"title":{},"body":{"license.html":{}}}],["comput",{"_index":720,"title":{},"body":{"license.html":{}}}],["concat",{"_index":146,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedNoneOf.html":{},"coverage.html":{}}}],["concator(this.valu",{"_index":184,"title":{},"body":{"classes/ExpectedNoneOf.html":{}}}],["condit",{"_index":513,"title":{},"body":{"license.html":{}}}],["configur",{"_index":554,"title":{},"body":{"license.html":{}}}],["consequenti",{"_index":714,"title":{},"body":{"license.html":{}}}],["consid",{"_index":407,"title":{},"body":{"index.html":{}}}],["consist",{"_index":732,"title":{},"body":{"license.html":{}}}],["conspicu",{"_index":597,"title":{},"body":{"license.html":{}}}],["const",{"_index":39,"title":{},"body":{"classes/CombineErrors.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"index.html":{}}}],["constitut",{"_index":639,"title":{},"body":{"license.html":{}}}],["constru",{"_index":671,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}}}],["constructor(ent",{"_index":141,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{}}}],["constructor(error",{"_index":16,"title":{},"body":{"classes/CombineErrors.html":{}}}],["constructor(field",{"_index":167,"title":{},"body":{"classes/ExpectedField.html":{}}}],["constructor(input",{"_index":75,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["constructor(messag",{"_index":52,"title":{},"body":{"classes/CustomError.html":{}}}],["constructor(min",{"_index":152,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"classes/ExpectedWithinRange.html":{}}}],["constructor(pattern",{"_index":201,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["constructor(readonli",{"_index":37,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"index.html":{}}}],["constructor(valu",{"_index":174,"title":{},"body":{"classes/ExpectedMatch.html":{}}}],["consult",{"_index":271,"title":{},"body":{"contributing.html":{}}}],["contain",{"_index":659,"title":{},"body":{"license.html":{}}}],["content",{"_index":667,"title":{},"body":{"license.html":{}}}],["contract",{"_index":536,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":221,"title":{"contributing.html":{}},"body":{"contributing.html":{},"license.html":{}}}],["contribution(",{"_index":630,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":232,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["contributori",{"_index":640,"title":{},"body":{"license.html":{}}}],["control",{"_index":361,"title":{},"body":{"index.html":{},"license.html":{}}}],["convers",{"_index":558,"title":{},"body":{"license.html":{}}}],["copi",{"_index":643,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":238,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["counterclaim",{"_index":636,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":278,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpu",{"_index":415,"title":{},"body":{"index.html":{}}}],["cross",{"_index":635,"title":{},"body":{"license.html":{}}}],["current",{"_index":249,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["custom",{"_index":55,"title":{},"body":{"classes/CustomError.html":{}}}],["customari",{"_index":685,"title":{},"body":{"license.html":{}}}],["customerror",{"_index":50,"title":{"classes/CustomError.html":{}},"body":{"classes/CustomError.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["cycl",{"_index":416,"title":{},"body":{"index.html":{}}}],["damag",{"_index":711,"title":{},"body":{"license.html":{}}}],["date",{"_index":642,"title":{},"body":{"license.html":{}}}],["deal",{"_index":490,"title":{},"body":{"index.html":{}}}],["debug",{"_index":390,"title":{},"body":{"index.html":{}}}],["decod",{"_index":113,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decode_error_bas",{"_index":35,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}}}],["decodeerror",{"_index":17,"title":{},"body":{"classes/CombineErrors.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decodeerror.combin",{"_index":455,"title":{},"body":{"index.html":{}}}],["decodeerrorbas",{"_index":7,"title":{"classes/DecodeErrorBase.html":{}},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"coverage.html":{}}}],["decodeerrorbase:22",{"_index":33,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}}}],["decodefailur",{"_index":96,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["decodefailure(f(this.input",{"_index":136,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodefailure(input",{"_index":138,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodefailure(this.input",{"_index":131,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodererror",{"_index":385,"title":{},"body":{"index.html":{}}}],["decoderesult",{"_index":89,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decoderesultbas",{"_index":61,"title":{"classes/DecodeResultBase.html":{}},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{}}}],["decodesuccess",{"_index":98,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decodesuccess(f(this.input",{"_index":122,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodesuccess(input",{"_index":137,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodesuccess(this.input",{"_index":119,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodetext",{"_index":300,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["decodevalu",{"_index":324,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["default",{"_index":26,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}}}],["defend",{"_index":734,"title":{},"body":{"license.html":{}}}],["defin",{"_index":18,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{},"license.html":{}}}],["definit",{"_index":489,"title":{},"body":{"index.html":{},"license.html":{}}}],["deliber",{"_index":708,"title":{},"body":{"license.html":{}}}],["deriv",{"_index":568,"title":{},"body":{"license.html":{}}}],["describ",{"_index":479,"title":{},"body":{"index.html":{},"license.html":{}}}],["descript",{"_index":747,"title":{},"body":{"license.html":{}}}],["design",{"_index":599,"title":{},"body":{"license.html":{}}}],["determin",{"_index":698,"title":{},"body":{"license.html":{}}}],["differ",{"_index":257,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["digit",{"_index":301,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["direct",{"_index":530,"title":{},"body":{"license.html":{}}}],["directli",{"_index":383,"title":{},"body":{"index.html":{}}}],["disclaim",{"_index":686,"title":{},"body":{"license.html":{}}}],["discuss",{"_index":594,"title":{},"body":{"license.html":{}}}],["display",{"_index":617,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":515,"title":{},"body":{"license.html":{}}}],["document",{"_index":279,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["don't",{"_index":259,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["e.tostr",{"_index":42,"title":{},"body":{"classes/CombineErrors.html":{}}}],["each",{"_index":604,"title":{},"body":{"license.html":{}}}],["easier",{"_index":751,"title":{},"body":{"license.html":{}}}],["editori",{"_index":570,"title":{},"body":{"license.html":{}}}],["elabor",{"_index":573,"title":{},"body":{"license.html":{}}}],["electron",{"_index":586,"title":{},"body":{"license.html":{}}}],["employ",{"_index":236,"title":{},"body":{"contributing.html":{}}}],["empti",{"_index":497,"title":{},"body":{"index.html":{}}}],["enclos",{"_index":740,"title":{},"body":{"license.html":{}}}],["end",{"_index":164,"title":{},"body":{"classes/ExpectedEoi.html":{},"classes/UnexpectedEoi.html":{},"license.html":{}}}],["entir",{"_index":399,"title":{},"body":{"index.html":{}}}],["entiti",{"_index":142,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["enumer",{"_index":346,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eoi",{"_index":214,"title":{},"body":{"classes/UnexpectedEoi.html":{},"coverage.html":{}}}],["eot",{"_index":162,"title":{},"body":{"classes/ExpectedEoi.html":{}}}],["err",{"_index":78,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{}}}],["err2",{"_index":92,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["error",{"_index":25,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/ExpectedNoneOf.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["error(\"can't",{"_index":126,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["even",{"_index":256,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["event",{"_index":704,"title":{},"body":{"license.html":{}}}],["exampl",{"_index":59,"title":{},"body":{"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"index.html":{},"license.html":{}}}],["except",{"_index":621,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":596,"title":{},"body":{"license.html":{}}}],["exclus",{"_index":609,"title":{},"body":{"license.html":{}}}],["execut",{"_index":679,"title":{},"body":{"license.html":{}}}],["exercis",{"_index":548,"title":{},"body":{"license.html":{}}}],["expect",{"_index":45,"title":{},"body":{"classes/CombineErrors.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{}}}],["expected_any_of",{"_index":182,"title":{},"body":{"classes/ExpectedNoneOf.html":{}}}],["expectedanyof",{"_index":139,"title":{"classes/ExpectedAnyOf.html":{}},"body":{"classes/ExpectedAnyOf.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedatleast",{"_index":150,"title":{"classes/ExpectedAtLeast.html":{}},"body":{"classes/ExpectedAtLeast.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedeoi",{"_index":159,"title":{"classes/ExpectedEoi.html":{}},"body":{"classes/ExpectedEoi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedfield",{"_index":165,"title":{"classes/ExpectedField.html":{}},"body":{"classes/ExpectedField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedmatch",{"_index":172,"title":{"classes/ExpectedMatch.html":{}},"body":{"classes/ExpectedMatch.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectednoneof",{"_index":177,"title":{"classes/ExpectedNoneOf.html":{}},"body":{"classes/ExpectedNoneOf.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedonc",{"_index":185,"title":{"classes/ExpectedOnce.html":{}},"body":{"classes/ExpectedOnce.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedwithinrang",{"_index":190,"title":{"classes/ExpectedWithinRange.html":{}},"body":{"classes/ExpectedWithinRange.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["explicitli",{"_index":675,"title":{},"body":{"license.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{}}}],["express",{"_index":406,"title":{},"body":{"index.html":{},"license.html":{}}}],["extend",{"_index":6,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}}}],["f",{"_index":87,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f(e",{"_index":135,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f(this.failur",{"_index":133,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f(this.valu",{"_index":116,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f(v",{"_index":120,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f]{6})/iy",{"_index":435,"title":{},"body":{"index.html":{}}}],["fail",{"_index":129,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"index.html":{}}}],["failur",{"_index":112,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["failuretostr",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["fals",{"_index":124,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["fee",{"_index":726,"title":{},"body":{"license.html":{}}}],["few",{"_index":227,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["field",{"_index":169,"title":{},"body":{"classes/ExpectedField.html":{},"index.html":{},"license.html":{}}}],["fifti",{"_index":540,"title":{},"body":{"license.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"coverage.html":{},"license.html":{}}}],["finitenumbervalu",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["fit",{"_index":386,"title":{},"body":{"index.html":{},"license.html":{}}}],["flag",{"_index":410,"title":{},"body":{"index.html":{}}}],["flatmap",{"_index":66,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["flatmap(f",{"_index":82,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["flatmaperror",{"_index":67,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["flatmaperror(f",{"_index":90,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["flexibl",{"_index":393,"title":{},"body":{"index.html":{}}}],["follow",{"_index":231,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["form",{"_index":549,"title":{},"body":{"license.html":{}}}],["format",{"_index":745,"title":{},"body":{"license.html":{}}}],["free",{"_index":612,"title":{},"body":{"license.html":{}}}],["full",{"_index":360,"title":{},"body":{"index.html":{}}}],["function",{"_index":88,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["gener",{"_index":251,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["get",{"_index":219,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["getunsafefailur",{"_index":68,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["getunsafesuccess",{"_index":69,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["github",{"_index":267,"title":{},"body":{"contributing.html":{}}}],["give",{"_index":240,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["goodwil",{"_index":718,"title":{},"body":{"license.html":{}}}],["google'",{"_index":276,"title":{},"body":{"contributing.html":{}}}],["govern",{"_index":760,"title":{},"body":{"license.html":{}}}],["grant",{"_index":523,"title":{},"body":{"license.html":{}}}],["granular",{"_index":394,"title":{},"body":{"index.html":{}}}],["grey",{"_index":425,"title":{},"body":{"index.html":{}}}],["grey(0.2",{"_index":467,"title":{},"body":{"index.html":{}}}],["grey(0.3",{"_index":465,"title":{},"body":{"index.html":{}}}],["grey(v",{"_index":445,"title":{},"body":{"index.html":{}}}],["grey(v.grey",{"_index":499,"title":{},"body":{"index.html":{}}}],["greydecod",{"_index":440,"title":{},"body":{"index.html":{}}}],["greyvalu",{"_index":496,"title":{},"body":{"index.html":{}}}],["grossli",{"_index":709,"title":{},"body":{"license.html":{}}}],["guidelin",{"_index":229,"title":{},"body":{"contributing.html":{}}}],["h",{"_index":483,"title":{},"body":{"index.html":{}}}],["handi",{"_index":472,"title":{},"body":{"index.html":{}}}],["harmless",{"_index":736,"title":{},"body":{"license.html":{}}}],["head",{"_index":245,"title":{},"body":{"contributing.html":{}}}],["help",{"_index":272,"title":{},"body":{"contributing.html":{}}}],["here",{"_index":487,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":605,"title":{},"body":{"license.html":{}}}],["herein",{"_index":677,"title":{},"body":{"license.html":{}}}],["hold",{"_index":735,"title":{},"body":{"license.html":{}}}],["hsl",{"_index":426,"title":{},"body":{"index.html":{}}}],["hsl(0.1,0.2,0.3)anoth",{"_index":469,"title":{},"body":{"index.html":{}}}],["hsl(v.h",{"_index":502,"title":{},"body":{"index.html":{}}}],["hsl(v[0",{"_index":450,"title":{},"body":{"index.html":{}}}],["hsldecod",{"_index":446,"title":{},"body":{"index.html":{}}}],["hslvalu",{"_index":500,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licens",{"_index":511,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":757,"title":{},"body":{"license.html":{}}}],["https://cla.developers.google.com",{"_index":247,"title":{},"body":{"contributing.html":{}}}],["hue",{"_index":427,"title":{},"body":{"index.html":{}}}],["identif",{"_index":752,"title":{},"body":{"license.html":{}}}],["identifi",{"_index":280,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["ii",{"_index":538,"title":{},"body":{"license.html":{}}}],["iii",{"_index":545,"title":{},"body":{"license.html":{}}}],["implement",{"_index":417,"title":{},"body":{"index.html":{}}}],["impli",{"_index":692,"title":{},"body":{"license.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"license.html":{}}}],["improv",{"_index":595,"title":{},"body":{"license.html":{}}}],["in2",{"_index":105,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["inabl",{"_index":716,"title":{},"body":{"license.html":{}}}],["incident",{"_index":713,"title":{},"body":{"license.html":{}}}],["includ",{"_index":264,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["inclus",{"_index":584,"title":{},"body":{"license.html":{}}}],["incorpor",{"_index":602,"title":{},"body":{"license.html":{}}}],["incur",{"_index":737,"title":{},"body":{"license.html":{}}}],["indemn",{"_index":728,"title":{},"body":{"license.html":{}}}],["indemnifi",{"_index":733,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["indic",{"_index":563,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":531,"title":{},"body":{"license.html":{}}}],["individu",{"_index":547,"title":{},"body":{"license.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{}}}],["inform",{"_index":274,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["infring",{"_index":629,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":32,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}}}],["input",{"_index":77,"title":{},"body":{"classes/DecodeResultBase.html":{},"classes/ExpectedEoi.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["instanc",{"_index":423,"title":{},"body":{"index.html":{}}}],["institut",{"_index":632,"title":{},"body":{"license.html":{}}}],["integervalu",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["intend",{"_index":403,"title":{},"body":{"index.html":{}}}],["intention",{"_index":583,"title":{},"body":{"license.html":{}}}],["interfac",{"_index":207,"title":{"interfaces/TextInput.html":{},"interfaces/ValueInput.html":{}},"body":{"interfaces/TextInput.html":{},"interfaces/ValueInput.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["irrevoc",{"_index":613,"title":{},"body":{"license.html":{}}}],["isfailur",{"_index":70,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["issu",{"_index":593,"title":{},"body":{"license.html":{}}}],["issuccess",{"_index":71,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["istoken",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["it'",{"_index":371,"title":{},"body":{"index.html":{}}}],["januari",{"_index":509,"title":{},"body":{"license.html":{}}}],["join('\\n",{"_index":44,"title":{},"body":{"classes/CombineErrors.html":{}}}],["js",{"_index":380,"title":{},"body":{"index.html":{}}}],["json",{"_index":476,"title":{},"body":{"index.html":{}}}],["json.pars",{"_index":478,"title":{},"body":{"index.html":{}}}],["json.stringify(this.input",{"_index":127,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["keep",{"_index":398,"title":{},"body":{"index.html":{}}}],["kind",{"_index":11,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{},"license.html":{}}}],["l",{"_index":485,"title":{},"body":{"index.html":{}}}],["languag",{"_index":759,"title":{},"body":{"license.html":{}}}],["law",{"_index":689,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":637,"title":{},"body":{"license.html":{}}}],["lazi",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["leav",{"_index":392,"title":{},"body":{"index.html":{}}}],["left",{"_index":459,"title":{},"body":{"index.html":{}}}],["legal",{"_index":524,"title":{},"body":{"license.html":{}}}],["length",{"_index":147,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["letter",{"_index":303,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["liabil",{"_index":703,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":710,"title":{},"body":{"license.html":{}}}],["librari",{"_index":355,"title":{},"body":{"index.html":{}}}],["licens",{"_index":233,"title":{"license.html":{}},"body":{"contributing.html":{},"license.html":{}}}],["license.y",{"_index":672,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":520,"title":{},"body":{"license.html":{}}}],["light",{"_index":429,"title":{},"body":{"index.html":{}}}],["limit",{"_index":552,"title":{},"body":{"license.html":{}}}],["link",{"_index":580,"title":{},"body":{"license.html":{}}}],["list",{"_index":591,"title":{},"body":{"license.html":{}}}],["liter",{"_index":107,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["literalvalu",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["literalvalue('hsl",{"_index":501,"title":{},"body":{"index.html":{}}}],["litig",{"_index":633,"title":{},"body":{"license.html":{}}}],["loss",{"_index":717,"title":{},"body":{"license.html":{}}}],["love",{"_index":223,"title":{},"body":{"contributing.html":{}}}],["lower_case_lett",{"_index":352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lowercas",{"_index":353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lowercaselett",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["made",{"_index":562,"title":{},"body":{"license.html":{}}}],["mail",{"_index":590,"title":{},"body":{"license.html":{}}}],["make",{"_index":305,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["malfunct",{"_index":721,"title":{},"body":{"license.html":{}}}],["manag",{"_index":533,"title":{},"body":{"license.html":{}}}],["map",{"_index":72,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["map(",{"_index":41,"title":{},"body":{"classes/CombineErrors.html":{}}}],["map(f",{"_index":99,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["map(v",{"_index":436,"title":{},"body":{"index.html":{}}}],["maperror",{"_index":73,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["maperror(f",{"_index":101,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["mapinput",{"_index":74,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["mapinput(f",{"_index":103,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["mark",{"_index":598,"title":{},"body":{"license.html":{}}}],["markoptionalfield",{"_index":771,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["match",{"_index":49,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["match(o",{"_index":106,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["matchanycharof",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["matchinsensit",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["matchinsensitive('gray",{"_index":442,"title":{},"body":{"index.html":{}}}],["matchinsensitive('grey').or(decodeerror.combin",{"_index":441,"title":{},"body":{"index.html":{}}}],["matchinsensitive('hsl",{"_index":447,"title":{},"body":{"index.html":{}}}],["matchnocharof",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["max",{"_index":192,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["mean",{"_index":498,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechan",{"_index":555,"title":{},"body":{"license.html":{}}}],["media",{"_index":559,"title":{},"body":{"license.html":{}}}],["medium",{"_index":644,"title":{},"body":{"license.html":{}}}],["meet",{"_index":646,"title":{},"body":{"license.html":{}}}],["member",{"_index":265,"title":{},"body":{"contributing.html":{}}}],["memori",{"_index":414,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":694,"title":{},"body":{"license.html":{}}}],["mere",{"_index":579,"title":{},"body":{"license.html":{}}}],["messag",{"_index":54,"title":{},"body":{"classes/CustomError.html":{}}}],["method",{"_index":12,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{}}}],["min",{"_index":155,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"classes/ExpectedWithinRange.html":{}}}],["miscellan",{"_index":345,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mismatch",{"_index":204,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["modif",{"_index":551,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":649,"title":{},"body":{"license.html":{}}}],["modul",{"_index":761,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":273,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"index.html":{},"license.html":{}}}],["nativ",{"_index":379,"title":{},"body":{"index.html":{}}}],["necessarili",{"_index":628,"title":{},"body":{"license.html":{}}}],["need",{"_index":230,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["neglig",{"_index":707,"title":{},"body":{"license.html":{}}}],["never",{"_index":777,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["new",{"_index":118,"title":{},"body":{"classes/DecodeResultBase.html":{},"contributing.html":{},"coverage.html":{},"index.html":{}}}],["non",{"_index":608,"title":{},"body":{"license.html":{}}}],["normal",{"_index":665,"title":{},"body":{"license.html":{}}}],["noth",{"_index":458,"title":{},"body":{"index.html":{},"license.html":{}}}],["notic",{"_index":564,"title":{},"body":{"license.html":{}}}],["notwithstand",{"_index":676,"title":{},"body":{"license.html":{}}}],["nullablevalu",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["nullvalu",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["number",{"_index":153,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"interfaces/TextInput.html":{},"interfaces/ValueInput.html":{},"index.html":{}}}],["numbervalu",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["numbervalue.test(v",{"_index":494,"title":{},"body":{"index.html":{}}}],["o",{"_index":109,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["o.failure(thi",{"_index":130,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["o.success(thi",{"_index":115,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["object",{"_index":419,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["objectvalu",{"_index":332,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["oblig",{"_index":729,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":756,"title":{},"body":{"license.html":{}}}],["of:\\n${error",{"_index":47,"title":{},"body":{"classes/CombineErrors.html":{}}}],["offer",{"_index":623,"title":{},"body":{"license.html":{}}}],["on",{"_index":46,"title":{},"body":{"classes/CombineErrors.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["onc",{"_index":188,"title":{},"body":{"classes/ExpectedOnce.html":{},"contributing.html":{}}}],["oneof",{"_index":289,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["open",{"_index":277,"title":{},"body":{"contributing.html":{}}}],["option",{"_index":24,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"index.html":{}}}],["optionalvalu",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["optionalwhitespac",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["origin",{"_index":576,"title":{},"body":{"license.html":{}}}],["otherwis",{"_index":537,"title":{},"body":{"license.html":{}}}],["out",{"_index":80,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{},"license.html":{}}}],["out2",{"_index":86,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["output",{"_index":401,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["outstand",{"_index":543,"title":{},"body":{"license.html":{}}}],["over",{"_index":246,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["overview",{"_index":762,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":521,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":539,"title":{},"body":{"license.html":{}}}],["page",{"_index":750,"title":{},"body":{"license.html":{}}}],["paramet",{"_index":20,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"index.html":{}}}],["pars",{"_index":421,"title":{},"body":{"index.html":{}}}],["parseint(v",{"_index":437,"title":{},"body":{"index.html":{}}}],["parser",{"_index":373,"title":{},"body":{"index.html":{}}}],["parsers/decod",{"_index":357,"title":{},"body":{"index.html":{}}}],["part",{"_index":244,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["parti",{"_index":664,"title":{},"body":{"license.html":{}}}],["particular",{"_index":695,"title":{},"body":{"license.html":{}}}],["parts",{"_index":354,"title":{},"body":{"index.html":{}}}],["partsing/core/decod",{"_index":362,"title":{},"body":{"index.html":{}}}],["partsing/error",{"_index":388,"title":{},"body":{"index.html":{}}}],["partsing/text",{"_index":378,"title":{},"body":{"index.html":{}}}],["partsing/valu",{"_index":381,"title":{},"body":{"index.html":{}}}],["patch",{"_index":225,"title":{},"body":{"contributing.html":{}}}],["patent",{"_index":620,"title":{},"body":{"license.html":{}}}],["path",{"_index":218,"title":{},"body":{"interfaces/ValueInput.html":{},"index.html":{}}}],["pathtostr",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["pattern",{"_index":203,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["patternmismatch",{"_index":199,"title":{"classes/PatternMismatch.html":{}},"body":{"classes/PatternMismatch.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["payload",{"_index":475,"title":{},"body":{"index.html":{}}}],["percent",{"_index":541,"title":{},"body":{"license.html":{}}}],["perform",{"_index":618,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":241,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["perpetu",{"_index":606,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":656,"title":{},"body":{"license.html":{}}}],["picknext",{"_index":448,"title":{},"body":{"index.html":{}}}],["picknext(ratiodecod",{"_index":444,"title":{},"body":{"index.html":{}}}],["place",{"_index":660,"title":{},"body":{"license.html":{}}}],["plural",{"_index":145,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"coverage.html":{}}}],["pluralize(this.ent",{"_index":158,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{}}}],["portion",{"_index":366,"title":{},"body":{"index.html":{}}}],["posit",{"_index":370,"title":{},"body":{"index.html":{}}}],["possibl",{"_index":724,"title":{},"body":{"license.html":{}}}],["power",{"_index":529,"title":{},"body":{"license.html":{}}}],["predic",{"_index":349,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":550,"title":{},"body":{"license.html":{}}}],["prepar",{"_index":615,"title":{},"body":{"license.html":{}}}],["print",{"_index":749,"title":{},"body":{"license.html":{}}}],["probabl",{"_index":258,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["product",{"_index":683,"title":{},"body":{"license.html":{}}}],["project",{"_index":226,"title":{},"body":{"contributing.html":{}}}],["promin",{"_index":651,"title":{},"body":{"license.html":{}}}],["properti",{"_index":9,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{}}}],["provid",{"_index":363,"title":{},"body":{"index.html":{},"license.html":{}}}],["publicli",{"_index":616,"title":{},"body":{"license.html":{}}}],["pull",{"_index":268,"title":{},"body":{"contributing.html":{}}}],["purpos",{"_index":270,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["r",{"_index":83,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["rang",{"_index":195,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["ratiodecod",{"_index":430,"title":{},"body":{"index.html":{}}}],["ratiovalu",{"_index":493,"title":{},"body":{"index.html":{}}}],["readabl",{"_index":658,"title":{},"body":{"license.html":{}}}],["readonli",{"_index":10,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"index.html":{}}}],["realli",{"_index":358,"title":{},"body":{"index.html":{}}}],["realloc",{"_index":411,"title":{},"body":{"index.html":{}}}],["reason",{"_index":684,"title":{},"body":{"license.html":{}}}],["receiv",{"_index":600,"title":{},"body":{"license.html":{}}}],["recipi",{"_index":647,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":746,"title":{},"body":{"license.html":{}}}],["redistribut",{"_index":243,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["regard",{"_index":680,"title":{},"body":{"license.html":{}}}],["regexp",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["regexp(/0[.]\\d+/y).map(numb",{"_index":431,"title":{},"body":{"index.html":{}}}],["regexp(/[#]([0",{"_index":433,"title":{},"body":{"index.html":{}}}],["regular",{"_index":405,"title":{},"body":{"index.html":{}}}],["remain",{"_index":577,"title":{},"body":{"license.html":{}}}],["rememb",{"_index":365,"title":{},"body":{"index.html":{}}}],["replac",{"_index":742,"title":{},"body":{"license.html":{}}}],["repres",{"_index":574,"title":{},"body":{"license.html":{}}}],["represent",{"_index":395,"title":{},"body":{"index.html":{}}}],["reproduc",{"_index":614,"title":{},"body":{"license.html":{}}}],["reproduct",{"_index":514,"title":{},"body":{"license.html":{}}}],["request",{"_index":269,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["requir",{"_index":266,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["respons",{"_index":697,"title":{},"body":{"license.html":{}}}],["rest",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["result",{"_index":48,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["retain",{"_index":237,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["return",{"_index":30,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{}}}],["review",{"_index":262,"title":{},"body":{"contributing.html":{}}}],["revis",{"_index":571,"title":{},"body":{"license.html":{}}}],["rgb",{"_index":424,"title":{},"body":{"index.html":{}}}],["rgb(0x003355",{"_index":462,"title":{},"body":{"index.html":{}}}],["rgb(v",{"_index":439,"title":{},"body":{"index.html":{}}}],["rgbdecod",{"_index":432,"title":{},"body":{"index.html":{}}}],["rgbvalu",{"_index":505,"title":{},"body":{"index.html":{}}}],["right",{"_index":731,"title":{},"body":{"license.html":{}}}],["risk",{"_index":701,"title":{},"body":{"license.html":{}}}],["royalti",{"_index":611,"title":{},"body":{"license.html":{}}}],["s",{"_index":43,"title":{},"body":{"classes/CombineErrors.html":{},"classes/DecodeResultBase.html":{},"index.html":{}}}],["safeintegervalu",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["same",{"_index":748,"title":{},"body":{"license.html":{}}}],["satur",{"_index":428,"title":{},"body":{"index.html":{}}}],["save",{"_index":413,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":470,"title":{},"body":{"index.html":{}}}],["section",{"_index":517,"title":{},"body":{"license.html":{}}}],["see",{"_index":248,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["sell",{"_index":624,"title":{},"body":{"license.html":{}}}],["sent",{"_index":589,"title":{},"body":{"license.html":{}}}],["separ",{"_index":578,"title":{},"body":{"license.html":{}}}],["separatedbytimes(match",{"_index":449,"title":{},"body":{"index.html":{}}}],["sequenc",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["servic",{"_index":682,"title":{},"body":{"license.html":{}}}],["set",{"_index":376,"title":{},"body":{"index.html":{}}}],["shall",{"_index":516,"title":{},"body":{"license.html":{}}}],["shape",{"_index":384,"title":{},"body":{"index.html":{}}}],["share",{"_index":544,"title":{},"body":{"license.html":{}}}],["sign",{"_index":250,"title":{},"body":{"contributing.html":{}}}],["signatur",{"_index":775,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["simpl",{"_index":389,"title":{},"body":{"index.html":{}}}],["simpli",{"_index":239,"title":{},"body":{"contributing.html":{}}}],["simplifi",{"_index":400,"title":{},"body":{"index.html":{}}}],["skipnext(eoi",{"_index":456,"title":{},"body":{"index.html":{}}}],["skipnext(match",{"_index":453,"title":{},"body":{"index.html":{}}}],["skipnext(optionalwhitespac",{"_index":443,"title":{},"body":{"index.html":{}}}],["slice",{"_index":412,"title":{},"body":{"index.html":{}}}],["small",{"_index":228,"title":{},"body":{"contributing.html":{}}}],["softwar",{"_index":553,"title":{},"body":{"license.html":{}}}],["sole",{"_index":696,"title":{},"body":{"license.html":{}}}],["somehow",{"_index":369,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"license.html":{}}}],["special",{"_index":712,"title":{},"body":{"license.html":{}}}],["specif",{"_index":758,"title":{},"body":{"license.html":{}}}],["src/.../decoder.t",{"_index":769,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../entity.t",{"_index":347,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.t",{"_index":767,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../result.t",{"_index":768,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../type_level.t",{"_index":770,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/core/decoder.t",{"_index":282,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/result.t",{"_index":62,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/result.ts:26",{"_index":79,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:27",{"_index":81,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:28",{"_index":76,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:31",{"_index":108,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:36",{"_index":85,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:37",{"_index":91,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:39",{"_index":100,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:40",{"_index":102,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:41",{"_index":104,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:43",{"_index":97,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:44",{"_index":95,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:46",{"_index":94,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:47",{"_index":93,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:49",{"_index":110,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/type_level.t",{"_index":776,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/error/combine_errors.t",{"_index":5,"title":{},"body":{"classes/CombineErrors.html":{},"coverage.html":{}}}],["src/error/combine_errors.ts:25",{"_index":19,"title":{},"body":{"classes/CombineErrors.html":{}}}],["src/error/combine_errors.ts:29",{"_index":29,"title":{},"body":{"classes/CombineErrors.html":{}}}],["src/error/custom_error.t",{"_index":51,"title":{},"body":{"classes/CustomError.html":{},"coverage.html":{}}}],["src/error/custom_error.ts:24",{"_index":53,"title":{},"body":{"classes/CustomError.html":{}}}],["src/error/custom_error.ts:28",{"_index":56,"title":{},"body":{"classes/CustomError.html":{}}}],["src/error/decode_error_base.t",{"_index":58,"title":{},"body":{"classes/DecodeErrorBase.html":{},"coverage.html":{}}}],["src/error/decode_error_base.ts:22",{"_index":60,"title":{},"body":{"classes/DecodeErrorBase.html":{}}}],["src/error/entity.t",{"_index":297,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/error/expected_any_of.t",{"_index":140,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"coverage.html":{}}}],["src/error/expected_any_of.ts:38",{"_index":143,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["src/error/expected_any_of.ts:42",{"_index":144,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["src/error/expected_at_least.t",{"_index":151,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"coverage.html":{}}}],["src/error/expected_at_least.ts:25",{"_index":154,"title":{},"body":{"classes/ExpectedAtLeast.html":{}}}],["src/error/expected_at_least.ts:29",{"_index":156,"title":{},"body":{"classes/ExpectedAtLeast.html":{}}}],["src/error/expected_eoi.t",{"_index":160,"title":{},"body":{"classes/ExpectedEoi.html":{},"coverage.html":{}}}],["src/error/expected_eoi.ts:24",{"_index":161,"title":{},"body":{"classes/ExpectedEoi.html":{}}}],["src/error/expected_eoi.ts:28",{"_index":163,"title":{},"body":{"classes/ExpectedEoi.html":{}}}],["src/error/expected_field.t",{"_index":166,"title":{},"body":{"classes/ExpectedField.html":{},"coverage.html":{}}}],["src/error/expected_field.ts:24",{"_index":168,"title":{},"body":{"classes/ExpectedField.html":{}}}],["src/error/expected_field.ts:28",{"_index":170,"title":{},"body":{"classes/ExpectedField.html":{}}}],["src/error/expected_match.t",{"_index":173,"title":{},"body":{"classes/ExpectedMatch.html":{},"coverage.html":{}}}],["src/error/expected_match.ts:24",{"_index":175,"title":{},"body":{"classes/ExpectedMatch.html":{}}}],["src/error/expected_match.ts:28",{"_index":176,"title":{},"body":{"classes/ExpectedMatch.html":{}}}],["src/error/expected_none_of.t",{"_index":178,"title":{},"body":{"classes/ExpectedNoneOf.html":{},"coverage.html":{}}}],["src/error/expected_none_of.ts:26",{"_index":179,"title":{},"body":{"classes/ExpectedNoneOf.html":{}}}],["src/error/expected_none_of.ts:30",{"_index":181,"title":{},"body":{"classes/ExpectedNoneOf.html":{}}}],["src/error/expected_once.t",{"_index":186,"title":{},"body":{"classes/ExpectedOnce.html":{},"coverage.html":{}}}],["src/error/expected_once.ts:25",{"_index":187,"title":{},"body":{"classes/ExpectedOnce.html":{}}}],["src/error/expected_once.ts:29",{"_index":189,"title":{},"body":{"classes/ExpectedOnce.html":{}}}],["src/error/expected_within_range.t",{"_index":191,"title":{},"body":{"classes/ExpectedWithinRange.html":{},"coverage.html":{}}}],["src/error/expected_within_range.ts:24",{"_index":193,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["src/error/expected_within_range.ts:28",{"_index":196,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["src/error/index.t",{"_index":298,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/error/pattern_mismatch.t",{"_index":200,"title":{},"body":{"classes/PatternMismatch.html":{},"coverage.html":{}}}],["src/error/pattern_mismatch.ts:24",{"_index":202,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["src/error/pattern_mismatch.ts:28",{"_index":205,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["src/error/unexpected_eoi.t",{"_index":211,"title":{},"body":{"classes/UnexpectedEoi.html":{},"coverage.html":{}}}],["src/error/unexpected_eoi.ts:24",{"_index":212,"title":{},"body":{"classes/UnexpectedEoi.html":{}}}],["src/error/unexpected_eoi.ts:28",{"_index":215,"title":{},"body":{"classes/UnexpectedEoi.html":{}}}],["src/text/index.t",{"_index":299,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/text/input.t",{"_index":209,"title":{},"body":{"interfaces/TextInput.html":{},"coverage.html":{}}}],["src/value/index.t",{"_index":319,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/value/input.t",{"_index":217,"title":{},"body":{"interfaces/ValueInput.html":{},"coverage.html":{}}}],["start",{"_index":220,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":622,"title":{},"body":{"license.html":{}}}],["statement",{"_index":281,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["sticki",{"_index":409,"title":{},"body":{"index.html":{}}}],["still",{"_index":391,"title":{},"body":{"index.html":{}}}],["stoppag",{"_index":719,"title":{},"body":{"license.html":{}}}],["string",{"_index":31,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"index.html":{}}}],["stringvalu",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["subject",{"_index":603,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":619,"title":{},"body":{"license.html":{}}}],["submiss",{"_index":263,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["submit",{"_index":252,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["subsequ",{"_index":601,"title":{},"body":{"license.html":{}}}],["succ",{"_index":128,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["succe",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["success",{"_index":111,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{}}}],["successfulli",{"_index":372,"title":{},"body":{"index.html":{}}}],["such",{"_index":534,"title":{},"body":{"license.html":{}}}],["super",{"_index":38,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}}}],["super(input",{"_index":114,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["supersed",{"_index":678,"title":{},"body":{"license.html":{}}}],["support",{"_index":727,"title":{},"body":{"license.html":{}}}],["sure",{"_index":457,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":744,"title":{},"body":{"license.html":{}}}],["system",{"_index":592,"title":{},"body":{"license.html":{}}}],["tabl",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":402,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["takecharbetween",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["takecharwhil",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["term",{"_index":512,"title":{},"body":{"license.html":{}}}],["termin",{"_index":641,"title":{},"body":{"license.html":{}}}],["testchar",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["testobject",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["testtyp",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["testvalu",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["text",{"_index":397,"title":{},"body":{"index.html":{},"license.html":{}}}],["textdecod",{"_index":772,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["textinput",{"_index":208,"title":{"interfaces/TextInput.html":{}},"body":{"interfaces/TextInput.html":{},"coverage.html":{},"index.html":{}}}],["theori",{"_index":705,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":582,"title":{},"body":{"license.html":{}}}],["third",{"_index":663,"title":{},"body":{"license.html":{}}}],["this.error",{"_index":40,"title":{},"body":{"classes/CombineErrors.html":{}}}],["this.failur",{"_index":132,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["this.field",{"_index":171,"title":{},"body":{"classes/ExpectedField.html":{}}}],["this.flatmap(v",{"_index":117,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["this.flatmaperror(",{"_index":134,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["this.max",{"_index":198,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["this.messag",{"_index":57,"title":{},"body":{"classes/CustomError.html":{}}}],["this.min",{"_index":157,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"classes/ExpectedWithinRange.html":{}}}],["this.pattern",{"_index":206,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["this.valu",{"_index":121,"title":{},"body":{"classes/DecodeResultBase.html":{},"classes/ExpectedMatch.html":{}}}],["those",{"_index":491,"title":{},"body":{"index.html":{},"license.html":{}}}],["through",{"_index":518,"title":{},"body":{"license.html":{}}}],["throw",{"_index":125,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["time",{"_index":367,"title":{},"body":{"index.html":{}}}],["titl",{"_index":693,"title":{},"body":{"license.html":{}}}],["tort",{"_index":706,"title":{},"body":{"license.html":{}}}],["tostr",{"_index":13,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeErrorBase.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{}}}],["track",{"_index":368,"title":{},"body":{"index.html":{},"license.html":{}}}],["trade",{"_index":681,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":654,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":625,"title":{},"body":{"license.html":{}}}],["transform",{"_index":474,"title":{},"body":{"index.html":{},"license.html":{}}}],["translat",{"_index":556,"title":{},"body":{"license.html":{}}}],["true",{"_index":123,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["tupletounion",{"_index":773,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tuplevalu",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["two",{"_index":374,"title":{},"body":{"index.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"interfaces/ValueInput.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":765,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefineablevalu",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["undefinedvalu",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["under",{"_index":527,"title":{},"body":{"license.html":{}}}],["unexpect",{"_index":213,"title":{},"body":{"classes/UnexpectedEoi.html":{}}}],["unexpectedeoi",{"_index":210,"title":{"classes/UnexpectedEoi.html":{}},"body":{"classes/UnexpectedEoi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["union",{"_index":525,"title":{},"body":{"license.html":{}}}],["unless",{"_index":674,"title":{},"body":{"license.html":{}}}],["uppercas",{"_index":351,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uppercase_lett",{"_index":350,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uppercaselett",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["us",{"_index":242,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["util",{"_index":377,"title":{},"body":{"index.html":{}}}],["v",{"_index":495,"title":{},"body":{"index.html":{}}}],["v.",{"_index":503,"title":{},"body":{"index.html":{}}}],["v.l",{"_index":504,"title":{},"body":{"index.html":{}}}],["v[1",{"_index":451,"title":{},"body":{"index.html":{}}}],["v[2",{"_index":452,"title":{},"body":{"index.html":{}}}],["valid",{"_index":473,"title":{},"body":{"index.html":{}}}],["valu",{"_index":27,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["valuedecod",{"_index":774,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["valueinput",{"_index":216,"title":{"interfaces/ValueInput.html":{}},"body":{"interfaces/ValueInput.html":{},"coverage.html":{},"index.html":{}}}],["values.length",{"_index":148,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["variabl",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["verbal",{"_index":587,"title":{},"body":{"license.html":{}}}],["version",{"_index":507,"title":{},"body":{"license.html":{}}}],["void",{"_index":84,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["want",{"_index":359,"title":{},"body":{"index.html":{}}}],["warranti",{"_index":687,"title":{},"body":{"license.html":{}}}],["we'd",{"_index":222,"title":{},"body":{"contributing.html":{}}}],["wherev",{"_index":662,"title":{},"body":{"license.html":{}}}],["whether",{"_index":535,"title":{},"body":{"license.html":{}}}],["whitespac",{"_index":316,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["whole",{"_index":575,"title":{},"body":{"license.html":{}}}],["within",{"_index":194,"title":{},"body":{"classes/ExpectedWithinRange.html":{},"index.html":{},"license.html":{}}}],["without",{"_index":645,"title":{},"body":{"license.html":{}}}],["withposit",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["work",{"_index":560,"title":{},"body":{"license.html":{}}}],["worldwid",{"_index":607,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":460,"title":{},"body":{"index.html":{}}}],["write",{"_index":404,"title":{},"body":{"index.html":{},"license.html":{}}}],["written",{"_index":588,"title":{},"body":{"license.html":{}}}],["y",{"_index":408,"title":{},"body":{"index.html":{}}}],["you'v",{"_index":254,"title":{},"body":{"contributing.html":{}}}],["yyyi",{"_index":754,"title":{},"body":{"license.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/CombineErrors.html":{"url":"classes/CombineErrors.html","title":"class - CombineErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CombineErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/combine_errors.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DecodeErrorBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: DecodeError[])\n                    \n                \n                        \n                            \n                                Defined in src/error/combine_errors.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    DecodeError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'combine-errors'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/combine_errors.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/combine_errors.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DecodeErrorBase\n\n                                \n                            \n                        \n                            \n                                    Defined in DecodeErrorBase:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DecodeError } from './'\nimport { DecodeErrorBase } from './decode_error_base'\n\nexport class CombineErrors extends DecodeErrorBase {\n  readonly kind: 'combine-errors' = 'combine-errors'\n  constructor(readonly errors: DecodeError[]) {\n    super()\n  }\n  toString() {\n    const errors: string = this.errors\n      .map(e => e.toString())\n      .map(s => `  - ${s}`)\n      .join('\\n')\n    return `expected one of:\\n${errors}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomError.html":{"url":"classes/CustomError.html","title":"class - CustomError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/custom_error.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DecodeErrorBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/custom_error.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'custom-error'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/custom_error.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/custom_error.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DecodeErrorBase\n\n                                \n                            \n                        \n                            \n                                    Defined in DecodeErrorBase:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DecodeErrorBase } from './decode_error_base'\n\nexport class CustomError extends DecodeErrorBase {\n  readonly kind: 'custom-error' = 'custom-error'\n  constructor(readonly message: string) {\n    super()\n  }\n  toString() {\n    return this.message\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DecodeErrorBase.html":{"url":"classes/DecodeErrorBase.html","title":"class - DecodeErrorBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DecodeErrorBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/decode_error_base.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/decode_error_base.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class DecodeErrorBase {\n  abstract toString(): string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DecodeResultBase.html":{"url":"classes/DecodeResultBase.html","title":"class - DecodeResultBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DecodeResultBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/result.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _E\n                            \n                            \n                                    Readonly\n                                _I\n                            \n                            \n                                    Readonly\n                                _O\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                flatMap\n                            \n                            \n                                    Abstract\n                                flatMapError\n                            \n                            \n                                    Abstract\n                                getUnsafeFailure\n                            \n                            \n                                    Abstract\n                                getUnsafeSuccess\n                            \n                            \n                                    Abstract\n                                isFailure\n                            \n                            \n                                    Abstract\n                                isSuccess\n                            \n                            \n                                    Abstract\n                                map\n                            \n                            \n                                    Abstract\n                                mapError\n                            \n                            \n                                    Abstract\n                                mapInput\n                            \n                            \n                                    Abstract\n                                match\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: In)\n                    \n                \n                        \n                            \n                                Defined in src/core/result.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                    In\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            _E\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _E:     Err\n\n                    \n                \n                    \n                        \n                            Type :     Err\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/result.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            _I\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _I:     In\n\n                    \n                \n                    \n                        \n                            Type :     In\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/result.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            _O\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _O:     Out\n\n                    \n                \n                    \n                        \n                            Type :     Out\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/result.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            flatMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        flatMap(f: (r: Out) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:36\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        Out2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            flatMapError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        flatMapError(f: (r: Err) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:37\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        Err2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            getUnsafeFailure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUnsafeFailure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Err\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            getUnsafeSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUnsafeSuccess()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Out\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            isFailure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isFailure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     DecodeFailure\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            isSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isSuccess()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     DecodeSuccess\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        map(f: (r: Out) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:39\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        Out2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            mapError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mapError(f: (r: Err) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:40\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        Err2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            mapInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mapInput(f: (i: In) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:41\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        In2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        match(o: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:31\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        O\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     O\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        abstract class DecodeResultBase {\n  readonly _I!: In\n  readonly _O!: Out\n  readonly _E!: Err\n\n  constructor(readonly input: In) {}\n  abstract match(o: {\n    success: (s: DecodeSuccess) => O\n    failure: (f: DecodeFailure) => O\n  }): O\n\n  abstract flatMap(f: (r: Out) => DecodeResult): DecodeResult\n  abstract flatMapError(f: (r: Err) => DecodeResult): DecodeResult\n\n  abstract map(f: (r: Out) => Out2): DecodeResult\n  abstract mapError(f: (r: Err) => Err2): DecodeResult\n  abstract mapInput(f: (i: In) => In2): DecodeResult\n\n  abstract isSuccess(): this is DecodeSuccess\n  abstract isFailure(): this is DecodeFailure\n\n  abstract getUnsafeSuccess(): Out\n  abstract getUnsafeFailure(): Err\n\n  abstract toString(): string\n}\n\nexport class DecodeSuccess extends DecodeResultBase {\n  readonly kind = 'decode-success'\n  constructor(input: In, readonly value: Out) {\n    super(input)\n  }\n\n  match(o: { success: (s: DecodeSuccess) => O; failure: (f: DecodeFailure) => O }): O {\n    return o.success(this)\n  }\n\n  flatMap(f: (r: Out) => DecodeResult): DecodeResult {\n    return f(this.value)\n  }\n  map(f: (r: Out) => Out2): DecodeResult {\n    return this.flatMap(v => new DecodeSuccess(this.input, f(v)))\n  }\n  flatMapError(f: (r: Err) => DecodeResult): DecodeResult {\n    return new DecodeSuccess(this.input, this.value)\n  }\n  mapError(f: (r: Err) => Err2): DecodeResult {\n    return new DecodeSuccess(this.input, this.value)\n  }\n  mapInput(f: (i: In) => In2): DecodeResult {\n    return new DecodeSuccess(f(this.input), this.value)\n  }\n\n  isSuccess(): this is DecodeSuccess {\n    return true\n  }\n  isFailure(): this is DecodeFailure {\n    return false\n  }\n\n  getUnsafeSuccess(): Out {\n    return this.value\n  }\n  getUnsafeFailure(): Err {\n    throw new Error(\"can't get failure from success\")\n  }\n\n  toString(): string {\n    return `DecodeSuccess: ${JSON.stringify(this.input)}`\n  }\n}\n\nexport class DecodeFailure extends DecodeResultBase {\n  readonly kind = 'decode-failure'\n  constructor(input: In, readonly failure: Err) {\n    super(input)\n  }\n\n  match(o: {\n    success: (succ: DecodeSuccess) => O\n    failure: (fail: DecodeFailure) => O\n  }): O {\n    return o.failure(this)\n  }\n\n  flatMap(f: (r: Out) => DecodeResult): DecodeResult {\n    return new DecodeFailure(this.input, this.failure)\n  }\n  map(f: (r: Out) => Out2): DecodeResult {\n    return new DecodeFailure(this.input, this.failure)\n  }\n  flatMapError(f: (r: Err) => DecodeResult): DecodeResult {\n    return f(this.failure)\n  }\n  mapError(f: (r: Err) => Err2): DecodeResult {\n    return this.flatMapError(e => new DecodeFailure(this.input, f(e)))\n  }\n  mapInput(f: (i: In) => In2): DecodeResult {\n    return new DecodeFailure(f(this.input), this.failure)\n  }\n\n  isSuccess(): this is DecodeSuccess {\n    return false\n  }\n  isFailure(): this is DecodeFailure {\n    return true\n  }\n  getUnsafeSuccess(): Out {\n    throw new Error(\"can't get success from failure\")\n  }\n  getUnsafeFailure(): Err {\n    return this.failure\n  }\n\n  toString(): string {\n    return `DecodeFailure: ${JSON.stringify(this.input)}`\n  }\n}\n\nexport type DecodeResult = DecodeSuccess | DecodeFailure\n\nexport const success = (input: In, result: Out): DecodeResult =>\n  new DecodeSuccess(input, result)\nexport const failure = (input: In, failure: Err): DecodeResult =>\n  new DecodeFailure(input, failure)\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedAnyOf.html":{"url":"classes/ExpectedAnyOf.html","title":"class - ExpectedAnyOf","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedAnyOf\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_any_of.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DecodeErrorBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: Entity, values: string[])\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_any_of.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Entity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-any-of'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_any_of.ts:38\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_any_of.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DecodeErrorBase\n\n                                \n                            \n                        \n                            \n                                    Defined in DecodeErrorBase:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DecodeErrorBase } from './decode_error_base'\nimport { Entity, pluralize } from './entity'\n\nexport const concatOr = (values: string[]) => {\n  const length = values.length\n  if (length === 0) {\n    return ''\n  } else if (length \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedAtLeast.html":{"url":"classes/ExpectedAtLeast.html","title":"class - ExpectedAtLeast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedAtLeast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_at_least.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DecodeErrorBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(min: number, entity: Entity)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_at_least.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Entity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-at-least'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_at_least.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_at_least.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DecodeErrorBase\n\n                                \n                            \n                        \n                            \n                                    Defined in DecodeErrorBase:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DecodeErrorBase } from './decode_error_base'\nimport { Entity, pluralize } from './entity'\n\nexport class ExpectedAtLeast extends DecodeErrorBase {\n  readonly kind: 'expected-at-least' = 'expected-at-least'\n  constructor(readonly min: number, readonly entity: Entity) {\n    super()\n  }\n  toString() {\n    return `expected at least ${this.min} ${pluralize(this.entity, this.min)}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedEoi.html":{"url":"classes/ExpectedEoi.html","title":"class - ExpectedEoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedEoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_eoi.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DecodeErrorBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_eoi.ts:24\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-eot'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_eoi.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_eoi.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DecodeErrorBase\n\n                                \n                            \n                        \n                            \n                                    Defined in DecodeErrorBase:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DecodeErrorBase } from './decode_error_base'\n\nexport class ExpectedEoi extends DecodeErrorBase {\n  readonly kind: 'expected-eot' = 'expected-eot'\n  constructor() {\n    super()\n  }\n  toString() {\n    return `expected end of input`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedField.html":{"url":"classes/ExpectedField.html","title":"class - ExpectedField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_field.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DecodeErrorBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_field.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-field'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_field.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_field.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DecodeErrorBase\n\n                                \n                            \n                        \n                            \n                                    Defined in DecodeErrorBase:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DecodeErrorBase } from './decode_error_base'\n\nexport class ExpectedField extends DecodeErrorBase {\n  readonly kind: 'expected-field' = 'expected-field'\n  constructor(readonly field: string) {\n    super()\n  }\n  toString() {\n    return `expected field \"${this.field}\"`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedMatch.html":{"url":"classes/ExpectedMatch.html","title":"class - ExpectedMatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedMatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_match.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DecodeErrorBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_match.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-match'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_match.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_match.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DecodeErrorBase\n\n                                \n                            \n                        \n                            \n                                    Defined in DecodeErrorBase:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DecodeErrorBase } from './decode_error_base'\n\nexport class ExpectedMatch extends DecodeErrorBase {\n  readonly kind: 'expected-match' = 'expected-match'\n  constructor(readonly value: string) {\n    super()\n  }\n  toString() {\n    return `expected ${this.value}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedNoneOf.html":{"url":"classes/ExpectedNoneOf.html","title":"class - ExpectedNoneOf","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedNoneOf\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_none_of.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DecodeErrorBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: Entity, values: string[])\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_none_of.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Entity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'no-char-of-error'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_none_of.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_none_of.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DecodeErrorBase\n\n                                \n                            \n                        \n                            \n                                    Defined in DecodeErrorBase:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DecodeErrorBase } from './decode_error_base'\nimport { Entity, pluralize } from './entity'\nimport { concatOr } from './expected_any_of'\n\nexport class ExpectedNoneOf extends DecodeErrorBase {\n  readonly kind: 'no-char-of-error' = 'no-char-of-error'\n  constructor(readonly entity: Entity, readonly values: string[]) {\n    super()\n  }\n  toString() {\n    return `expected no ${pluralize(this.entity, 1)} like ${concatOr(this.values)}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedOnce.html":{"url":"classes/ExpectedOnce.html","title":"class - ExpectedOnce","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedOnce\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_once.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DecodeErrorBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: Entity)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_once.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Entity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-once'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_once.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_once.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DecodeErrorBase\n\n                                \n                            \n                        \n                            \n                                    Defined in DecodeErrorBase:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DecodeErrorBase } from './decode_error_base'\nimport { Entity, pluralize } from './entity'\n\nexport class ExpectedOnce extends DecodeErrorBase {\n  readonly kind: 'expected-once' = 'expected-once'\n  constructor(readonly entity: Entity) {\n    super()\n  }\n  toString() {\n    return `expected a ${pluralize(this.entity, 1)}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedWithinRange.html":{"url":"classes/ExpectedWithinRange.html","title":"class - ExpectedWithinRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedWithinRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_within_range.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DecodeErrorBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(min: string, max: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_within_range.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        max\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-within-range'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_within_range.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_within_range.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DecodeErrorBase\n\n                                \n                            \n                        \n                            \n                                    Defined in DecodeErrorBase:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DecodeErrorBase } from './decode_error_base'\n\nexport class ExpectedWithinRange extends DecodeErrorBase {\n  readonly kind: 'expected-within-range' = 'expected-within-range'\n  constructor(readonly min: string, readonly max: string) {\n    super()\n  }\n  toString() {\n    return `expected between ${this.min} and ${this.max}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatternMismatch.html":{"url":"classes/PatternMismatch.html","title":"class - PatternMismatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatternMismatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/pattern_mismatch.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DecodeErrorBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pattern: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/pattern_mismatch.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pattern\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'pattern-mismatch'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/pattern_mismatch.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/pattern_mismatch.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DecodeErrorBase\n\n                                \n                            \n                        \n                            \n                                    Defined in DecodeErrorBase:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DecodeErrorBase } from './decode_error_base'\n\nexport class PatternMismatch extends DecodeErrorBase {\n  readonly kind: 'pattern-mismatch' = 'pattern-mismatch'\n  constructor(readonly pattern: string) {\n    super()\n  }\n  toString() {\n    return `expected to match pattern ${this.pattern}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextInput.html":{"url":"interfaces/TextInput.html","title":"interface - TextInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TextInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text/input.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                                \n                                        input\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TextInput {\n  readonly input: string\n  readonly index: number\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnexpectedEoi.html":{"url":"classes/UnexpectedEoi.html","title":"class - UnexpectedEoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnexpectedEoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/unexpected_eoi.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DecodeErrorBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/error/unexpected_eoi.ts:24\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'unexpected-eoi'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/unexpected_eoi.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/unexpected_eoi.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DecodeErrorBase\n\n                                \n                            \n                        \n                            \n                                    Defined in DecodeErrorBase:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DecodeErrorBase } from './decode_error_base'\n\nexport class UnexpectedEoi extends DecodeErrorBase {\n  readonly kind: 'unexpected-eoi' = 'unexpected-eoi'\n  constructor() {\n    super()\n  }\n  toString() {\n    return `unexpected end of input`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValueInput.html":{"url":"interfaces/ValueInput.html","title":"interface - ValueInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValueInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/value/input.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        input\n                                \n                                \n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     (string | number)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (string | number)[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ValueInput {\n  readonly input: any\n  readonly path: (string | number)[]\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nHow to Contribute\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\nContributor License Agreement\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to https://cla.developers.google.com/ to see\nyour current agreements on file or to sign a new one.\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\nCode reviews\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\nGitHub Help for more\ninformation on using pull requests.\nCommunity Guidelines\nThis project follows\nGoogle's Open Source Community Guidelines.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                class\n            \n            \n                Decoder\n            \n            \n                88 %\n                (23/26)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                fail\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                lazy\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                oneOf\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                sequence\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                succeed\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                class\n            \n            \n                DecodeFailure\n            \n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                class\n            \n            \n                DecodeResultBase\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                class\n            \n            \n                DecodeSuccess\n            \n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                variable\n            \n            \n                failure\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                variable\n            \n            \n                success\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error/combine_errors.ts\n            \n            \n                class\n            \n            \n                CombineErrors\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/error/custom_error.ts\n            \n            \n                class\n            \n            \n                CustomError\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/error/decode_error_base.ts\n            \n            \n                class\n            \n            \n                DecodeErrorBase\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/error/entity.ts\n            \n            \n                variable\n            \n            \n                pluralize\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error/expected_any_of.ts\n            \n            \n                class\n            \n            \n                ExpectedAnyOf\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/error/expected_any_of.ts\n            \n            \n                variable\n            \n            \n                concatOr\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error/expected_at_least.ts\n            \n            \n                class\n            \n            \n                ExpectedAtLeast\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/error/expected_eoi.ts\n            \n            \n                class\n            \n            \n                ExpectedEoi\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/error/expected_field.ts\n            \n            \n                class\n            \n            \n                ExpectedField\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/error/expected_match.ts\n            \n            \n                class\n            \n            \n                ExpectedMatch\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/error/expected_none_of.ts\n            \n            \n                class\n            \n            \n                ExpectedNoneOf\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/error/expected_once.ts\n            \n            \n                class\n            \n            \n                ExpectedOnce\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/error/expected_within_range.ts\n            \n            \n                class\n            \n            \n                ExpectedWithinRange\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/error/index.ts\n            \n            \n                variable\n            \n            \n                DecodeError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error/pattern_mismatch.ts\n            \n            \n                class\n            \n            \n                PatternMismatch\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/error/unexpected_eoi.ts\n            \n            \n                class\n            \n            \n                UnexpectedEoi\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                char\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                decodeText\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                digit\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                digits\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                eoi\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                failureToString\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                \n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                letter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                letters\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                lowerCaseLetter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                lowerCaseLetters\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                make\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                match\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                matchAnyCharOf\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                matchInsensitive\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                matchNoCharOf\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                optionalWhitespace\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                regexp\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                rest\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                takeCharBetween\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                takeCharWhile\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                testChar\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                upperCaseLetter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                upperCaseLetters\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                whitespace\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                withPosition\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/input.ts\n            \n            \n                interface\n            \n            \n                TextInput\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                anyArrayValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                anyValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                arrayValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                booleanValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                decodeValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                failureToString\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                finiteNumberValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                integerValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                isToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                literalValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                make\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                nullableValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                nullValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                numberValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                objectValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                optionalValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                pathToString\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                safeIntegerValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                stringValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                testObject\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                testType\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                testValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                tupleValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                undefineableValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                undefinedValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/input.ts\n            \n            \n                interface\n            \n            \n                ValueInput\n            \n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Entity   (src/.../entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/error/entity.ts\n    \n        \n            \n                \n                    \n                        \n                        Entity\n                    \n                \n                        \n                            \n                                 CHARACTER\n                            \n                        \n                        \n                            \n                                Value : character\n                            \n                        \n                        \n                            \n                                 PREDICATE\n                            \n                        \n                        \n                            \n                                Value : predicate\n                            \n                        \n                        \n                            \n                                 LETTER\n                            \n                        \n                        \n                            \n                                Value : letter\n                            \n                        \n                        \n                            \n                                 UPPERCASE_LETTER\n                            \n                        \n                        \n                            \n                                Value : uppercase letter\n                            \n                        \n                        \n                            \n                                 LOWER_CASE_LETTER\n                            \n                        \n                        \n                            \n                                Value : lowercase letter\n                            \n                        \n                        \n                            \n                                 DIGIT\n                            \n                        \n                        \n                            \n                                Value : digit\n                            \n                        \n                        \n                            \n                                 WHITESPACE\n                            \n                        \n                        \n                            \n                                Value : whitespace\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nParTSing\nParTSing is a decoder combinator library. You can use it to build parsers/decoders from string or really any input values.\nIf you want full control over what to decode your should start from partsing/core/decoder. It provides 3 types parameters\n\nIn for the input. Remember that you will need to decode one portion of your input at the time and your input probably needs to track somehow the current position.\nOut it's the type of the value if successfully decoded.\nErr it's the type of the failure returned when the parser fails.\n\nThe library provides two additional set of utility functions to decode string values (partsing/text) and native JS values (partsing/value).\nDecoder Error\nIf you adopt the generic Decoder directly, you can define the shape of your error. The library provides a DecoderError type that should fit most decoding needs. The type of errors available are defined in partsing/error.\nDecoderError provides a simple method to debug the result of the decoding (toString) but still leaves the flexibility to give granular control on the representation of the error.\nBoth [Text Decoding] and [Value Decoding] use DecodeError.\nText Decoding\nTo be able to keep track of the position of the decoding within a string, Text Decoding uses TextInput to track both the entire text input and the current index.\nThe decodeText function simplifies the inputs and outputs of decoding text. It takes a text decoder (Decoder) and return a function that takes a string input and returns a DecodeResult (where input and error are of type string).\nIf you intend to write your own regular expressions decoder functions, consider using the y (sticky) flag. When used, there is no need to reallocate slices of the input string saving memory and CPU cycles. The sticky flag is not available for all implementations of JS.\nValue Decoding\nTo be able to keep track of the position of the decoding within any value, Value Decoding uses ValueInput to track both the input value and the current position within it using a path. path is an array of either string (object field name) or number (array/tuple index position).\nThe decodeValue function simplifies the inputs and outputs of decoding values. It takes a value decoder (Decoder) and return a function that takes any and returns a DecodeResult (where input is of type any and error is of type string).\nExample\nA simple decoder combinator to parse color values from strings into class instances.\nclass RGB {\n  constructor(readonly rgb: number) {}\n}\n\nclass Grey {\n  constructor(readonly value: number) {}\n}\n\nclass HSL {\n  constructor(readonly hue: number, readonly saturation: number, readonly lightness: number) {}\n}\n\ntype Color = RGB | Grey | HSL\n\nconst ratioDecoder = regexp(/0[.]\\d+/y).map(Number)\nconst rgbDecoder   = regexp(/[#]([0-9a-f]{6})/iy, 1)\n                       .map(v => parseInt(v, 16))\n                       .map(v => new RGB(v))\nconst greyDecoder  = matchInsensitive('grey').or(DecodeError.combine, matchInsensitive('gray'))\n                       .skipNext(optionalWhitespace)\n                       .pickNext(ratioDecoder)\n                       .map(v => new Grey(v))\nconst hslDecoder   = matchInsensitive('hsl(')\n                       .pickNext(\n                         ratioDecoder\n                           .separatedByTimes(match(','), 3)\n                           .map(v => new HSL(v[0], v[1], v[2]))\n                       )\n                       .skipNext(match(')'))\n\nconst colorTextDecoder = decodeText(\n    oneOf(\n      DecodeError.combine,\n      rgbDecoder,\n      greyDecoder,\n      hslDecoder\n    ).skipNext(eoi) // make sure that there is nothing left to decode\n  )\n\n// all results are wrapped in a DecodeSuccess\n// colorTextDecoder('#003355')          == new RGB(0x003355)\n// colorTextDecoder('gray 0.3')         == new Grey(0.3)\n// colorTextDecoder('gray0.2')          == new Grey(0.2)\n// colorTextDecoder('HSL(0.1,0.2,0.3)') == new HSL(0.1,0.2,0.3)Another scenario where decoding comes in handy is to validate, type and transform payloads from JSON requests. You can decode a value (after being parsed by JSON.parse) into one of the Color types described above.\nA few examples of valid JSON payloads:\n\"#003366\"{ \"grey\": 0.5 }{ \"kind\": \"hsl\", \"h\": 0.2, \"s\": 0.5, \"l\": 0.8 }Here is a colorValueDecoder definition that can deal with those cases:\nconst ratioValue = numberValue.test(v => v >= 0 && v  ({ input, index: 0 }), v => v)\n\n// example: { \"grey\": 0.5 }\nconst greyValue = objectValue(\n    { grey: ratioValue },\n    [] // the empty array means that no fields are optional\n  ).map(v => new Grey(v.grey))\n\n// example: { \"kind\": \"hsl\", \"h\": 0.2, \"s\": 0.5, \"l\": 0.8 }\nconst hslValue = objectValue(\n    {\n      kind: literalValue('hsl'),\n      h: ratioValue,\n      s: ratioValue,\n      l: ratioValue\n    },\n    []\n  ).map(v => new HSL(v.h, v.s, v.l))\n\nconst colorValueDecoder = decodeValue(\n    oneOf(\n      DecodeError.combine,\n      rgbValue,\n      greyValue,\n      hslValue\n    )\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DecodeError   (src/.../index.ts)\n                        \n                        \n                            DecodeResult   (src/.../result.ts)\n                        \n                        \n                            Decoding   (src/.../decoder.ts)\n                        \n                        \n                            Error   (src/.../type_level.ts)\n                        \n                        \n                            Input   (src/.../type_level.ts)\n                        \n                        \n                            MarkOptionalFields   (src/.../type_level.ts)\n                        \n                        \n                            Output   (src/.../type_level.ts)\n                        \n                        \n                            TextDecoder   (src/.../index.ts)\n                        \n                        \n                            TupleToUnion   (src/.../type_level.ts)\n                        \n                        \n                            ValueDecoder   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/error/index.ts\n    \n        \n            \n                \n                    \n                        \n                        DecodeError\n                    \n                \n                \n                    \n                        DecodeError:     CustomError | ExpectedAnyOf | ExpectedAtLeast | ExpectedEoi | ExpectedField | ExpectedMatch | ExpectedNoneOf | ExpectedOnce | CombineErrors | ExpectedWithinRange | PatternMismatch | UnexpectedEoi\n\n                    \n                \n            \n        \n\n    src/core/result.ts\n    \n        \n            \n                \n                    \n                        \n                        DecodeResult\n                    \n                \n                \n                    \n                        DecodeResult:     DecodeSuccess | DecodeFailure\n\n                    \n                \n            \n        \n\n    src/core/decoder.ts\n    \n        \n            \n                \n                    \n                        \n                        Decoding\n                    \n                \n                    \n                        \n                            Type signature for a function that takes an input and decodes it into a\nresult object.\n\n                        \n                    \n                \n                    \n                        Decoding:     function\n\n                    \n                \n            \n        \n\n    src/core/type_level.ts\n    \n        \n            \n                \n                    \n                        \n                        Error\n                    \n                \n                \n                    \n                        Error:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Input\n                    \n                \n                \n                    \n                        Input:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        MarkOptionalFields\n                    \n                \n                \n                    \n                        MarkOptionalFields:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Output\n                    \n                \n                \n                    \n                        Output:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TupleToUnion\n                    \n                \n                \n                    \n                        TupleToUnion:      | never\n\n                    \n                \n            \n        \n\n    src/text/index.ts\n    \n        \n            \n                \n                    \n                        \n                        TextDecoder\n                    \n                \n                \n                    \n                        TextDecoder:     Decoder\n\n                    \n                \n            \n        \n\n    src/value/index.ts\n    \n        \n            \n                \n                    \n                        \n                        ValueDecoder\n                    \n                \n                \n                    \n                        ValueDecoder:     Decoder\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
