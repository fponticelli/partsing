var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/CombineErrors.html",[0,0.201,1,1.744]],["body/classes/CombineErrors.html",[0,0.306,1,2.654,2,0.542,3,0.391,4,0.322,5,2.802,6,0.257,7,0.693,8,0.655,9,0.69,10,0.799,11,0.929,12,0.912,13,3.435,14,3.085,15,0.764,16,4.395,17,0.808,18,0.044,19,0.624,20,0.391,21,0.713,22,0.982,23,0.808,24,0.624,25,3.366,26,3.435,27,0.693,28,0.594,29,1.618,30,0.542,31,0.912,32,2.074,33,3.435,34,4.395,35,3.435,36,2.385,37,3.435,38,0.912,39,1.825,40,3.435,41,0.033,42,0.033]],["title/classes/CustomError.html",[0,0.201,43,1.744]],["body/classes/CustomError.html",[0,0.315,2,0.565,3,0.408,4,0.337,6,0.268,7,0.712,8,0.668,9,0.701,10,0.821,11,0.943,12,0.951,15,0.78,17,0.843,18,0.044,19,0.651,20,0.514,21,0.744,22,0.943,23,0.843,24,0.651,27,0.712,28,0.701,30,0.565,31,0.951,41,0.034,42,0.034,43,2.726,44,2.924,45,0.744,46,3.585,47,5.189,48,4.944,49,3.585,50,4.516,51,3.585,52,3.585]],["title/classes/DecodeResultBase.html",[0,0.201,53,2.006]],["body/classes/DecodeResultBase.html",[0,0.223,2,0.207,3,0.15,4,0.123,6,0.098,7,0.341,8,0.644,9,0.292,10,0.393,11,0.69,12,0.574,15,0.774,17,1.121,18,0.045,19,0.729,20,0.588,21,0.833,24,0.239,27,0.861,28,0.432,30,0.557,31,0.349,32,1.306,36,1.502,41,0.024,42,0.024,45,0.273,53,2.218,54,0.913,55,3.777,56,1.072,57,1.072,58,1.072,59,2.767,60,3.183,61,3.194,62,3.194,63,3.194,64,5.51,65,2.163,66,2.163,67,3.797,68,3.797,69,3.797,70,3.797,71,2.163,72,2.163,73,2.163,74,2.756,75,2.163,76,1.196,77,3.489,78,1.315,79,3.033,80,1.315,81,3.194,82,4.969,83,3.53,84,1.315,85,3.53,86,4.013,87,2.131,88,3.194,89,1.315,90,3.53,91,1.315,92,1.315,93,1.315,94,1.315,95,3.194,96,1.315,97,3.194,98,1.315,99,3.194,100,1.315,101,3.194,102,3.194,103,2.163,104,1.315,105,4.68,106,1.315,107,3.274,108,2.7,109,2.163,110,0.645,111,2.163,112,1.315,113,1.315,114,1.315,115,2.487,116,2.756,117,1.315,118,2.605,119,1.315,120,2.163,121,2.163,122,2.163,123,2.163,124,2.163,125,1.315,126,0.699,127,1.315,128,2.756,129,3.194,130,1.315,131,1.315,132,1.315,133,1.315,134,1.315,135,1.315]],["title/classes/ExpectedAnyOf.html",[0,0.201,136,1.744]],["body/classes/ExpectedAnyOf.html",[0,0.232,2,0.525,3,0.379,4,0.312,6,0.249,7,0.679,8,0.582,9,0.645,10,0.782,11,0.867,12,0.883,15,0.753,17,0.783,18,0.044,19,0.605,20,0.379,21,0.69,22,0.605,23,0.783,24,0.867,27,0.679,28,0.682,29,1.567,30,0.525,32,2.599,38,0.883,39,2.288,41,0.033,42,0.036,45,1.047,87,2.008,136,2.008,137,2.713,138,2.523,139,2.713,140,1.567,141,2.008,142,2.31,143,4.305,144,3.326,145,1.768,146,2.713,147,2.008,148,3.326,149,2.713,150,2.713,151,3.326,152,3.326,153,2.31,154,4.773,155,3.326,156,2.31]],["title/classes/ExpectedAtLeast.html",[0,0.201,157,1.744]],["body/classes/ExpectedAtLeast.html",[0,0.302,2,0.529,3,0.382,4,0.315,6,0.251,7,0.683,8,0.684,9,0.684,10,0.787,11,0.92,12,0.89,15,0.756,17,0.789,18,0.044,19,0.61,20,0.382,21,0.696,22,0.787,23,0.789,24,0.61,27,0.683,28,0.453,29,1.581,30,0.529,31,0.89,38,1.344,41,0.033,42,0.033,45,0.696,138,2.656,145,1.783,157,2.614,158,2.737,159,4.329,160,4.131,161,3.006,162,2.737,163,2.894,164,4.329,165,3.355,166,2.026,167,3.532,168,2.33]],["title/classes/ExpectedEoi.html",[0,0.201,169,1.744]],["body/classes/ExpectedEoi.html",[0,0.324,2,0.593,3,0.428,4,0.353,6,0.282,7,0.734,8,0.683,9,0.713,10,0.845,11,0.959,15,0.734,18,0.043,22,0.683,23,0.885,24,0.683,27,0.734,28,0.508,30,0.593,38,1.439,41,0.035,42,0.035,45,0.78,76,1.742,169,2.809,170,3.067,171,3.23,172,5.052,173,3.76,174,3.76]],["title/classes/ExpectedField.html",[0,0.201,175,1.744]],["body/classes/ExpectedField.html",[0,0.315,2,0.565,3,0.408,4,0.337,6,0.268,7,0.712,8,0.668,9,0.701,10,0.821,11,0.943,12,0.951,15,0.78,17,0.843,18,0.044,19,0.651,20,0.408,21,0.744,22,0.651,23,0.843,24,0.651,27,0.712,28,0.701,30,0.565,31,0.951,38,1.377,41,0.034,42,0.034,45,0.744,175,2.726,176,2.924,177,3.585,178,3.585,179,3.585,180,4.516,181,3.297,182,3.585,183,3.585]],["title/classes/ExpectedMatch.html",[0,0.201,184,1.744]],["body/classes/ExpectedMatch.html",[0,0.313,2,0.56,3,0.405,4,0.333,6,0.266,7,0.708,8,0.665,9,0.699,10,0.816,11,0.94,12,0.942,15,0.776,17,0.836,18,0.043,19,0.645,20,0.405,21,0.737,22,0.645,23,0.836,24,0.895,27,0.708,28,0.721,30,0.56,31,0.942,38,1.415,41,0.034,42,0.041,45,0.737,118,2.897,126,1.887,140,1.673,184,2.71,185,2.897,186,3.552,187,3.552,188,4.489,189,3.552]],["title/classes/ExpectedNoneOf.html",[0,0.201,190,1.744]],["body/classes/ExpectedNoneOf.html",[0,0.291,2,0.501,3,0.362,4,0.299,6,0.238,7,0.659,8,0.67,9,0.67,10,0.76,11,0.902,12,0.844,15,0.736,17,0.748,18,0.044,19,0.578,20,0.362,21,0.66,22,0.937,23,0.748,24,0.849,27,0.659,28,0.67,29,1.969,30,0.501,31,0.844,38,1.239,41,0.032,42,0.032,45,1.098,110,1.479,126,2.221,138,2.608,140,1.969,141,2.524,142,2.208,145,1.69,153,2.208,166,1.92,168,2.208,190,2.524,191,2.594,192,4.18,193,4.67,194,3.18,195,3.18,196,1.92,197,3.18]],["title/classes/ExpectedOnce.html",[0,0.201,198,1.744]],["body/classes/ExpectedOnce.html",[0,0.303,2,0.532,3,0.384,4,0.317,6,0.253,7,0.685,8,0.65,9,0.686,10,0.79,11,0.922,12,0.896,15,0.758,17,0.794,18,0.044,19,0.613,20,0.384,21,0.7,22,0.79,23,0.794,24,0.613,27,0.685,28,0.456,29,1.59,30,0.532,31,0.896,38,1.427,41,0.033,42,0.033,45,0.7,110,1.296,138,2.637,142,2.344,145,1.793,166,2.038,168,2.344,196,2.038,198,2.624,199,2.753,200,3.018,201,4.284,202,4.346,203,3.375]],["title/classes/ExpectedWithinRange.html",[0,0.201,204,1.744]],["body/classes/ExpectedWithinRange.html",[0,0.304,2,0.535,3,0.387,4,0.319,6,0.254,7,0.688,8,0.687,9,0.687,10,0.793,11,0.924,12,0.901,15,0.76,17,0.799,18,0.043,19,0.617,20,0.387,21,0.704,22,0.617,23,0.799,24,0.876,27,0.688,28,0.74,30,0.535,31,0.901,38,1.35,41,0.033,42,0.033,45,0.704,110,1.012,140,1.599,160,3.932,162,2.769,167,2.769,200,2.357,204,2.634,205,2.769,206,4.362,207,3.395,208,5.087,209,4.362,210,3.347,211,4.82,212,3.395,213,3.395]],["title/classes/PatternMismatch.html",[0,0.201,214,1.744]],["body/classes/PatternMismatch.html",[0,0.312,2,0.558,3,0.403,4,0.332,6,0.265,7,0.707,8,0.664,9,0.698,10,0.814,11,0.939,12,0.94,15,0.775,17,0.833,18,0.043,19,0.643,20,0.403,21,0.735,22,0.643,23,0.833,24,0.643,27,0.707,28,0.698,30,0.558,31,0.94,38,1.189,41,0.034,42,0.039,45,0.735,110,1.056,214,2.705,215,2.888,216,3.541,217,5.529,218,3.541,219,4.481,220,4.915,221,3.541,222,3.541]],["title/interfaces/TextInput.html",[223,1.212,224,1.744]],["body/interfaces/TextInput.html",[2,0.636,3,0.46,4,0.379,6,0.414,7,0.766,8,0.656,18,0.043,20,0.553,28,0.704,30,0.636,41,0.037,42,0.037,76,2.025,163,3.146,223,2.038,224,2.933,225,3.292]],["title/classes/UnexpectedEoi.html",[0,0.201,226,1.744]],["body/classes/UnexpectedEoi.html",[0,0.323,2,0.591,3,0.427,4,0.352,6,0.281,7,0.732,8,0.682,9,0.713,10,0.844,11,0.958,15,0.732,18,0.043,22,0.681,23,0.882,24,0.681,27,0.732,28,0.506,30,0.591,38,0.994,41,0.035,42,0.035,45,0.778,76,1.738,110,1.117,171,3.224,226,2.803,227,3.057,228,5.272,229,4.115,230,3.748,231,3.748]],["title/interfaces/ValueInput.html",[223,1.212,232,1.744]],["body/interfaces/ValueInput.html",[2,0.63,3,0.455,4,0.375,6,0.299,7,0.761,8,0.652,18,0.044,20,0.55,28,0.701,30,0.63,41,0.037,42,0.037,76,2.018,163,3.132,223,2.025,232,2.914,233,3.258,234,4.396]],["title/contributing.html",[235,1.682,236,1.463,237,1.682]],["body/contributing.html",[3,0.384,4,0.317,18,0.033,39,2.309,41,0.033,42,0.033,115,1.793,147,2.038,201,2.753,237,3.647,238,3.375,239,3.375,240,2.753,241,3.375,242,5.376,243,2.753,244,3.375,245,4.806,246,3.921,247,3.545,248,3.545,249,3.018,250,3.921,251,3.375,252,3.375,253,2.753,254,2.753,255,3.375,256,2.344,257,2.753,258,3.337,259,2.753,260,2.753,261,3.375,262,2.753,263,3.375,264,2.753,265,2.753,266,3.375,267,3.545,268,3.375,269,3.375,270,3.375,271,2.753,272,2.344,273,2.753,274,2.753,275,3.375,276,2.753,277,4.346,278,3.545,279,2.753,280,3.375,281,2.753,282,4.346,283,4.346,284,3.545,285,2.753,286,3.375,287,3.375,288,2.753,289,2.753,290,3.545,291,3.375,292,3.375]],["title/coverage.html",[293,3.198]],["body/coverage.html",[0,0.36,1,0.949,4,0.148,5,1.283,14,0.949,18,0.045,20,0.179,41,0.019,42,0.024,43,0.949,44,1.283,53,1.092,54,2.688,59,0.949,60,1.092,107,1.283,108,0.949,110,0.469,115,0.836,126,0.836,136,0.949,137,2.04,145,0.836,153,1.092,156,4.039,157,0.949,158,1.283,169,0.949,170,1.283,175,0.949,176,1.283,184,0.949,185,1.283,190,0.949,191,1.283,198,0.949,199,1.283,204,0.949,205,1.283,214,0.949,215,1.283,223,1.049,224,0.949,225,1.283,226,0.949,227,1.283,229,1.283,232,0.949,233,1.283,293,1.283,294,1.283,295,1.283,296,1.283,297,3.362,298,1.573,299,1.573,300,5.825,301,4.322,302,4.322,303,1.573,304,1.283,305,1.573,306,1.573,307,2.5,308,1.573,309,1.573,310,5.791,311,1.573,312,4.621,313,4.621,314,1.283,315,2.5,316,2.5,317,1.283,318,4.48,319,1.573,320,1.283,321,2.04,322,2.5,323,2.04,324,2.5,325,1.736,326,1.573,327,1.573,328,1.573,329,1.573,330,1.573,331,1.573,332,1.573,333,1.573,334,1.573,335,2.5,336,1.283,337,1.573,338,2.5,339,4.462,340,1.573,341,1.573,342,1.573,343,1.573,344,1.283,345,1.573,346,1.573,347,1.573,348,1.573,349,1.573,350,1.573,351,1.573,352,1.283,353,1.573,354,1.573,355,1.573,356,1.573,357,1.573,358,1.573,359,1.573,360,1.573,361,1.573,362,1.573,363,1.573,364,1.573]],["title/miscellaneous/enumerations.html",[365,1.463,366,2.829]],["body/miscellaneous/enumerations.html",[6,0.313,9,0.565,18,0.038,41,0.038,42,0.038,76,1.566,110,1.247,138,2.493,200,2.904,272,2.904,314,3.412,321,3.412,323,3.412,336,3.412,365,2.525,366,4.048,367,4.182,368,4.182,369,3.412,370,4.182,371,3.412,372,4.182,373,4.182,374,4.182]],["title/index.html",[6,0.181,235,1.682,236,1.463]],["body/index.html",[0,0.245,6,0.23,8,0.333,9,0.416,10,0.281,11,0.281,14,0.933,15,0.389,17,0.364,18,0.044,19,0.281,20,0.548,21,0.321,22,0.743,24,0.916,25,1.712,27,0.605,28,0.621,31,0.816,32,2.774,36,2.136,39,1.31,41,0.027,42,0.019,55,1.712,57,1.26,59,0.933,76,1.861,77,1.073,79,0.933,87,2.47,108,0.933,110,1.645,115,2.442,126,0.821,140,0.728,141,1.489,146,1.26,147,0.933,156,1.712,161,1.073,163,2.47,181,1.489,196,0.933,210,2.136,224,0.933,232,0.933,234,2.011,236,0.933,243,1.26,246,2.865,256,1.073,258,2.981,262,1.26,265,2.51,273,1.26,284,1.26,304,2.011,320,2.011,325,1.073,344,2.011,352,2.011,375,2.466,376,3.077,377,1.545,378,1.545,379,1.545,380,1.545,381,1.545,382,2.011,383,1.545,384,2.865,385,2.466,386,1.545,387,1.545,388,3.13,389,1.545,390,3.837,391,2.466,392,1.545,393,1.545,394,1.26,395,1.545,396,1.545,397,1.545,398,2.466,399,1.545,400,1.545,401,1.545,402,1.545,403,2.466,404,1.26,405,2.011,406,1.545,407,2.466,408,1.545,409,1.545,410,1.545,411,1.545,412,1.545,413,1.545,414,3.077,415,3.337,416,2.466,417,1.545,418,2.466,419,2.011,420,2.865,421,1.545,422,1.26,423,1.545,424,1.26,425,1.545,426,1.545,427,2.466,428,2.466,429,1.545,430,1.545,431,1.545,432,1.545,433,1.545,434,1.545,435,1.545,436,1.073,437,1.545,438,2.865,439,2.466,440,3.077,441,1.545,442,3.077,443,3.837,444,3.512,445,1.545,446,1.545,447,1.545,448,2.466,449,1.545,450,2.466,451,1.545,452,1.545,453,1.545,454,4.09,455,1.545,456,1.26,457,1.545,458,2.466,459,1.545,460,1.545,461,1.545,462,1.545,463,1.545,464,2.466,465,1.545,466,1.545,467,1.545,468,1.545,469,1.545,470,1.545,471,1.545,472,1.545,473,2.466,474,1.545,475,1.545,476,1.26,477,1.545,478,1.545,479,1.545,480,1.545,481,1.545,482,1.545,483,1.545,484,1.545,485,1.545,486,1.545,487,1.545,488,1.545,489,1.545,490,1.545,491,2.466,492,1.26,493,2.466,494,2.466,495,1.545,496,1.545,497,1.26,498,1.545,499,3.512,500,3.077,501,2.466,502,3.077,503,2.466,504,1.545,505,2.466,506,1.26,507,1.545,508,1.26,509,1.545,510,3.837,511,1.545,512,3.512,513,2.466,514,1.545,515,1.26,516,1.545,517,2.466,518,1.545,519,1.545,520,1.545,521,1.545,522,1.545]],["title/license.html",[235,1.682,236,1.463,249,1.682]],["body/license.html",[0,0.07,3,0.488,4,0.402,9,0.233,15,0.158,18,0.017,19,0.55,20,0.114,25,0.698,29,0.473,39,0.534,41,0.02,42,0.013,45,0.208,56,0.819,58,0.819,79,0.607,108,0.607,138,1.967,139,3.579,140,0.473,147,1.041,149,1.407,150,0.819,166,0.607,171,0.698,181,0.607,196,0.607,210,2.592,223,0.421,237,2.592,240,2.194,247,1.849,248,3.301,249,3.713,250,0.819,253,0.819,254,3.579,256,0.698,257,2.194,258,2.899,259,1.849,260,2.194,264,0.819,267,2.47,271,0.819,272,0.698,274,0.819,276,1.849,278,0.819,279,3.719,281,2.194,285,2.885,288,0.819,289,1.407,290,1.849,294,2.194,295,0.819,296,0.819,325,1.198,369,0.819,371,0.819,382,2.47,384,3.045,388,0.819,394,2.696,404,0.819,405,0.819,415,2.194,422,2.194,424,1.407,436,2.295,438,0.819,476,0.819,492,0.819,497,0.819,506,1.849,508,1.849,515,3.498,523,2.689,524,2.267,525,2.267,526,1.005,527,1.005,528,1.005,529,3.901,530,2.689,531,4.388,532,4.558,533,1.725,534,1.005,535,1.005,536,4.047,537,3.305,538,1.725,539,3.733,540,3.028,541,2.267,542,3.901,543,1.005,544,1.005,545,2.689,546,1.725,547,1.725,548,1.725,549,4.759,550,2.689,551,1.725,552,3.305,553,1.005,554,1.725,555,1.005,556,1.005,557,1.005,558,1.005,559,1.005,560,1.005,561,1.005,562,2.267,563,1.725,564,4.388,565,1.005,566,3.305,567,3.537,568,1.725,569,1.005,570,1.005,571,1.005,572,0.819,573,1.005,574,1.005,575,5.567,576,2.267,577,1.725,578,1.005,579,4.698,580,1.725,581,1.725,582,1.005,583,4.814,584,1.005,585,1.005,586,1.005,587,1.005,588,1.005,589,1.725,590,1.725,591,2.267,592,1.005,593,1.005,594,1.005,595,2.689,596,1.725,597,1.725,598,3.028,599,1.725,600,1.005,601,1.005,602,1.005,603,1.005,604,1.725,605,1.005,606,1.005,607,1.005,608,2.267,609,1.005,610,1.407,611,1.005,612,1.005,613,1.005,614,1.725,615,1.725,616,2.689,617,1.725,618,1.725,619,1.725,620,2.267,621,1.725,622,2.267,623,1.725,624,1.725,625,1.725,626,2.267,627,1.005,628,1.725,629,1.725,630,1.005,631,1.005,632,3.537,633,2.267,634,2.689,635,1.725,636,1.725,637,1.005,638,2.267,639,2.267,640,1.005,641,2.267,642,2.267,643,1.005,644,1.005,645,1.725,646,1.725,647,1.005,648,1.005,649,1.005,650,1.005,651,1.005,652,1.005,653,1.005,654,1.005,655,2.689,656,1.005,657,3.028,658,1.005,659,1.005,660,1.005,661,2.689,662,1.005,663,1.005,664,1.005,665,1.005,666,2.267,667,2.689,668,1.725,669,1.005,670,1.005,671,0.819,672,1.005,673,1.005,674,1.005,675,1.725,676,1.725,677,1.005,678,1.725,679,1.725,680,1.005,681,1.005,682,1.005,683,1.005,684,1.005,685,2.689,686,1.005,687,1.005,688,1.005,689,1.005,690,1.005,691,1.005,692,1.005,693,1.005,694,1.005,695,1.725,696,1.005,697,1.005,698,3.537,699,2.267,700,2.267,701,2.689,702,1.725,703,1.725,704,1.005,705,1.005,706,1.005,707,1.725,708,1.725,709,1.005,710,1.725,711,1.005,712,1.005,713,1.005,714,3.028,715,1.005,716,1.005,717,1.005,718,1.725,719,1.005,720,1.005,721,1.005,722,3.028,723,1.005,724,1.005,725,1.005,726,1.005,727,1.005,728,1.725,729,1.005,730,1.005,731,1.005,732,1.005,733,1.005,734,1.005,735,1.005,736,1.005,737,1.005,738,1.005,739,1.725,740,1.005,741,1.005,742,1.005,743,1.005,744,1.005,745,1.005,746,1.005,747,1.005,748,1.005,749,1.005,750,1.725,751,1.725,752,1.005,753,1.005,754,1.005,755,1.005,756,1.005,757,1.005,758,1.005,759,1.005,760,1.005,761,1.005,762,1.005,763,1.005,764,1.005,765,1.005,766,1.005,767,1.005,768,1.005,769,1.005]],["title/modules.html",[770,2.722]],["body/modules.html",[18,0.04,41,0.04,42,0.04,770,3.168]],["title/overview.html",[771,3.198]],["body/overview.html",[0,0.313,18,0.039,41,0.039,42,0.039,223,1.884,456,3.664,771,3.664,772,4.491]],["title/miscellaneous/typealiases.html",[365,1.463,773,3.468]],["body/miscellaneous/typealiases.html",[1,1.824,6,0.226,14,2.749,18,0.043,19,0.549,20,0.636,21,0.627,22,0.828,27,0.476,41,0.035,42,0.031,43,1.824,54,2.098,55,3.162,59,1.824,60,2.098,76,1.82,77,2.098,79,1.824,87,2.749,110,1.634,115,1.606,136,1.824,141,1.824,157,1.824,161,2.098,169,1.824,175,1.824,181,2.44,184,1.824,190,1.824,198,1.824,204,1.824,214,1.824,226,1.824,297,2.465,317,2.465,318,2.465,339,2.465,365,1.824,419,3.715,420,2.465,436,3.162,572,2.465,610,2.465,671,2.465,770,2.098,774,3.022,775,4.553,776,3.022,777,3.022,778,5.067,779,4.553,780,4.553,781,4.553,782,4.553,783,3.022,784,3.022,785,4.553,786,3.022,787,3.022,788,3.022,789,4.553,790,3.022,791,3.022,792,3.022,793,3.022]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":156,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"coverage.html":{},"index.html":{}}}],["0.2",{"_index":501,"title":{},"body":{"index.html":{}}}],["0.3",{"_index":482,"title":{},"body":{"index.html":{}}}],["0.5",{"_index":499,"title":{},"body":{"index.html":{}}}],["0.8",{"_index":503,"title":{},"body":{"index.html":{}}}],["0/1",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["003366",{"_index":498,"title":{},"body":{"index.html":{}}}],["1",{"_index":196,"title":{},"body":{"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"index.html":{},"license.html":{}}}],["1/1",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":456,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2",{"_index":772,"title":{},"body":{"overview.html":{}}}],["2.0",{"_index":525,"title":{},"body":{"license.html":{}}}],["2004",{"_index":527,"title":{},"body":{"license.html":{}}}],["23/26",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":385,"title":{},"body":{"index.html":{}}}],["33",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":557,"title":{},"body":{"license.html":{}}}],["6",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":535,"title":{},"body":{"license.html":{}}}],["9a",{"_index":452,"title":{},"body":{"index.html":{}}}],["_e",{"_index":61,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["_i",{"_index":62,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["_o",{"_index":63,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["abov",{"_index":497,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":64,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["accept",{"_index":240,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["accompani",{"_index":251,"title":{},"body":{"contributing.html":{}}}],["act",{"_index":541,"title":{},"body":{"license.html":{}}}],["add",{"_index":679,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":681,"title":{},"body":{"license.html":{}}}],["addit",{"_index":394,"title":{},"body":{"index.html":{},"license.html":{}}}],["adopt",{"_index":400,"title":{},"body":{"index.html":{}}}],["advis",{"_index":734,"title":{},"body":{"license.html":{}}}],["again",{"_index":275,"title":{},"body":{"contributing.html":{}}}],["against",{"_index":646,"title":{},"body":{"license.html":{}}}],["agre",{"_index":701,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":250,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["alias",{"_index":774,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alleg",{"_index":650,"title":{},"body":{"license.html":{}}}],["allow",{"_index":46,"title":{},"body":{"classes/CustomError.html":{}}}],["alon",{"_index":643,"title":{},"body":{"license.html":{}}}],["along",{"_index":673,"title":{},"body":{"license.html":{}}}],["alongsid",{"_index":680,"title":{},"body":{"license.html":{}}}],["alreadi",{"_index":270,"title":{},"body":{"contributing.html":{}}}],["and(b",{"_index":660,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":665,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":669,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":740,"title":{},"body":{"license.html":{}}}],["annot",{"_index":587,"title":{},"body":{"license.html":{}}}],["anyarrayvalu",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["anyvalu",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["apach",{"_index":523,"title":{},"body":{"license.html":{}}}],["appear",{"_index":677,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":581,"title":{},"body":{"license.html":{}}}],["appli",{"_index":638,"title":{},"body":{"license.html":{}}}],["applic",{"_index":699,"title":{},"body":{"license.html":{}}}],["appropri",{"_index":710,"title":{},"body":{"license.html":{}}}],["archiv",{"_index":762,"title":{},"body":{"license.html":{}}}],["aris",{"_index":726,"title":{},"body":{"license.html":{}}}],["array",{"_index":141,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedNoneOf.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["array/tupl",{"_index":437,"title":{},"body":{"index.html":{}}}],["arrayvalu",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["assert",{"_index":748,"title":{},"body":{"license.html":{}}}],["associ",{"_index":713,"title":{},"body":{"license.html":{}}}],["assum",{"_index":711,"title":{},"body":{"license.html":{}}}],["attach",{"_index":580,"title":{},"body":{"license.html":{}}}],["attribut",{"_index":667,"title":{},"body":{"license.html":{}}}],["author",{"_index":538,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":576,"title":{},"body":{"license.html":{}}}],["avail",{"_index":405,"title":{},"body":{"index.html":{},"license.html":{}}}],["base",{"_index":584,"title":{},"body":{"license.html":{}}}],["basi",{"_index":702,"title":{},"body":{"license.html":{}}}],["be",{"_index":495,"title":{},"body":{"index.html":{}}}],["behalf",{"_index":598,"title":{},"body":{"license.html":{}}}],["below",{"_index":582,"title":{},"body":{"license.html":{}}}],["benefici",{"_index":561,"title":{},"body":{"license.html":{}}}],["between",{"_index":206,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["bind",{"_index":594,"title":{},"body":{"license.html":{}}}],["boilerpl",{"_index":749,"title":{},"body":{"license.html":{}}}],["booleanvalu",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["both",{"_index":414,"title":{},"body":{"index.html":{}}}],["bracket",{"_index":751,"title":{},"body":{"license.html":{}}}],["build",{"_index":377,"title":{},"body":{"index.html":{}}}],["captur",{"_index":200,"title":{},"body":{"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"miscellaneous/enumerations.html":{}}}],["carri",{"_index":662,"title":{},"body":{"license.html":{}}}],["case",{"_index":509,"title":{},"body":{"index.html":{}}}],["caus",{"_index":547,"title":{},"body":{"license.html":{}}}],["chang",{"_index":664,"title":{},"body":{"license.html":{}}}],["char",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["charact",{"_index":371,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["charg",{"_index":622,"title":{},"body":{"license.html":{}}}],["choos",{"_index":735,"title":{},"body":{"license.html":{}}}],["cla",{"_index":268,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":639,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"coverage.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["code",{"_index":276,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["color",{"_index":440,"title":{},"body":{"index.html":{}}}],["colortextdecod",{"_index":472,"title":{},"body":{"index.html":{}}}],["colortextdecoder('#003355",{"_index":479,"title":{},"body":{"index.html":{}}}],["colortextdecoder('gray",{"_index":481,"title":{},"body":{"index.html":{}}}],["colortextdecoder('gray0.2",{"_index":484,"title":{},"body":{"index.html":{}}}],["colortextdecoder('hsl(0.1,0.2,0.3",{"_index":486,"title":{},"body":{"index.html":{}}}],["colorvaluedecod",{"_index":505,"title":{},"body":{"index.html":{}}}],["combin",{"_index":25,"title":{},"body":{"classes/CombineErrors.html":{},"index.html":{},"license.html":{}}}],["combineerror",{"_index":1,"title":{"classes/CombineErrors.html":{}},"body":{"classes/CombineErrors.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["come",{"_index":489,"title":{},"body":{"index.html":{}}}],["comma",{"_index":148,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["comment",{"_index":753,"title":{},"body":{"license.html":{}}}],["commerci",{"_index":733,"title":{},"body":{"license.html":{}}}],["common",{"_index":543,"title":{},"body":{"license.html":{}}}],["commun",{"_index":290,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["compil",{"_index":572,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["compli",{"_index":684,"title":{},"body":{"license.html":{}}}],["complianc",{"_index":764,"title":{},"body":{"license.html":{}}}],["comput",{"_index":731,"title":{},"body":{"license.html":{}}}],["concat",{"_index":153,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedNoneOf.html":{},"coverage.html":{}}}],["concaten",{"_index":152,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["concator(this.descript",{"_index":197,"title":{},"body":{"classes/ExpectedNoneOf.html":{}}}],["condit",{"_index":139,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"license.html":{}}}],["configur",{"_index":569,"title":{},"body":{"license.html":{}}}],["consequenti",{"_index":725,"title":{},"body":{"license.html":{}}}],["consid",{"_index":425,"title":{},"body":{"index.html":{}}}],["consist",{"_index":742,"title":{},"body":{"license.html":{}}}],["conspicu",{"_index":609,"title":{},"body":{"license.html":{}}}],["const",{"_index":32,"title":{},"body":{"classes/CombineErrors.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"index.html":{}}}],["constitut",{"_index":651,"title":{},"body":{"license.html":{}}}],["constru",{"_index":682,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{}}}],["constructor(ent",{"_index":142,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{}}}],["constructor(error",{"_index":13,"title":{},"body":{"classes/CombineErrors.html":{}}}],["constructor(field",{"_index":179,"title":{},"body":{"classes/ExpectedField.html":{}}}],["constructor(input",{"_index":74,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["constructor(messag",{"_index":49,"title":{},"body":{"classes/CustomError.html":{}}}],["constructor(min",{"_index":162,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"classes/ExpectedWithinRange.html":{}}}],["constructor(pattern",{"_index":218,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["constructor(readonli",{"_index":31,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"index.html":{}}}],["constructor(valu",{"_index":187,"title":{},"body":{"classes/ExpectedMatch.html":{}}}],["consult",{"_index":286,"title":{},"body":{"contributing.html":{}}}],["contain",{"_index":671,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["content",{"_index":678,"title":{},"body":{"license.html":{}}}],["contract",{"_index":551,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":237,"title":{"contributing.html":{}},"body":{"contributing.html":{},"license.html":{}}}],["contribution(",{"_index":642,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":248,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["contributori",{"_index":652,"title":{},"body":{"license.html":{}}}],["control",{"_index":382,"title":{},"body":{"index.html":{},"license.html":{}}}],["convers",{"_index":573,"title":{},"body":{"license.html":{}}}],["copi",{"_index":655,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":254,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["counterclaim",{"_index":648,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":293,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpu",{"_index":433,"title":{},"body":{"index.html":{}}}],["cross",{"_index":647,"title":{},"body":{"license.html":{}}}],["current",{"_index":265,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["custom",{"_index":47,"title":{},"body":{"classes/CustomError.html":{}}}],["customari",{"_index":696,"title":{},"body":{"license.html":{}}}],["customerror",{"_index":43,"title":{"classes/CustomError.html":{}},"body":{"classes/CustomError.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["cycl",{"_index":434,"title":{},"body":{"index.html":{}}}],["damag",{"_index":722,"title":{},"body":{"license.html":{}}}],["date",{"_index":654,"title":{},"body":{"license.html":{}}}],["deal",{"_index":507,"title":{},"body":{"index.html":{}}}],["debug",{"_index":408,"title":{},"body":{"index.html":{}}}],["decod",{"_index":110,"title":{},"body":{"classes/DecodeResultBase.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decodeerror",{"_index":14,"title":{},"body":{"classes/CombineErrors.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decodeerror.combin",{"_index":473,"title":{},"body":{"index.html":{}}}],["decodefailur",{"_index":60,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["decodefailure(f(this.input",{"_index":133,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodefailure(input",{"_index":135,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodefailure(this.input",{"_index":128,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodererror",{"_index":403,"title":{},"body":{"index.html":{}}}],["decoderesult",{"_index":55,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decoderesultbas",{"_index":53,"title":{"classes/DecodeResultBase.html":{}},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{}}}],["decodesuccess",{"_index":59,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decodesuccess(f(this.input",{"_index":119,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodesuccess(input",{"_index":134,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodesuccess(this.input",{"_index":116,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodetext",{"_index":320,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["decodevalu",{"_index":344,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["default",{"_index":23,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}}}],["defend",{"_index":744,"title":{},"body":{"license.html":{}}}],["defin",{"_index":15,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{},"license.html":{}}}],["definit",{"_index":506,"title":{},"body":{"index.html":{},"license.html":{}}}],["deliber",{"_index":719,"title":{},"body":{"license.html":{}}}],["deriv",{"_index":583,"title":{},"body":{"license.html":{}}}],["describ",{"_index":140,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedWithinRange.html":{},"index.html":{},"license.html":{}}}],["descript",{"_index":45,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"license.html":{}}}],["design",{"_index":611,"title":{},"body":{"license.html":{}}}],["determin",{"_index":709,"title":{},"body":{"license.html":{}}}],["differ",{"_index":272,"title":{},"body":{"contributing.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["digit",{"_index":321,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["direct",{"_index":545,"title":{},"body":{"license.html":{}}}],["directli",{"_index":401,"title":{},"body":{"index.html":{}}}],["disclaim",{"_index":697,"title":{},"body":{"license.html":{}}}],["discuss",{"_index":606,"title":{},"body":{"license.html":{}}}],["display",{"_index":629,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":531,"title":{},"body":{"license.html":{}}}],["document",{"_index":294,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["don't",{"_index":274,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["e.tostr",{"_index":35,"title":{},"body":{"classes/CombineErrors.html":{}}}],["each",{"_index":616,"title":{},"body":{"license.html":{}}}],["easier",{"_index":760,"title":{},"body":{"license.html":{}}}],["editori",{"_index":585,"title":{},"body":{"license.html":{}}}],["elabor",{"_index":588,"title":{},"body":{"license.html":{}}}],["electron",{"_index":599,"title":{},"body":{"license.html":{}}}],["employ",{"_index":252,"title":{},"body":{"contributing.html":{}}}],["empti",{"_index":514,"title":{},"body":{"index.html":{}}}],["enclos",{"_index":750,"title":{},"body":{"license.html":{}}}],["end",{"_index":171,"title":{},"body":{"classes/ExpectedEoi.html":{},"classes/UnexpectedEoi.html":{},"license.html":{}}}],["entir",{"_index":417,"title":{},"body":{"index.html":{}}}],["entiti",{"_index":138,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["entitytostr",{"_index":145,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"coverage.html":{}}}],["entitytostring(this.ent",{"_index":168,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{}}}],["enumer",{"_index":366,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eoi",{"_index":229,"title":{},"body":{"classes/UnexpectedEoi.html":{},"coverage.html":{}}}],["eot",{"_index":172,"title":{},"body":{"classes/ExpectedEoi.html":{}}}],["err",{"_index":77,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["err2",{"_index":90,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["error",{"_index":22,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["error(\"can't",{"_index":123,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["even",{"_index":271,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["event",{"_index":715,"title":{},"body":{"license.html":{}}}],["exact",{"_index":186,"title":{},"body":{"classes/ExpectedMatch.html":{}}}],["exampl",{"_index":438,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":633,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":608,"title":{},"body":{"license.html":{}}}],["exclus",{"_index":621,"title":{},"body":{"license.html":{}}}],["execut",{"_index":690,"title":{},"body":{"license.html":{}}}],["exercis",{"_index":563,"title":{},"body":{"license.html":{}}}],["expect",{"_index":38,"title":{},"body":{"classes/CombineErrors.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}}}],["expected_any_of",{"_index":195,"title":{},"body":{"classes/ExpectedNoneOf.html":{}}}],["expectedanyof",{"_index":136,"title":{"classes/ExpectedAnyOf.html":{}},"body":{"classes/ExpectedAnyOf.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedatleast",{"_index":157,"title":{"classes/ExpectedAtLeast.html":{}},"body":{"classes/ExpectedAtLeast.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedeoi",{"_index":169,"title":{"classes/ExpectedEoi.html":{}},"body":{"classes/ExpectedEoi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedfield",{"_index":175,"title":{"classes/ExpectedField.html":{}},"body":{"classes/ExpectedField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedmatch",{"_index":184,"title":{"classes/ExpectedMatch.html":{}},"body":{"classes/ExpectedMatch.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectednoneof",{"_index":190,"title":{"classes/ExpectedNoneOf.html":{}},"body":{"classes/ExpectedNoneOf.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedonc",{"_index":198,"title":{"classes/ExpectedOnce.html":{}},"body":{"classes/ExpectedOnce.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedwithinrang",{"_index":204,"title":{"classes/ExpectedWithinRange.html":{}},"body":{"classes/ExpectedWithinRange.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["explicitli",{"_index":686,"title":{},"body":{"license.html":{}}}],["export",{"_index":30,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{}}}],["express",{"_index":424,"title":{},"body":{"index.html":{},"license.html":{}}}],["extend",{"_index":109,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["extract",{"_index":785,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["f",{"_index":86,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f(e",{"_index":132,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f(this.failur",{"_index":130,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f(this.valu",{"_index":113,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f(v",{"_index":117,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f]{6})/iy",{"_index":453,"title":{},"body":{"index.html":{}}}],["fail",{"_index":126,"title":{},"body":{"classes/DecodeResultBase.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"coverage.html":{},"index.html":{}}}],["failur",{"_index":108,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["failuretostr",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["fals",{"_index":121,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["fee",{"_index":736,"title":{},"body":{"license.html":{}}}],["few",{"_index":243,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["fieeld",{"_index":178,"title":{},"body":{"classes/ExpectedField.html":{}}}],["field",{"_index":181,"title":{},"body":{"classes/ExpectedField.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["fifti",{"_index":555,"title":{},"body":{"license.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"coverage.html":{},"license.html":{}}}],["finitenumbervalu",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["fit",{"_index":404,"title":{},"body":{"index.html":{},"license.html":{}}}],["flag",{"_index":428,"title":{},"body":{"index.html":{}}}],["flatmap",{"_index":65,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["flatmap(f",{"_index":81,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["flatmaperror",{"_index":66,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["flatmaperror(f",{"_index":88,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["flexibl",{"_index":411,"title":{},"body":{"index.html":{}}}],["follow",{"_index":247,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["form",{"_index":564,"title":{},"body":{"license.html":{}}}],["format",{"_index":755,"title":{},"body":{"license.html":{}}}],["found",{"_index":370,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["free",{"_index":624,"title":{},"body":{"license.html":{}}}],["full",{"_index":381,"title":{},"body":{"index.html":{}}}],["function",{"_index":87,"title":{},"body":{"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["gener",{"_index":147,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["get",{"_index":235,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["getunsafefailur",{"_index":67,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["getunsafesuccess",{"_index":68,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["github",{"_index":282,"title":{},"body":{"contributing.html":{}}}],["give",{"_index":256,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["given",{"_index":787,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["goodwil",{"_index":729,"title":{},"body":{"license.html":{}}}],["google'",{"_index":291,"title":{},"body":{"contributing.html":{}}}],["govern",{"_index":769,"title":{},"body":{"license.html":{}}}],["grant",{"_index":539,"title":{},"body":{"license.html":{}}}],["granular",{"_index":412,"title":{},"body":{"index.html":{}}}],["grey",{"_index":443,"title":{},"body":{"index.html":{}}}],["grey(0.2",{"_index":485,"title":{},"body":{"index.html":{}}}],["grey(0.3",{"_index":483,"title":{},"body":{"index.html":{}}}],["grey(v",{"_index":463,"title":{},"body":{"index.html":{}}}],["grey(v.grey",{"_index":516,"title":{},"body":{"index.html":{}}}],["greydecod",{"_index":458,"title":{},"body":{"index.html":{}}}],["greyvalu",{"_index":513,"title":{},"body":{"index.html":{}}}],["grossli",{"_index":720,"title":{},"body":{"license.html":{}}}],["guidelin",{"_index":245,"title":{},"body":{"contributing.html":{}}}],["h",{"_index":500,"title":{},"body":{"index.html":{}}}],["handi",{"_index":490,"title":{},"body":{"index.html":{}}}],["harmless",{"_index":746,"title":{},"body":{"license.html":{}}}],["head",{"_index":261,"title":{},"body":{"contributing.html":{}}}],["help",{"_index":287,"title":{},"body":{"contributing.html":{}}}],["here",{"_index":504,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":617,"title":{},"body":{"license.html":{}}}],["herein",{"_index":688,"title":{},"body":{"license.html":{}}}],["hold",{"_index":745,"title":{},"body":{"license.html":{}}}],["hsl",{"_index":444,"title":{},"body":{"index.html":{}}}],["hsl(0.1,0.2,0.3)anoth",{"_index":487,"title":{},"body":{"index.html":{}}}],["hsl(v.h",{"_index":519,"title":{},"body":{"index.html":{}}}],["hsl(v[0",{"_index":468,"title":{},"body":{"index.html":{}}}],["hsldecod",{"_index":464,"title":{},"body":{"index.html":{}}}],["hslvalu",{"_index":517,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licens",{"_index":528,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":766,"title":{},"body":{"license.html":{}}}],["https://cla.developers.google.com",{"_index":263,"title":{},"body":{"contributing.html":{}}}],["hue",{"_index":445,"title":{},"body":{"index.html":{}}}],["identif",{"_index":761,"title":{},"body":{"license.html":{}}}],["identifi",{"_index":295,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["ii",{"_index":553,"title":{},"body":{"license.html":{}}}],["iii",{"_index":560,"title":{},"body":{"license.html":{}}}],["implement",{"_index":435,"title":{},"body":{"index.html":{}}}],["impli",{"_index":703,"title":{},"body":{"license.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/CombineErrors.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"license.html":{}}}],["improv",{"_index":607,"title":{},"body":{"license.html":{}}}],["in2",{"_index":101,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["inabl",{"_index":727,"title":{},"body":{"license.html":{}}}],["incident",{"_index":724,"title":{},"body":{"license.html":{}}}],["includ",{"_index":279,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["inclus",{"_index":597,"title":{},"body":{"license.html":{}}}],["incorpor",{"_index":614,"title":{},"body":{"license.html":{}}}],["incur",{"_index":747,"title":{},"body":{"license.html":{}}}],["indemn",{"_index":738,"title":{},"body":{"license.html":{}}}],["indemnifi",{"_index":743,"title":{},"body":{"license.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["indic",{"_index":578,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":546,"title":{},"body":{"license.html":{}}}],["individu",{"_index":562,"title":{},"body":{"license.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{}}}],["inform",{"_index":289,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["infring",{"_index":641,"title":{},"body":{"license.html":{}}}],["input",{"_index":76,"title":{},"body":{"classes/DecodeResultBase.html":{},"classes/ExpectedEoi.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["instanc",{"_index":441,"title":{},"body":{"index.html":{}}}],["institut",{"_index":644,"title":{},"body":{"license.html":{}}}],["int",{"_index":786,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["integervalu",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["intend",{"_index":421,"title":{},"body":{"index.html":{}}}],["intention",{"_index":596,"title":{},"body":{"license.html":{}}}],["interfac",{"_index":223,"title":{"interfaces/TextInput.html":{},"interfaces/ValueInput.html":{}},"body":{"interfaces/TextInput.html":{},"interfaces/ValueInput.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["irrevoc",{"_index":625,"title":{},"body":{"license.html":{}}}],["isfailur",{"_index":69,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["issu",{"_index":605,"title":{},"body":{"license.html":{}}}],["issuccess",{"_index":70,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["istoken",{"_index":347,"title":{},"body":{"coverage.html":{}}}],["it'",{"_index":391,"title":{},"body":{"index.html":{}}}],["januari",{"_index":526,"title":{},"body":{"license.html":{}}}],["join('\\n",{"_index":37,"title":{},"body":{"classes/CombineErrors.html":{}}}],["js",{"_index":398,"title":{},"body":{"index.html":{}}}],["json",{"_index":494,"title":{},"body":{"index.html":{}}}],["json.pars",{"_index":496,"title":{},"body":{"index.html":{}}}],["json.stringify(this.input",{"_index":124,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["keep",{"_index":416,"title":{},"body":{"index.html":{}}}],["kind",{"_index":9,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["l",{"_index":502,"title":{},"body":{"index.html":{}}}],["languag",{"_index":768,"title":{},"body":{"license.html":{}}}],["last",{"_index":151,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["law",{"_index":700,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":649,"title":{},"body":{"license.html":{}}}],["lazi",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["leav",{"_index":410,"title":{},"body":{"index.html":{}}}],["left",{"_index":477,"title":{},"body":{"index.html":{}}}],["legal",{"_index":540,"title":{},"body":{"license.html":{}}}],["length",{"_index":154,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["letter",{"_index":323,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["level",{"_index":791,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["liabil",{"_index":714,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":721,"title":{},"body":{"license.html":{}}}],["librari",{"_index":376,"title":{},"body":{"index.html":{}}}],["licens",{"_index":249,"title":{"license.html":{}},"body":{"contributing.html":{},"license.html":{}}}],["license.y",{"_index":683,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":536,"title":{},"body":{"license.html":{}}}],["light",{"_index":447,"title":{},"body":{"index.html":{}}}],["limit",{"_index":567,"title":{},"body":{"license.html":{}}}],["link",{"_index":166,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"license.html":{}}}],["list",{"_index":150,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"license.html":{}}}],["liter",{"_index":103,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["literalvalu",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["literalvalue('hsl",{"_index":518,"title":{},"body":{"index.html":{}}}],["litig",{"_index":645,"title":{},"body":{"license.html":{}}}],["loss",{"_index":728,"title":{},"body":{"license.html":{}}}],["love",{"_index":239,"title":{},"body":{"contributing.html":{}}}],["lower_case_lett",{"_index":374,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lowercaselett",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["made",{"_index":577,"title":{},"body":{"license.html":{}}}],["mail",{"_index":603,"title":{},"body":{"license.html":{}}}],["make",{"_index":325,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["malfunct",{"_index":732,"title":{},"body":{"license.html":{}}}],["manag",{"_index":548,"title":{},"body":{"license.html":{}}}],["map",{"_index":71,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["map(",{"_index":34,"title":{},"body":{"classes/CombineErrors.html":{}}}],["map(f",{"_index":95,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["map(v",{"_index":454,"title":{},"body":{"index.html":{}}}],["maperror",{"_index":72,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["maperror(f",{"_index":97,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["mapinput",{"_index":73,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["mapinput(f",{"_index":99,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["mark",{"_index":610,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["markoptionalfield",{"_index":779,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["match",{"_index":42,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["match(o",{"_index":102,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["matchanycharof",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["matchinsensit",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["matchinsensitive('gray",{"_index":460,"title":{},"body":{"index.html":{}}}],["matchinsensitive('grey').or(decodeerror.combin",{"_index":459,"title":{},"body":{"index.html":{}}}],["matchinsensitive('hsl",{"_index":465,"title":{},"body":{"index.html":{}}}],["matchnocharof",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["max",{"_index":208,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["mean",{"_index":515,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechan",{"_index":570,"title":{},"body":{"license.html":{}}}],["media",{"_index":574,"title":{},"body":{"license.html":{}}}],["medium",{"_index":656,"title":{},"body":{"license.html":{}}}],["meet",{"_index":658,"title":{},"body":{"license.html":{}}}],["member",{"_index":280,"title":{},"body":{"contributing.html":{}}}],["memori",{"_index":432,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":705,"title":{},"body":{"license.html":{}}}],["mere",{"_index":593,"title":{},"body":{"license.html":{}}}],["messag",{"_index":48,"title":{},"body":{"classes/CustomError.html":{}}}],["method",{"_index":10,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{}}}],["min",{"_index":160,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"classes/ExpectedWithinRange.html":{}}}],["miscellan",{"_index":365,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mismatch",{"_index":220,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["miss",{"_index":177,"title":{},"body":{"classes/ExpectedField.html":{}}}],["modif",{"_index":566,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":661,"title":{},"body":{"license.html":{}}}],["modul",{"_index":770,"title":{"modules.html":{}},"body":{"modules.html":{},"miscellaneous/typealiases.html":{}}}],["more",{"_index":288,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["name",{"_index":19,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["nativ",{"_index":397,"title":{},"body":{"index.html":{}}}],["necessarili",{"_index":640,"title":{},"body":{"license.html":{}}}],["need",{"_index":246,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["neglig",{"_index":718,"title":{},"body":{"license.html":{}}}],["never",{"_index":793,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["new",{"_index":115,"title":{},"body":{"classes/DecodeResultBase.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["non",{"_index":620,"title":{},"body":{"license.html":{}}}],["none",{"_index":193,"title":{},"body":{"classes/ExpectedNoneOf.html":{}}}],["normal",{"_index":369,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["noth",{"_index":476,"title":{},"body":{"index.html":{},"license.html":{}}}],["notic",{"_index":579,"title":{},"body":{"license.html":{}}}],["notwithstand",{"_index":687,"title":{},"body":{"license.html":{}}}],["nullablevalu",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["nullvalu",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["number",{"_index":163,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"interfaces/TextInput.html":{},"interfaces/ValueInput.html":{},"index.html":{}}}],["numbervalu",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["numbervalue.test(v",{"_index":511,"title":{},"body":{"index.html":{}}}],["o",{"_index":105,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["o.failure(thi",{"_index":127,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["o.success(thi",{"_index":112,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["object",{"_index":436,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["objectvalu",{"_index":352,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["oblig",{"_index":739,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":765,"title":{},"body":{"license.html":{}}}],["of:\\n${error",{"_index":40,"title":{},"body":{"classes/CombineErrors.html":{}}}],["offer",{"_index":635,"title":{},"body":{"license.html":{}}}],["on",{"_index":39,"title":{},"body":{"classes/CombineErrors.html":{},"classes/ExpectedAnyOf.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["onc",{"_index":201,"title":{},"body":{"classes/ExpectedOnce.html":{},"contributing.html":{}}}],["oneof",{"_index":304,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["open",{"_index":292,"title":{},"body":{"contributing.html":{}}}],["option",{"_index":21,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["optionalvalu",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["optionalwhitespac",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["origin",{"_index":591,"title":{},"body":{"license.html":{}}}],["otherwis",{"_index":552,"title":{},"body":{"license.html":{}}}],["out",{"_index":79,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["out2",{"_index":85,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["output",{"_index":419,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["outstand",{"_index":558,"title":{},"body":{"license.html":{}}}],["over",{"_index":262,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["overview",{"_index":771,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":537,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":554,"title":{},"body":{"license.html":{}}}],["page",{"_index":759,"title":{},"body":{"license.html":{}}}],["paramet",{"_index":17,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"index.html":{}}}],["pars",{"_index":439,"title":{},"body":{"index.html":{}}}],["parseint(v",{"_index":455,"title":{},"body":{"index.html":{}}}],["parser",{"_index":393,"title":{},"body":{"index.html":{}}}],["parsers/decod",{"_index":378,"title":{},"body":{"index.html":{}}}],["part",{"_index":260,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["parti",{"_index":676,"title":{},"body":{"license.html":{}}}],["particular",{"_index":706,"title":{},"body":{"license.html":{}}}],["parts",{"_index":375,"title":{},"body":{"index.html":{}}}],["partsing/core/decod",{"_index":383,"title":{},"body":{"index.html":{}}}],["partsing/error",{"_index":406,"title":{},"body":{"index.html":{}}}],["partsing/text",{"_index":396,"title":{},"body":{"index.html":{}}}],["partsing/valu",{"_index":399,"title":{},"body":{"index.html":{}}}],["patch",{"_index":241,"title":{},"body":{"contributing.html":{}}}],["patent",{"_index":632,"title":{},"body":{"license.html":{}}}],["path",{"_index":234,"title":{},"body":{"interfaces/ValueInput.html":{},"index.html":{}}}],["pathtostr",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["pattern",{"_index":217,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["patternmismatch",{"_index":214,"title":{"classes/PatternMismatch.html":{}},"body":{"classes/PatternMismatch.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["payload",{"_index":493,"title":{},"body":{"index.html":{}}}],["percent",{"_index":556,"title":{},"body":{"license.html":{}}}],["perform",{"_index":630,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":257,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["perpetu",{"_index":618,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":668,"title":{},"body":{"license.html":{}}}],["picknext",{"_index":466,"title":{},"body":{"index.html":{}}}],["picknext(ratiodecod",{"_index":462,"title":{},"body":{"index.html":{}}}],["place",{"_index":672,"title":{},"body":{"license.html":{}}}],["portion",{"_index":387,"title":{},"body":{"index.html":{}}}],["posit",{"_index":390,"title":{},"body":{"index.html":{}}}],["possibl",{"_index":58,"title":{},"body":{"classes/DecodeResultBase.html":{},"license.html":{}}}],["power",{"_index":544,"title":{},"body":{"license.html":{}}}],["predic",{"_index":372,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":565,"title":{},"body":{"license.html":{}}}],["prepar",{"_index":627,"title":{},"body":{"license.html":{}}}],["print",{"_index":758,"title":{},"body":{"license.html":{}}}],["probabl",{"_index":273,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["product",{"_index":694,"title":{},"body":{"license.html":{}}}],["project",{"_index":242,"title":{},"body":{"contributing.html":{}}}],["promin",{"_index":663,"title":{},"body":{"license.html":{}}}],["properti",{"_index":7,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{}}}],["provid",{"_index":384,"title":{},"body":{"index.html":{},"license.html":{}}}],["publicli",{"_index":628,"title":{},"body":{"license.html":{}}}],["pull",{"_index":283,"title":{},"body":{"contributing.html":{}}}],["purpos",{"_index":285,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["r",{"_index":82,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["rang",{"_index":211,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["ratiodecod",{"_index":448,"title":{},"body":{"index.html":{}}}],["ratiovalu",{"_index":510,"title":{},"body":{"index.html":{}}}],["readabl",{"_index":670,"title":{},"body":{"license.html":{}}}],["readonli",{"_index":8,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"index.html":{}}}],["realli",{"_index":379,"title":{},"body":{"index.html":{}}}],["realloc",{"_index":429,"title":{},"body":{"index.html":{}}}],["reason",{"_index":695,"title":{},"body":{"license.html":{}}}],["receiv",{"_index":612,"title":{},"body":{"license.html":{}}}],["recipi",{"_index":659,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":756,"title":{},"body":{"license.html":{}}}],["redistribut",{"_index":259,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["regard",{"_index":691,"title":{},"body":{"license.html":{}}}],["regexp",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["regexp(/0[.]\\d+/y).map(numb",{"_index":449,"title":{},"body":{"index.html":{}}}],["regexp(/[#]([0",{"_index":451,"title":{},"body":{"index.html":{}}}],["regular",{"_index":423,"title":{},"body":{"index.html":{}}}],["remain",{"_index":592,"title":{},"body":{"license.html":{}}}],["rememb",{"_index":386,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":159,"title":{},"body":{"classes/ExpectedAtLeast.html":{}}}],["replac",{"_index":752,"title":{},"body":{"license.html":{}}}],["repres",{"_index":589,"title":{},"body":{"license.html":{}}}],["represent",{"_index":413,"title":{},"body":{"index.html":{}}}],["reproduc",{"_index":626,"title":{},"body":{"license.html":{}}}],["reproduct",{"_index":530,"title":{},"body":{"license.html":{}}}],["request",{"_index":284,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["requir",{"_index":281,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["respons",{"_index":708,"title":{},"body":{"license.html":{}}}],["rest",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["result",{"_index":41,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["retain",{"_index":253,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["return",{"_index":27,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["review",{"_index":277,"title":{},"body":{"contributing.html":{}}}],["revis",{"_index":586,"title":{},"body":{"license.html":{}}}],["rgb",{"_index":442,"title":{},"body":{"index.html":{}}}],["rgb(0x003355",{"_index":480,"title":{},"body":{"index.html":{}}}],["rgb(v",{"_index":457,"title":{},"body":{"index.html":{}}}],["rgbdecod",{"_index":450,"title":{},"body":{"index.html":{}}}],["rgbvalu",{"_index":522,"title":{},"body":{"index.html":{}}}],["right",{"_index":741,"title":{},"body":{"license.html":{}}}],["risk",{"_index":712,"title":{},"body":{"license.html":{}}}],["royalti",{"_index":623,"title":{},"body":{"license.html":{}}}],["s",{"_index":36,"title":{},"body":{"classes/CombineErrors.html":{},"classes/DecodeResultBase.html":{},"index.html":{}}}],["safeintegervalu",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["same",{"_index":757,"title":{},"body":{"license.html":{}}}],["satur",{"_index":446,"title":{},"body":{"index.html":{}}}],["save",{"_index":431,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":488,"title":{},"body":{"index.html":{}}}],["section",{"_index":533,"title":{},"body":{"license.html":{}}}],["see",{"_index":264,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["sell",{"_index":636,"title":{},"body":{"license.html":{}}}],["sent",{"_index":602,"title":{},"body":{"license.html":{}}}],["separ",{"_index":149,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"license.html":{}}}],["separatedbytimes(match",{"_index":467,"title":{},"body":{"index.html":{}}}],["sequenc",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["servic",{"_index":693,"title":{},"body":{"license.html":{}}}],["set",{"_index":395,"title":{},"body":{"index.html":{}}}],["shall",{"_index":532,"title":{},"body":{"license.html":{}}}],["shape",{"_index":402,"title":{},"body":{"index.html":{}}}],["share",{"_index":559,"title":{},"body":{"license.html":{}}}],["sign",{"_index":266,"title":{},"body":{"contributing.html":{}}}],["signatur",{"_index":783,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["simpl",{"_index":407,"title":{},"body":{"index.html":{}}}],["simpli",{"_index":255,"title":{},"body":{"contributing.html":{}}}],["simplifi",{"_index":418,"title":{},"body":{"index.html":{}}}],["skipnext(eoi",{"_index":474,"title":{},"body":{"index.html":{}}}],["skipnext(match",{"_index":471,"title":{},"body":{"index.html":{}}}],["skipnext(optionalwhitespac",{"_index":461,"title":{},"body":{"index.html":{}}}],["slice",{"_index":430,"title":{},"body":{"index.html":{}}}],["small",{"_index":244,"title":{},"body":{"contributing.html":{}}}],["softwar",{"_index":568,"title":{},"body":{"license.html":{}}}],["sole",{"_index":707,"title":{},"body":{"license.html":{}}}],["somehow",{"_index":389,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"license.html":{}}}],["special",{"_index":723,"title":{},"body":{"license.html":{}}}],["specif",{"_index":767,"title":{},"body":{"license.html":{}}}],["specifi",{"_index":790,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../decoder.t",{"_index":777,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../entity.t",{"_index":367,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.t",{"_index":775,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../result.t",{"_index":776,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../type_level.t",{"_index":778,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/core/decoder.t",{"_index":297,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/result.t",{"_index":54,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/result.ts:22",{"_index":78,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:23",{"_index":80,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:24",{"_index":75,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:27",{"_index":104,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:32",{"_index":84,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:33",{"_index":89,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:35",{"_index":96,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:36",{"_index":98,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:37",{"_index":100,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:39",{"_index":94,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:40",{"_index":93,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:42",{"_index":92,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:43",{"_index":91,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:45",{"_index":106,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/type_level.t",{"_index":784,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/error/combine_errors.t",{"_index":5,"title":{},"body":{"classes/CombineErrors.html":{},"coverage.html":{}}}],["src/error/combine_errors.ts:20",{"_index":16,"title":{},"body":{"classes/CombineErrors.html":{}}}],["src/error/combine_errors.ts:22",{"_index":26,"title":{},"body":{"classes/CombineErrors.html":{}}}],["src/error/custom_error.t",{"_index":44,"title":{},"body":{"classes/CustomError.html":{},"coverage.html":{}}}],["src/error/custom_error.ts:21",{"_index":50,"title":{},"body":{"classes/CustomError.html":{}}}],["src/error/custom_error.ts:23",{"_index":51,"title":{},"body":{"classes/CustomError.html":{}}}],["src/error/entity.t",{"_index":314,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/error/expected_any_of.t",{"_index":137,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"coverage.html":{}}}],["src/error/expected_any_of.ts:41",{"_index":143,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["src/error/expected_any_of.ts:43",{"_index":144,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["src/error/expected_at_least.t",{"_index":158,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"coverage.html":{}}}],["src/error/expected_at_least.ts:23",{"_index":164,"title":{},"body":{"classes/ExpectedAtLeast.html":{}}}],["src/error/expected_at_least.ts:25",{"_index":165,"title":{},"body":{"classes/ExpectedAtLeast.html":{}}}],["src/error/expected_eoi.t",{"_index":170,"title":{},"body":{"classes/ExpectedEoi.html":{},"coverage.html":{}}}],["src/error/expected_eoi.ts:21",{"_index":173,"title":{},"body":{"classes/ExpectedEoi.html":{}}}],["src/error/expected_eoi.ts:22",{"_index":174,"title":{},"body":{"classes/ExpectedEoi.html":{}}}],["src/error/expected_field.t",{"_index":176,"title":{},"body":{"classes/ExpectedField.html":{},"coverage.html":{}}}],["src/error/expected_field.ts:21",{"_index":180,"title":{},"body":{"classes/ExpectedField.html":{}}}],["src/error/expected_field.ts:23",{"_index":182,"title":{},"body":{"classes/ExpectedField.html":{}}}],["src/error/expected_match.t",{"_index":185,"title":{},"body":{"classes/ExpectedMatch.html":{},"coverage.html":{}}}],["src/error/expected_match.ts:22",{"_index":188,"title":{},"body":{"classes/ExpectedMatch.html":{}}}],["src/error/expected_match.ts:24",{"_index":189,"title":{},"body":{"classes/ExpectedMatch.html":{}}}],["src/error/expected_none_of.t",{"_index":191,"title":{},"body":{"classes/ExpectedNoneOf.html":{},"coverage.html":{}}}],["src/error/expected_none_of.ts:25",{"_index":192,"title":{},"body":{"classes/ExpectedNoneOf.html":{}}}],["src/error/expected_none_of.ts:27",{"_index":194,"title":{},"body":{"classes/ExpectedNoneOf.html":{}}}],["src/error/expected_once.t",{"_index":199,"title":{},"body":{"classes/ExpectedOnce.html":{},"coverage.html":{}}}],["src/error/expected_once.ts:24",{"_index":202,"title":{},"body":{"classes/ExpectedOnce.html":{}}}],["src/error/expected_once.ts:26",{"_index":203,"title":{},"body":{"classes/ExpectedOnce.html":{}}}],["src/error/expected_within_range.t",{"_index":205,"title":{},"body":{"classes/ExpectedWithinRange.html":{},"coverage.html":{}}}],["src/error/expected_within_range.ts:22",{"_index":209,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["src/error/expected_within_range.ts:24",{"_index":212,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["src/error/index.t",{"_index":317,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/error/pattern_mismatch.t",{"_index":215,"title":{},"body":{"classes/PatternMismatch.html":{},"coverage.html":{}}}],["src/error/pattern_mismatch.ts:21",{"_index":219,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["src/error/pattern_mismatch.ts:23",{"_index":221,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["src/error/unexpected_eoi.t",{"_index":227,"title":{},"body":{"classes/UnexpectedEoi.html":{},"coverage.html":{}}}],["src/error/unexpected_eoi.ts:21",{"_index":230,"title":{},"body":{"classes/UnexpectedEoi.html":{}}}],["src/error/unexpected_eoi.ts:22",{"_index":231,"title":{},"body":{"classes/UnexpectedEoi.html":{}}}],["src/text/index.t",{"_index":318,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/text/input.t",{"_index":225,"title":{},"body":{"interfaces/TextInput.html":{},"coverage.html":{}}}],["src/value/index.t",{"_index":339,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/value/input.t",{"_index":233,"title":{},"body":{"interfaces/ValueInput.html":{},"coverage.html":{}}}],["start",{"_index":236,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":634,"title":{},"body":{"license.html":{}}}],["statement",{"_index":296,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["sticki",{"_index":427,"title":{},"body":{"index.html":{}}}],["still",{"_index":409,"title":{},"body":{"index.html":{}}}],["stoppag",{"_index":730,"title":{},"body":{"license.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"index.html":{}}}],["stringvalu",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["subject",{"_index":615,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":631,"title":{},"body":{"license.html":{}}}],["submiss",{"_index":278,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["submit",{"_index":267,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["subsequ",{"_index":613,"title":{},"body":{"license.html":{}}}],["succ",{"_index":125,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["succe",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["success",{"_index":107,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{}}}],["successfulli",{"_index":392,"title":{},"body":{"index.html":{}}}],["such",{"_index":549,"title":{},"body":{"license.html":{}}}],["super(input",{"_index":111,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["supersed",{"_index":689,"title":{},"body":{"license.html":{}}}],["support",{"_index":737,"title":{},"body":{"license.html":{}}}],["sure",{"_index":475,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":754,"title":{},"body":{"license.html":{}}}],["system",{"_index":604,"title":{},"body":{"license.html":{}}}],["t",{"_index":788,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tabl",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":420,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["takecharbetween",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["takecharwhil",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["term",{"_index":529,"title":{},"body":{"license.html":{}}}],["termin",{"_index":653,"title":{},"body":{"license.html":{}}}],["testchar",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["testobject",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["testtyp",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["testvalu",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["text",{"_index":415,"title":{},"body":{"index.html":{},"license.html":{}}}],["textdecod",{"_index":780,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["textinput",{"_index":224,"title":{"interfaces/TextInput.html":{}},"body":{"interfaces/TextInput.html":{},"coverage.html":{},"index.html":{}}}],["theori",{"_index":716,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":595,"title":{},"body":{"license.html":{}}}],["third",{"_index":675,"title":{},"body":{"license.html":{}}}],["this.error",{"_index":33,"title":{},"body":{"classes/CombineErrors.html":{}}}],["this.failur",{"_index":129,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["this.field",{"_index":183,"title":{},"body":{"classes/ExpectedField.html":{}}}],["this.flatmap(v",{"_index":114,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["this.flatmaperror(",{"_index":131,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["this.max",{"_index":213,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["this.messag",{"_index":52,"title":{},"body":{"classes/CustomError.html":{}}}],["this.min",{"_index":167,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"classes/ExpectedWithinRange.html":{}}}],["this.pattern",{"_index":222,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["this.valu",{"_index":118,"title":{},"body":{"classes/DecodeResultBase.html":{},"classes/ExpectedMatch.html":{}}}],["those",{"_index":508,"title":{},"body":{"index.html":{},"license.html":{}}}],["through",{"_index":534,"title":{},"body":{"license.html":{}}}],["throw",{"_index":122,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["time",{"_index":161,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["titl",{"_index":704,"title":{},"body":{"license.html":{}}}],["tort",{"_index":717,"title":{},"body":{"license.html":{}}}],["tostr",{"_index":11,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{}}}],["track",{"_index":388,"title":{},"body":{"index.html":{},"license.html":{}}}],["trade",{"_index":692,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":666,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":637,"title":{},"body":{"license.html":{}}}],["transform",{"_index":492,"title":{},"body":{"index.html":{},"license.html":{}}}],["translat",{"_index":571,"title":{},"body":{"license.html":{}}}],["tri",{"_index":368,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["true",{"_index":120,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["tupletounion",{"_index":781,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tuplevalu",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["two",{"_index":57,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{}}}],["twp",{"_index":207,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"interfaces/ValueInput.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":773,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":789,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["undefineablevalu",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["undefinedvalu",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["under",{"_index":542,"title":{},"body":{"license.html":{}}}],["unexpect",{"_index":228,"title":{},"body":{"classes/UnexpectedEoi.html":{}}}],["unexpectedeoi",{"_index":226,"title":{"classes/UnexpectedEoi.html":{}},"body":{"classes/UnexpectedEoi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["union",{"_index":56,"title":{},"body":{"classes/DecodeResultBase.html":{},"license.html":{}}}],["unless",{"_index":685,"title":{},"body":{"license.html":{}}}],["uppercase_lett",{"_index":373,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uppercaselett",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["us",{"_index":258,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":792,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["util",{"_index":146,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"index.html":{}}}],["v",{"_index":512,"title":{},"body":{"index.html":{}}}],["v.",{"_index":520,"title":{},"body":{"index.html":{}}}],["v.l",{"_index":521,"title":{},"body":{"index.html":{}}}],["v[1",{"_index":469,"title":{},"body":{"index.html":{}}}],["v[2",{"_index":470,"title":{},"body":{"index.html":{}}}],["valid",{"_index":491,"title":{},"body":{"index.html":{}}}],["valu",{"_index":24,"title":{},"body":{"classes/CombineErrors.html":{},"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{}}}],["valuedecod",{"_index":782,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["valueinput",{"_index":232,"title":{"interfaces/ValueInput.html":{}},"body":{"interfaces/ValueInput.html":{},"coverage.html":{},"index.html":{}}}],["values.length",{"_index":155,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["variabl",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["verbal",{"_index":600,"title":{},"body":{"license.html":{}}}],["version",{"_index":524,"title":{},"body":{"license.html":{}}}],["void",{"_index":83,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["want",{"_index":380,"title":{},"body":{"index.html":{}}}],["warranti",{"_index":698,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":216,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["we'd",{"_index":238,"title":{},"body":{"contributing.html":{}}}],["wherev",{"_index":674,"title":{},"body":{"license.html":{}}}],["whether",{"_index":550,"title":{},"body":{"license.html":{}}}],["whitespac",{"_index":336,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["whole",{"_index":590,"title":{},"body":{"license.html":{}}}],["within",{"_index":210,"title":{},"body":{"classes/ExpectedWithinRange.html":{},"index.html":{},"license.html":{}}}],["without",{"_index":657,"title":{},"body":{"license.html":{}}}],["withposit",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["work",{"_index":575,"title":{},"body":{"license.html":{}}}],["worldwid",{"_index":619,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":478,"title":{},"body":{"index.html":{}}}],["write",{"_index":422,"title":{},"body":{"index.html":{},"license.html":{}}}],["written",{"_index":601,"title":{},"body":{"license.html":{}}}],["y",{"_index":426,"title":{},"body":{"index.html":{}}}],["you'v",{"_index":269,"title":{},"body":{"contributing.html":{}}}],["yyyi",{"_index":763,"title":{},"body":{"license.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/CombineErrors.html":{"url":"classes/CombineErrors.html","title":"class - CombineErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CombineErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/combine_errors.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: DecodeError[])\n                    \n                \n                        \n                            \n                                Defined in src/error/combine_errors.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    DecodeError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'combine-errors'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/combine_errors.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/combine_errors.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { DecodeError } from './'\n\nexport class CombineErrors {\n  readonly kind: 'combine-errors' = 'combine-errors'\n  constructor(readonly errors: DecodeError[]) {}\n  toString() {\n    const errors: string = this.errors\n      .map(e => e.toString())\n      .map(s => `  - ${s}`)\n      .join('\\n')\n    return `expected one of:\\n${errors}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomError.html":{"url":"classes/CustomError.html","title":"class - CustomError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/custom_error.ts\n        \n\n            \n                Description\n            \n            \n                Error type that allows for a customized message.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/custom_error.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'custom-error'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/custom_error.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/custom_error.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class CustomError {\n  readonly kind: 'custom-error' = 'custom-error'\n  constructor(readonly message: string) {}\n  toString() {\n    return this.message\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DecodeResultBase.html":{"url":"classes/DecodeResultBase.html","title":"class - DecodeResultBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DecodeResultBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/result.ts\n        \n\n            \n                Description\n            \n            \n                DecodeResult is a union type that has two possible constructors\nDecodeSuccess and DecodeFailure.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _E\n                            \n                            \n                                    Readonly\n                                _I\n                            \n                            \n                                    Readonly\n                                _O\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                flatMap\n                            \n                            \n                                    Abstract\n                                flatMapError\n                            \n                            \n                                    Abstract\n                                getUnsafeFailure\n                            \n                            \n                                    Abstract\n                                getUnsafeSuccess\n                            \n                            \n                                    Abstract\n                                isFailure\n                            \n                            \n                                    Abstract\n                                isSuccess\n                            \n                            \n                                    Abstract\n                                map\n                            \n                            \n                                    Abstract\n                                mapError\n                            \n                            \n                                    Abstract\n                                mapInput\n                            \n                            \n                                    Abstract\n                                match\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: In)\n                    \n                \n                        \n                            \n                                Defined in src/core/result.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                    In\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            _E\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _E:     Err\n\n                    \n                \n                    \n                        \n                            Type :     Err\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/result.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            _I\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _I:     In\n\n                    \n                \n                    \n                        \n                            Type :     In\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/result.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            _O\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _O:     Out\n\n                    \n                \n                    \n                        \n                            Type :     Out\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/result.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            flatMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        flatMap(f: (r: Out) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:32\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        Out2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            flatMapError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        flatMapError(f: (r: Err) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:33\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        Err2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            getUnsafeFailure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUnsafeFailure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Err\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            getUnsafeSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUnsafeSuccess()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Out\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            isFailure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isFailure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     DecodeFailure\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            isSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isSuccess()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     DecodeSuccess\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        map(f: (r: Out) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:35\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        Out2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            mapError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mapError(f: (r: Err) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:36\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        Err2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            mapInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mapInput(f: (i: In) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:37\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        In2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        match(o: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:27\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        O\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     O\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        abstract class DecodeResultBase {\n  readonly _I!: In\n  readonly _O!: Out\n  readonly _E!: Err\n\n  constructor(readonly input: In) {}\n  abstract match(o: {\n    success: (s: DecodeSuccess) => O\n    failure: (f: DecodeFailure) => O\n  }): O\n\n  abstract flatMap(f: (r: Out) => DecodeResult): DecodeResult\n  abstract flatMapError(f: (r: Err) => DecodeResult): DecodeResult\n\n  abstract map(f: (r: Out) => Out2): DecodeResult\n  abstract mapError(f: (r: Err) => Err2): DecodeResult\n  abstract mapInput(f: (i: In) => In2): DecodeResult\n\n  abstract isSuccess(): this is DecodeSuccess\n  abstract isFailure(): this is DecodeFailure\n\n  abstract getUnsafeSuccess(): Out\n  abstract getUnsafeFailure(): Err\n\n  abstract toString(): string\n}\n\nexport class DecodeSuccess extends DecodeResultBase {\n  readonly kind = 'decode-success'\n  constructor(input: In, readonly value: Out) {\n    super(input)\n  }\n\n  match(o: { success: (s: DecodeSuccess) => O; failure: (f: DecodeFailure) => O }): O {\n    return o.success(this)\n  }\n\n  flatMap(f: (r: Out) => DecodeResult): DecodeResult {\n    return f(this.value)\n  }\n  map(f: (r: Out) => Out2): DecodeResult {\n    return this.flatMap(v => new DecodeSuccess(this.input, f(v)))\n  }\n  flatMapError(f: (r: Err) => DecodeResult): DecodeResult {\n    return new DecodeSuccess(this.input, this.value)\n  }\n  mapError(f: (r: Err) => Err2): DecodeResult {\n    return new DecodeSuccess(this.input, this.value)\n  }\n  mapInput(f: (i: In) => In2): DecodeResult {\n    return new DecodeSuccess(f(this.input), this.value)\n  }\n\n  isSuccess(): this is DecodeSuccess {\n    return true\n  }\n  isFailure(): this is DecodeFailure {\n    return false\n  }\n\n  getUnsafeSuccess(): Out {\n    return this.value\n  }\n  getUnsafeFailure(): Err {\n    throw new Error(\"can't get failure from success\")\n  }\n\n  toString(): string {\n    return `DecodeSuccess: ${JSON.stringify(this.input)}`\n  }\n}\n\nexport class DecodeFailure extends DecodeResultBase {\n  readonly kind = 'decode-failure'\n  constructor(input: In, readonly failure: Err) {\n    super(input)\n  }\n\n  match(o: {\n    success: (succ: DecodeSuccess) => O\n    failure: (fail: DecodeFailure) => O\n  }): O {\n    return o.failure(this)\n  }\n\n  flatMap(f: (r: Out) => DecodeResult): DecodeResult {\n    return new DecodeFailure(this.input, this.failure)\n  }\n  map(f: (r: Out) => Out2): DecodeResult {\n    return new DecodeFailure(this.input, this.failure)\n  }\n  flatMapError(f: (r: Err) => DecodeResult): DecodeResult {\n    return f(this.failure)\n  }\n  mapError(f: (r: Err) => Err2): DecodeResult {\n    return this.flatMapError(e => new DecodeFailure(this.input, f(e)))\n  }\n  mapInput(f: (i: In) => In2): DecodeResult {\n    return new DecodeFailure(f(this.input), this.failure)\n  }\n\n  isSuccess(): this is DecodeSuccess {\n    return false\n  }\n  isFailure(): this is DecodeFailure {\n    return true\n  }\n  getUnsafeSuccess(): Out {\n    throw new Error(\"can't get success from failure\")\n  }\n  getUnsafeFailure(): Err {\n    return this.failure\n  }\n\n  toString(): string {\n    return `DecodeFailure: ${JSON.stringify(this.input)}`\n  }\n}\n\nexport type DecodeResult = DecodeSuccess | DecodeFailure\n\nexport const success = (input: In, result: Out): DecodeResult =>\n  new DecodeSuccess(input, result)\nexport const failure = (input: In, failure: Err): DecodeResult =>\n  new DecodeFailure(input, failure)\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedAnyOf.html":{"url":"classes/ExpectedAnyOf.html","title":"class - ExpectedAnyOf","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedAnyOf\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_any_of.ts\n        \n\n            \n                Description\n            \n            \n                Error for any Entity that should match at least one of the conditions\ndescribed in the descriptions array.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: Entity, descriptions: string[])\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_any_of.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Entity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        descriptions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-any-of'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_any_of.ts:41\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_any_of.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, entityToString } from './entity'\n\n/**\n * Utility function to generate a comma separate list of values where the last\n * one is concatenated by `or`.\n */\nexport const concatOr = (values: string[]) => {\n  const length = values.length\n  if (length === 0) {\n    return ''\n  } else if (length \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedAtLeast.html":{"url":"classes/ExpectedAtLeast.html","title":"class - ExpectedAtLeast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedAtLeast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_at_least.ts\n        \n\n            \n                Description\n            \n            \n                Error for an Entity that was not repeated at least min times.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(min: number, entity: Entity)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_at_least.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Entity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-at-least'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_at_least.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_at_least.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, entityToString } from './entity'\n\n/**\n * Error for an {@link Entity} that was not repeated at least `min` times.\n */\nexport class ExpectedAtLeast {\n  readonly kind: 'expected-at-least' = 'expected-at-least'\n  constructor(readonly min: number, readonly entity: Entity) {}\n  toString() {\n    return `expected at least ${this.min} ${entityToString(this.entity, this.min)}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedEoi.html":{"url":"classes/ExpectedEoi.html","title":"class - ExpectedEoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedEoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_eoi.ts\n        \n\n            \n                Description\n            \n            \n                Error for expected end of input.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-eot'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_eoi.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_eoi.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class ExpectedEoi {\n  readonly kind: 'expected-eot' = 'expected-eot'\n  toString() {\n    return `expected end of input`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedField.html":{"url":"classes/ExpectedField.html","title":"class - ExpectedField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_field.ts\n        \n\n            \n                Description\n            \n            \n                Error for missing fieeld.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_field.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-field'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_field.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_field.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class ExpectedField {\n  readonly kind: 'expected-field' = 'expected-field'\n  constructor(readonly field: string) {}\n  toString() {\n    return `expected field \"${this.field}\"`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedMatch.html":{"url":"classes/ExpectedMatch.html","title":"class - ExpectedMatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedMatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_match.ts\n        \n\n            \n                Description\n            \n            \n                Error for an exact match that failed. The expectation is described as a\nstring.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_match.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-match'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_match.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_match.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class ExpectedMatch {\n  readonly kind: 'expected-match' = 'expected-match'\n  constructor(readonly value: string) {}\n  toString() {\n    return `expected ${this.value}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedNoneOf.html":{"url":"classes/ExpectedNoneOf.html","title":"class - ExpectedNoneOf","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedNoneOf\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_none_of.ts\n        \n\n            \n                Description\n            \n            \n                Error for a decoder that is expected to fail decoding an Entity for\nany of the values as they are described in the descriptions array.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: Entity, descriptions: string[])\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_none_of.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Entity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        descriptions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'none-of-error'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_none_of.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_none_of.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, entityToString } from './entity'\nimport { concatOr } from './expected_any_of'\n\n/**\n * Error for a decoder that is expected to fail decoding an {@link Entity} for\n * any of the values as they are described in the `descriptions` array.\n */\nexport class ExpectedNoneOf {\n  readonly kind: 'none-of-error' = 'none-of-error'\n  constructor(readonly entity: Entity, readonly descriptions: string[]) {}\n  toString() {\n    return `expected no ${entityToString(this.entity, 1)} like ${concatOr(this.descriptions)}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedOnce.html":{"url":"classes/ExpectedOnce.html","title":"class - ExpectedOnce","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedOnce\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_once.ts\n        \n\n            \n                Description\n            \n            \n                Error for an Entity that was expected to be captured once by a\ndecoder.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: Entity)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_once.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Entity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-once'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_once.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_once.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, entityToString } from './entity'\n\n/**\n * Error for an {@link Entity} that was expected to be captured once by a\n * decoder.\n */\nexport class ExpectedOnce {\n  readonly kind: 'expected-once' = 'expected-once'\n  constructor(readonly entity: Entity) {}\n  toString() {\n    return `expected a ${entityToString(this.entity, 1)}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedWithinRange.html":{"url":"classes/ExpectedWithinRange.html","title":"class - ExpectedWithinRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedWithinRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_within_range.ts\n        \n\n            \n                Description\n            \n            \n                Error for a decoder that should have captured a value between twp values\nas described in min and max.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(min: string, max: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_within_range.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        max\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-within-range'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_within_range.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_within_range.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class ExpectedWithinRange {\n  readonly kind: 'expected-within-range' = 'expected-within-range'\n  constructor(readonly min: string, readonly max: string) {}\n  toString() {\n    return `expected between ${this.min} and ${this.max}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatternMismatch.html":{"url":"classes/PatternMismatch.html","title":"class - PatternMismatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatternMismatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/pattern_mismatch.ts\n        \n\n            \n                Description\n            \n            \n                Expected error for a decoder that wasn't able to match pattern.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pattern: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/pattern_mismatch.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pattern\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'pattern-mismatch'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/pattern_mismatch.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/pattern_mismatch.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class PatternMismatch {\n  readonly kind: 'pattern-mismatch' = 'pattern-mismatch'\n  constructor(readonly pattern: string) {}\n  toString() {\n    return `expected to match pattern ${this.pattern}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextInput.html":{"url":"interfaces/TextInput.html","title":"interface - TextInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TextInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text/input.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                                \n                                        input\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TextInput {\n  readonly input: string\n  readonly index: number\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnexpectedEoi.html":{"url":"classes/UnexpectedEoi.html","title":"class - UnexpectedEoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnexpectedEoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/unexpected_eoi.ts\n        \n\n            \n                Description\n            \n            \n                Error for a decoder that is not expecting an end of input.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'unexpected-eoi'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/unexpected_eoi.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/unexpected_eoi.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnexpectedEoi {\n  readonly kind: 'unexpected-eoi' = 'unexpected-eoi'\n  toString() {\n    return `unexpected end of input`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValueInput.html":{"url":"interfaces/ValueInput.html","title":"interface - ValueInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValueInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/value/input.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        input\n                                \n                                \n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     (string | number)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (string | number)[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ValueInput {\n  readonly input: any\n  readonly path: (string | number)[]\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nHow to Contribute\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\nContributor License Agreement\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to https://cla.developers.google.com/ to see\nyour current agreements on file or to sign a new one.\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\nCode reviews\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\nGitHub Help for more\ninformation on using pull requests.\nCommunity Guidelines\nThis project follows\nGoogle's Open Source Community Guidelines.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                class\n            \n            \n                Decoder\n            \n            \n                88 %\n                (23/26)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                fail\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                lazy\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                oneOf\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                sequence\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                succeed\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                class\n            \n            \n                DecodeFailure\n            \n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                class\n            \n            \n                DecodeResultBase\n            \n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                class\n            \n            \n                DecodeSuccess\n            \n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                variable\n            \n            \n                failure\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                variable\n            \n            \n                success\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error/combine_errors.ts\n            \n            \n                class\n            \n            \n                CombineErrors\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/error/custom_error.ts\n            \n            \n                class\n            \n            \n                CustomError\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/error/entity.ts\n            \n            \n                variable\n            \n            \n                entityToString\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/error/expected_any_of.ts\n            \n            \n                class\n            \n            \n                ExpectedAnyOf\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/error/expected_any_of.ts\n            \n            \n                variable\n            \n            \n                concatOr\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/error/expected_at_least.ts\n            \n            \n                class\n            \n            \n                ExpectedAtLeast\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/error/expected_eoi.ts\n            \n            \n                class\n            \n            \n                ExpectedEoi\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/error/expected_field.ts\n            \n            \n                class\n            \n            \n                ExpectedField\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/error/expected_match.ts\n            \n            \n                class\n            \n            \n                ExpectedMatch\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/error/expected_none_of.ts\n            \n            \n                class\n            \n            \n                ExpectedNoneOf\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/error/expected_once.ts\n            \n            \n                class\n            \n            \n                ExpectedOnce\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/error/expected_within_range.ts\n            \n            \n                class\n            \n            \n                ExpectedWithinRange\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/error/index.ts\n            \n            \n                variable\n            \n            \n                DecodeError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error/pattern_mismatch.ts\n            \n            \n                class\n            \n            \n                PatternMismatch\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/error/unexpected_eoi.ts\n            \n            \n                class\n            \n            \n                UnexpectedEoi\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                char\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                decodeText\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                digit\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                digits\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                eoi\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                failureToString\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                letter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                letters\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                lowerCaseLetter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                lowerCaseLetters\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                make\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                match\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                matchAnyCharOf\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                matchInsensitive\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                matchNoCharOf\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                optionalWhitespace\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                \n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                regexp\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                rest\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                takeCharBetween\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                takeCharWhile\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                testChar\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                upperCaseLetter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                upperCaseLetters\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                whitespace\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                withPosition\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/input.ts\n            \n            \n                interface\n            \n            \n                TextInput\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                anyArrayValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                anyValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                arrayValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                booleanValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                decodeValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                failureToString\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                finiteNumberValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                integerValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                isToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                literalValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                make\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                nullableValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                nullValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                numberValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                objectValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                optionalValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                pathToString\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                safeIntegerValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                stringValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                testObject\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                testType\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                testValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                tupleValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                undefineableValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                undefinedValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/input.ts\n            \n            \n                interface\n            \n            \n                ValueInput\n            \n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Entity   (src/.../entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/error/entity.ts\n    \n        \n            \n                \n                    \n                        \n                        Entity\n                    \n                \n                    \n                        \n                            Enumeration that tries to capture different kind of entities that are\nnormally found has decoder inputs.\n\n                        \n                    \n                        \n                            \n                                 CHARACTER\n                            \n                        \n                        \n                            \n                                 PREDICATE\n                            \n                        \n                        \n                            \n                                 LETTER\n                            \n                        \n                        \n                            \n                                 UPPERCASE_LETTER\n                            \n                        \n                        \n                            \n                                 LOWER_CASE_LETTER\n                            \n                        \n                        \n                            \n                                 DIGIT\n                            \n                        \n                        \n                            \n                                 WHITESPACE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nParTSing\nParTSing is a decoder combinator library. You can use it to build parsers/decoders from string or really any input values.\nIf you want full control over what to decode your should start from partsing/core/decoder. It provides 3 types parameters\n\nIn for the input. Remember that you will need to decode one portion of your input at the time and your input probably needs to track somehow the current position.\nOut it's the type of the value if successfully decoded.\nErr it's the type of the failure returned when the parser fails.\n\nThe library provides two additional set of utility functions to decode string values (partsing/text) and native JS values (partsing/value).\nDecoder Error\nIf you adopt the generic Decoder directly, you can define the shape of your error. The library provides a DecoderError type that should fit most decoding needs. The type of errors available are defined in partsing/error.\nDecoderError provides a simple method to debug the result of the decoding (toString) but still leaves the flexibility to give granular control on the representation of the error.\nBoth [Text Decoding] and [Value Decoding] use DecodeError.\nText Decoding\nTo be able to keep track of the position of the decoding within a string, Text Decoding uses TextInput to track both the entire text input and the current index.\nThe decodeText function simplifies the inputs and outputs of decoding text. It takes a text decoder (Decoder) and return a function that takes a string input and returns a DecodeResult (where input and error are of type string).\nIf you intend to write your own regular expressions decoder functions, consider using the y (sticky) flag. When used, there is no need to reallocate slices of the input string saving memory and CPU cycles. The sticky flag is not available for all implementations of JS.\nValue Decoding\nTo be able to keep track of the position of the decoding within any value, Value Decoding uses ValueInput to track both the input value and the current position within it using a path. path is an array of either string (object field name) or number (array/tuple index position).\nThe decodeValue function simplifies the inputs and outputs of decoding values. It takes a value decoder (Decoder) and return a function that takes any and returns a DecodeResult (where input is of type any and error is of type string).\nExample\nA simple decoder combinator to parse color values from strings into class instances.\nclass RGB {\n  constructor(readonly rgb: number) {}\n}\n\nclass Grey {\n  constructor(readonly value: number) {}\n}\n\nclass HSL {\n  constructor(readonly hue: number, readonly saturation: number, readonly lightness: number) {}\n}\n\ntype Color = RGB | Grey | HSL\n\nconst ratioDecoder = regexp(/0[.]\\d+/y).map(Number)\nconst rgbDecoder   = regexp(/[#]([0-9a-f]{6})/iy, 1)\n                       .map(v => parseInt(v, 16))\n                       .map(v => new RGB(v))\nconst greyDecoder  = matchInsensitive('grey').or(DecodeError.combine, matchInsensitive('gray'))\n                       .skipNext(optionalWhitespace)\n                       .pickNext(ratioDecoder)\n                       .map(v => new Grey(v))\nconst hslDecoder   = matchInsensitive('hsl(')\n                       .pickNext(\n                         ratioDecoder\n                           .separatedByTimes(match(','), 3)\n                           .map(v => new HSL(v[0], v[1], v[2]))\n                       )\n                       .skipNext(match(')'))\n\nconst colorTextDecoder = decodeText(\n    oneOf(\n      DecodeError.combine,\n      rgbDecoder,\n      greyDecoder,\n      hslDecoder\n    ).skipNext(eoi) // make sure that there is nothing left to decode\n  )\n\n// all results are wrapped in a DecodeSuccess\n// colorTextDecoder('#003355')          == new RGB(0x003355)\n// colorTextDecoder('gray 0.3')         == new Grey(0.3)\n// colorTextDecoder('gray0.2')          == new Grey(0.2)\n// colorTextDecoder('HSL(0.1,0.2,0.3)') == new HSL(0.1,0.2,0.3)Another scenario where decoding comes in handy is to validate, type and transform payloads from JSON requests. You can decode a value (after being parsed by JSON.parse) into one of the Color types described above.\nA few examples of valid JSON payloads:\n\"#003366\"{ \"grey\": 0.5 }{ \"kind\": \"hsl\", \"h\": 0.2, \"s\": 0.5, \"l\": 0.8 }Here is a colorValueDecoder definition that can deal with those cases:\nconst ratioValue = numberValue.test(v => v >= 0 && v  ({ input, index: 0 }), v => v)\n\n// example: { \"grey\": 0.5 }\nconst greyValue = objectValue(\n    { grey: ratioValue },\n    [] // the empty array means that no fields are optional\n  ).map(v => new Grey(v.grey))\n\n// example: { \"kind\": \"hsl\", \"h\": 0.2, \"s\": 0.5, \"l\": 0.8 }\nconst hslValue = objectValue(\n    {\n      kind: literalValue('hsl'),\n      h: ratioValue,\n      s: ratioValue,\n      l: ratioValue\n    },\n    []\n  ).map(v => new HSL(v.h, v.s, v.l))\n\nconst colorValueDecoder = decodeValue(\n    oneOf(\n      DecodeError.combine,\n      rgbValue,\n      greyValue,\n      hslValue\n    )\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DecodeError   (src/.../index.ts)\n                        \n                        \n                            DecodeResult   (src/.../result.ts)\n                        \n                        \n                            Decoding   (src/.../decoder.ts)\n                        \n                        \n                            Error   (src/.../type_level.ts)\n                        \n                        \n                            Input   (src/.../type_level.ts)\n                        \n                        \n                            MarkOptionalFields   (src/.../type_level.ts)\n                        \n                        \n                            Output   (src/.../type_level.ts)\n                        \n                        \n                            TextDecoder   (src/.../index.ts)\n                        \n                        \n                            TupleToUnion   (src/.../type_level.ts)\n                        \n                        \n                            ValueDecoder   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/error/index.ts\n    \n        \n            \n                \n                    \n                        \n                        DecodeError\n                    \n                \n                \n                    \n                        DecodeError:     CustomError | ExpectedAnyOf | ExpectedAtLeast | ExpectedEoi | ExpectedField | ExpectedMatch | ExpectedNoneOf | ExpectedOnce | CombineErrors | ExpectedWithinRange | PatternMismatch | UnexpectedEoi\n\n                    \n                \n            \n        \n\n    src/core/result.ts\n    \n        \n            \n                \n                    \n                        \n                        DecodeResult\n                    \n                \n                \n                    \n                        DecodeResult:     DecodeSuccess | DecodeFailure\n\n                    \n                \n            \n        \n\n    src/core/decoder.ts\n    \n        \n            \n                \n                    \n                        \n                        Decoding\n                    \n                \n                    \n                        \n                            Type signature for a function that takes an input and decodes it into a\nresult object.\n\n                        \n                    \n                \n                    \n                        Decoding:     function\n\n                    \n                \n            \n        \n\n    src/core/type_level.ts\n    \n        \n            \n                \n                    \n                        \n                        Error\n                    \n                \n                    \n                        \n                            Extracts the Err type from a Decoder type.\n\n                        \n                    \n                \n                    \n                        Error:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Input\n                    \n                \n                    \n                        \n                            Extracts the Int type from a Decoder type.\n\n                        \n                    \n                \n                    \n                        Input:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        MarkOptionalFields\n                    \n                \n                    \n                        \n                            Given a type for an object T and an array U of field names from U,\nreturn a new object type with the specified fields U marked as optional.\n\n                        \n                    \n                \n                    \n                        MarkOptionalFields:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Output\n                    \n                \n                    \n                        \n                            Extracts the Out type from a Decoder type.\n\n                        \n                    \n                \n                    \n                        Output:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TupleToUnion\n                    \n                \n                    \n                        \n                            This module contains type-level functions for compile-time usage.\n\n                        \n                    \n                \n                    \n                        TupleToUnion:      | never\n\n                    \n                \n            \n        \n\n    src/text/index.ts\n    \n        \n            \n                \n                    \n                        \n                        TextDecoder\n                    \n                \n                \n                    \n                        TextDecoder:     Decoder\n\n                    \n                \n            \n        \n\n    src/value/index.ts\n    \n        \n            \n                \n                    \n                        \n                        ValueDecoder\n                    \n                \n                \n                    \n                        ValueDecoder:     Decoder\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
