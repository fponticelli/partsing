var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/CustomError.html",[0,0.184,1,1.702]],["body/classes/CustomError.html",[0,0.287,1,2.652,2,0.595,3,0.428,4,0.352,5,2.861,6,2.427,7,3.05,8,0.54,9,3.519,10,5.104,11,4.861,12,0.281,13,0.75,14,0.703,15,0.863,16,0.866,17,0.996,18,1.011,19,3.519,20,0.738,21,0.821,22,4.438,23,0.894,24,0.045,25,0.687,26,0.786,27,0.894,28,0.595,29,3.519,30,0.75,31,0.595,32,1.011,33,3.519,34,0.036,35,0.036]],["title/classes/DecodeResultBase.html",[0,0.184,36,1.965]],["body/classes/DecodeResultBase.html",[0,0.202,2,0.217,3,0.156,4,0.128,6,0.884,8,0.617,12,0.102,13,0.357,14,0.676,15,0.357,16,0.412,17,0.726,18,0.607,20,0.452,21,0.815,23,1.188,24,0.047,25,0.768,26,0.879,28,0.217,30,0.907,31,0.584,32,0.368,34,0.025,35,0.025,36,2.155,37,0.884,38,3.689,39,1.042,40,1.042,41,1.042,42,2.688,43,3.102,44,3.126,45,3.126,46,3.126,47,5.419,48,2.112,49,2.112,50,3.72,51,3.72,52,3.72,53,3.72,54,2.112,55,2.112,56,2.112,57,2.695,58,2.112,59,1.283,60,3.438,61,1.282,62,2.95,63,1.282,64,3.126,65,4.881,66,3.457,67,1.282,68,3.457,69,3.934,70,2.384,71,3.126,72,1.282,73,3.457,74,1.282,75,1.282,76,1.282,77,1.282,78,3.126,79,1.282,80,3.126,81,1.282,82,3.126,83,1.282,84,3.126,85,3.126,86,2.112,87,1.282,88,4.595,89,1.282,90,3.198,91,1.717,92,2.746,93,2.112,94,1.262,95,2.112,96,1.282,97,1.282,98,1.282,99,2.3,100,2.695,101,1.282,102,2.541,103,1.282,104,2.112,105,2.112,106,2.112,107,2.112,108,2.112,109,3.457,110,1.282,111,0.884,112,1.282,113,2.112,114,1.282,115,1.282,116,1.282,117,1.282,118,1.457,119,1.282,120,1.282]],["title/classes/ExpectedAnyOf.html",[0,0.184,121,1.702]],["body/classes/ExpectedAnyOf.html",[0,0.226,2,0.591,3,0.425,4,0.35,8,0.425,12,0.279,13,0.747,14,0.639,15,0.819,16,0.863,17,0.946,18,1.005,20,0.736,21,0.819,23,0.888,24,0.046,25,0.683,26,0.781,27,0.888,28,0.861,30,0.747,31,0.591,34,0.036,35,0.036,118,3.049,121,2.09,122,2.843,123,2.412,124,2.431,125,4.421,126,1.436,127,3.497,128,1.833,129,1.833,130,2.412,131,4.847,132,3.497,133,2.412]],["title/classes/ExpectedAtLeast.html",[0,0.184,134,1.702]],["body/classes/ExpectedAtLeast.html",[0,0.283,2,0.584,3,0.42,4,0.346,8,0.42,12,0.275,13,0.741,14,0.733,15,0.857,16,0.856,17,0.989,18,0.992,20,0.499,21,0.814,23,0.877,24,0.046,25,0.674,26,0.772,27,0.877,28,0.584,30,0.741,31,0.584,32,0.992,34,0.035,35,0.035,124,2.545,126,1.978,128,1.81,129,1.81,134,2.621,135,2.808,136,2.808,137,2.88,138,4.386,139,3.565,140,3.454,141,3.565,142,2.382]],["title/classes/ExpectedEoi.html",[0,0.184,143,1.702]],["body/classes/ExpectedEoi.html",[0,0.299,2,0.637,3,0.458,4,0.377,12,0.3,13,0.782,14,0.725,15,0.884,16,0.904,17,1.021,20,0.545,21,0.782,24,0.045,27,0.957,28,0.637,30,0.782,31,0.637,34,0.037,35,0.037,59,1.546,126,2.058,143,2.767,144,3.062,145,5.013,146,3.767,147,3.767,148,2.598]],["title/classes/ExpectedField.html",[0,0.184,149,1.702]],["body/classes/ExpectedField.html",[0,0.29,2,0.604,3,0.435,4,0.358,8,0.435,12,0.285,13,0.757,14,0.708,15,0.868,16,0.875,17,1.002,18,1.027,20,0.742,21,0.827,23,0.908,24,0.046,25,0.698,26,0.799,27,0.908,28,0.604,30,0.757,31,0.604,32,1.027,34,0.036,35,0.036,126,2.01,149,2.679,150,2.906,151,3.575,152,4.482,153,3.224,154,3.575,155,3.575]],["title/classes/ExpectedMatch.html",[0,0.184,156,1.702]],["body/classes/ExpectedMatch.html",[0,0.29,2,0.606,3,0.436,4,0.359,8,0.436,12,0.286,13,0.759,14,0.709,15,0.869,16,0.877,17,1.003,18,1.03,20,0.743,21,0.829,23,0.911,24,0.046,25,0.7,26,0.801,27,0.911,28,0.829,30,0.759,31,0.606,32,1.03,34,0.036,35,0.043,102,2.916,126,2.013,156,2.684,157,2.916,158,3.587,159,4.491,160,3.587]],["title/classes/ExpectedNoneOf.html",[0,0.184,161,1.702]],["body/classes/ExpectedNoneOf.html",[0,0.279,2,0.57,3,0.41,4,0.337,7,2.847,8,0.41,12,0.269,13,0.73,14,0.726,15,0.849,16,0.843,17,0.981,18,0.968,20,0.726,21,0.805,23,0.856,24,0.046,25,0.658,26,0.753,27,0.856,28,0.849,30,0.73,31,0.57,32,0.968,34,0.035,35,0.035,123,2.325,124,2.501,128,2.263,129,1.767,130,2.325,142,2.325,161,2.581,162,2.741,163,4.319,164,3.873,165,3.371,166,3.371,167,2.015,168,3.371]],["title/classes/ExpectedOnce.html",[0,0.184,169,1.702]],["body/classes/ExpectedOnce.html",[0,0.286,2,0.593,3,0.427,4,0.351,8,0.427,12,0.28,13,0.749,14,0.702,15,0.862,16,0.864,17,0.995,18,1.008,20,0.507,21,0.82,23,0.891,24,0.046,25,0.685,26,0.784,27,0.891,28,0.593,30,0.749,31,0.593,32,1.008,34,0.036,35,0.036,123,2.419,124,2.523,126,1.992,128,1.839,129,1.839,142,2.419,167,2.097,169,2.647,170,2.852,171,4.429,172,3.946,173,3.508]],["title/classes/ExpectedWithinRange.html",[0,0.184,174,1.702]],["body/classes/ExpectedWithinRange.html",[0,0.283,2,0.584,3,0.42,4,0.346,8,0.42,12,0.275,13,0.741,14,0.733,15,0.857,16,0.856,17,0.989,18,0.992,20,0.785,21,0.814,23,0.877,24,0.045,25,0.674,26,0.772,27,0.877,28,0.584,30,0.741,31,0.584,32,0.992,34,0.035,35,0.035,126,1.978,136,2.808,139,3.565,141,2.808,174,2.621,175,2.808,176,4.819,177,4.386,178,3.324,179,4.819,180,3.454,181,3.454,182,3.454]],["title/classes/PatternMismatch.html",[0,0.184,183,1.702]],["body/classes/PatternMismatch.html",[0,0.289,2,0.602,3,0.434,4,0.357,8,0.434,12,0.284,13,0.756,14,0.707,15,0.867,16,0.873,17,1.001,18,1.024,20,0.741,21,0.826,23,0.905,24,0.046,25,0.696,26,0.796,27,0.905,28,0.602,30,0.756,31,0.602,32,1.024,34,0.036,35,0.039,183,2.673,184,2.897,185,3.564,186,4.473,187,5.39,188,4.889,189,3.564,190,3.564]],["title/interfaces/TextInput.html",[191,1.169,192,1.702]],["body/interfaces/TextInput.html",[2,0.67,3,0.483,4,0.397,8,0.581,12,0.434,13,0.807,14,0.691,20,0.741,24,0.045,31,0.67,34,0.038,35,0.038,59,2.185,137,3.064,191,1.961,192,2.855,193,3.225]],["title/classes/UnexpectedEoi.html",[0,0.184,194,1.702]],["body/classes/UnexpectedEoi.html",[0,0.299,2,0.637,3,0.458,4,0.377,12,0.3,13,0.782,14,0.725,15,0.884,16,0.904,17,1.021,20,0.545,21,0.782,24,0.045,27,0.957,28,0.637,30,0.782,31,0.637,34,0.037,35,0.037,59,1.546,148,2.598,194,2.767,195,3.062,196,5.013,197,4.075,198,3.767,199,3.767]],["title/interfaces/ValueInput.html",[191,1.169,200,1.702]],["body/interfaces/ValueInput.html",[2,0.663,3,0.478,4,0.393,8,0.578,12,0.313,13,0.802,14,0.686,20,0.738,24,0.046,31,0.663,34,0.038,35,0.038,59,2.177,137,3.05,191,1.949,200,2.837,201,3.191,202,4.311]],["title/contributing.html",[203,1.649,204,1.429,205,1.649]],["body/contributing.html",[3,0.403,4,0.332,24,0.034,34,0.034,35,0.034,99,1.736,172,2.692,205,3.562,206,3.312,207,3.312,208,2.692,209,3.312,210,5.289,211,2.692,212,3.312,213,4.725,214,3.841,215,3.47,216,3.47,217,2.944,218,3.841,219,3.312,220,3.312,221,2.692,222,2.692,223,3.312,224,2.284,225,2.692,226,3.258,227,2.692,228,2.692,229,3.312,230,2.692,231,3.312,232,2.692,233,2.692,234,3.312,235,2.944,236,2.284,237,3.47,238,3.312,239,3.312,240,3.312,241,2.692,242,2.692,243,2.692,244,2.692,245,3.312,246,2.692,247,4.269,248,3.47,249,2.692,250,3.312,251,2.692,252,4.269,253,4.269,254,3.47,255,2.692,256,3.312,257,3.312,258,2.692,259,2.692,260,3.47,261,3.312,262,3.312]],["title/coverage.html",[263,3.142]],["body/coverage.html",[0,0.326,1,0.925,4,0.155,5,1.259,8,0.188,24,0.047,34,0.02,35,0.025,36,1.068,37,2.629,42,0.925,43,1.068,90,1.259,92,0.925,94,0.925,99,0.812,111,1.068,121,0.925,122,2.001,129,0.812,130,1.068,133,3.978,134,0.925,135,1.259,143,0.925,144,1.259,149,0.925,150,1.259,156,0.925,157,1.259,161,0.925,162,1.259,164,1.259,169,0.925,170,1.259,174,0.925,175,1.259,183,0.925,184,1.259,191,1.011,192,0.925,193,1.259,194,0.925,195,1.259,197,1.259,200,0.925,201,1.259,263,1.259,264,1.259,265,1.259,266,1.259,267,3.299,268,1.548,269,1.548,270,5.735,271,3.812,272,3.812,273,1.548,274,1.259,275,1.548,276,1.548,277,1.548,278,1.548,279,1.548,280,1.548,281,5.712,282,1.548,283,1.548,284,1.259,285,4.417,286,3.493,287,1.259,288,1.068,289,4.396,290,1.259,291,2.001,292,2.462,293,2.001,294,2.462,295,1.698,296,1.548,297,1.548,298,1.548,299,1.548,300,1.548,301,1.548,302,1.548,303,1.548,304,1.548,305,2.462,306,1.259,307,1.548,308,4.378,309,1.548,310,1.548,311,1.548,312,1.548,313,1.259,314,1.548,315,1.548,316,1.548,317,1.548,318,1.548,319,1.548,320,1.548,321,1.259,322,1.548,323,1.548,324,1.548,325,1.548,326,1.548,327,1.548,328,1.548,329,1.548,330,1.548,331,1.548,332,1.548,333,1.548]],["title/miscellaneous/enumerations.html",[334,1.429,335,2.78]],["body/miscellaneous/enumerations.html",[12,0.313,24,0.046,28,0.944,34,0.038,35,0.038,124,2.198,284,3.191,291,3.859,293,4.311,306,3.859,334,2.346,335,3.191,336,3.925,337,3.859,338,4.748,339,3.925,340,3.925,341,3.925,342,3.925]],["title/index.html",[12,0.191,203,1.649,204,1.429]],["body/index.html",[0,0.222,7,2.398,8,0.575,12,0.24,14,0.349,15,0.509,16,0.294,17,0.294,20,0.652,21,0.408,23,0.383,24,0.046,25,0.294,26,0.337,28,0.837,30,0.636,32,0.865,34,0.028,35,0.019,38,1.663,40,1.227,42,0.902,59,2.006,60,1.041,62,0.902,70,2.767,91,2.449,92,0.902,94,3.244,99,2.365,111,1.041,118,3.112,133,1.663,137,2.398,153,1.441,167,0.902,178,2.078,192,0.902,200,0.902,202,1.961,204,0.902,211,1.227,214,2.798,224,1.041,226,2.905,230,1.227,233,2.449,235,1.663,236,1.041,243,1.227,254,1.227,274,1.961,288,1.041,290,1.961,295,1.041,313,1.961,321,1.961,343,2.412,344,1.961,345,3.013,346,1.509,347,1.509,348,1.509,349,1.509,350,1.509,351,1.961,352,1.509,353,2.798,354,2.412,355,1.509,356,1.509,357,1.227,358,3.059,359,1.509,360,3.763,361,2.412,362,1.509,363,1.509,364,1.227,365,1.509,366,1.509,367,1.509,368,1.509,369,2.412,370,1.509,371,1.509,372,1.509,373,1.509,374,2.412,375,1.227,376,1.961,377,1.509,378,2.412,379,1.509,380,1.509,381,1.509,382,1.509,383,1.509,384,1.509,385,3.013,386,3.262,387,2.412,388,1.509,389,2.412,390,1.961,391,2.798,392,1.509,393,1.227,394,1.509,395,1.227,396,1.509,397,1.509,398,2.412,399,2.412,400,1.509,401,1.509,402,1.509,403,1.509,404,1.509,405,1.509,406,1.509,407,1.961,408,1.041,409,1.509,410,2.798,411,2.412,412,3.013,413,1.509,414,3.013,415,3.763,416,3.442,417,1.509,418,1.509,419,1.509,420,2.412,421,1.509,422,2.412,423,1.509,424,1.509,425,1.509,426,4.013,427,1.509,428,1.509,429,1.509,430,2.412,431,1.509,432,1.509,433,1.509,434,1.509,435,1.509,436,2.412,437,1.509,438,1.509,439,1.509,440,1.509,441,1.509,442,1.509,443,1.509,444,1.509,445,2.412,446,1.509,447,1.509,448,1.227,449,1.509,450,1.509,451,1.509,452,1.509,453,1.509,454,1.509,455,1.509,456,1.509,457,1.509,458,1.509,459,1.509,460,1.509,461,1.509,462,1.509,463,2.412,464,1.227,465,2.412,466,2.412,467,1.509,468,1.509,469,1.227,470,1.227,471,1.509,472,3.442,473,3.013,474,2.412,475,3.013,476,2.412,477,1.509,478,2.412,479,1.227,480,1.509,481,1.227,482,1.509,483,3.763,484,1.509,485,3.442,486,2.412,487,1.509,488,1.227,489,1.509,490,2.412,491,1.509,492,1.509,493,1.509,494,1.509,495,1.509]],["title/license.html",[203,1.649,204,1.429,217,1.649]],["body/license.html",[0,0.063,3,0.512,4,0.421,6,0.676,8,0.119,15,0.285,21,0.166,24,0.018,25,0.579,34,0.021,35,0.014,39,0.796,41,0.796,62,0.585,92,0.585,124,1.896,128,0.513,148,0.676,153,0.585,167,0.585,178,2.524,191,0.402,205,2.524,208,2.139,215,1.801,216,3.227,217,3.625,218,0.796,221,0.796,222,3.501,224,0.676,225,2.139,226,2.825,227,1.801,228,2.139,232,0.796,235,0.676,236,1.162,237,2.41,241,0.796,242,0.796,244,0.796,246,1.801,248,0.796,249,3.638,251,2.139,255,2.817,258,0.796,259,1.369,260,1.801,264,2.139,265,0.796,266,0.796,295,1.162,337,0.796,344,0.796,351,2.41,353,2.974,358,0.796,364,2.632,375,0.796,376,0.796,386,2.139,393,2.139,395,1.369,408,2.233,410,0.796,448,0.796,464,0.796,469,0.796,470,0.796,479,1.801,481,1.801,488,3.42,496,2.631,497,2.216,498,2.216,499,0.98,500,0.98,501,0.98,502,3.825,503,4.306,504,2.631,505,4.306,506,4.475,507,1.685,508,0.98,509,0.98,510,3.969,511,3.237,512,1.685,513,3.659,514,2.964,515,2.216,516,3.825,517,0.98,518,0.98,519,2.631,520,1.685,521,1.685,522,1.685,523,4.674,524,2.631,525,1.685,526,3.237,527,0.98,528,1.685,529,0.98,530,0.98,531,0.98,532,0.98,533,0.98,534,0.98,535,0.98,536,2.216,537,1.685,538,4.306,539,0.98,540,3.237,541,3.466,542,1.685,543,0.98,544,0.98,545,0.98,546,0.796,547,0.98,548,0.98,549,5.476,550,2.216,551,1.685,552,0.98,553,4.614,554,1.685,555,1.685,556,0.98,557,4.729,558,0.98,559,0.98,560,0.98,561,0.98,562,0.98,563,1.685,564,1.685,565,2.216,566,0.98,567,1.685,568,0.98,569,0.98,570,0.98,571,2.631,572,1.685,573,1.685,574,2.964,575,1.685,576,0.98,577,0.98,578,0.98,579,0.98,580,0.98,581,1.685,582,0.98,583,0.98,584,0.98,585,2.216,586,0.98,587,1.369,588,0.98,589,0.98,590,0.98,591,1.685,592,1.685,593,2.631,594,1.685,595,1.685,596,1.685,597,2.216,598,1.685,599,2.216,600,1.685,601,1.685,602,1.685,603,2.216,604,0.98,605,1.685,606,1.685,607,0.98,608,0.98,609,3.466,610,2.216,611,2.631,612,1.685,613,1.685,614,0.98,615,2.216,616,2.216,617,0.98,618,2.216,619,2.216,620,0.98,621,0.98,622,1.685,623,1.685,624,0.98,625,0.98,626,0.98,627,0.98,628,0.98,629,0.98,630,0.98,631,0.98,632,2.631,633,0.98,634,2.964,635,0.98,636,0.98,637,0.98,638,2.631,639,0.98,640,0.98,641,0.98,642,0.98,643,2.216,644,2.631,645,1.685,646,0.98,647,0.98,648,0.796,649,0.98,650,0.98,651,0.98,652,1.685,653,1.685,654,0.98,655,0.98,656,1.685,657,1.685,658,0.98,659,0.98,660,0.98,661,0.98,662,0.98,663,2.631,664,0.98,665,0.98,666,0.98,667,0.98,668,0.98,669,0.98,670,0.98,671,0.98,672,0.98,673,1.685,674,0.98,675,0.98,676,3.466,677,2.216,678,2.216,679,2.631,680,1.685,681,1.685,682,0.98,683,0.98,684,0.98,685,1.685,686,1.685,687,0.98,688,1.685,689,0.98,690,0.98,691,0.98,692,2.964,693,0.98,694,0.98,695,0.98,696,1.685,697,0.98,698,0.98,699,0.98,700,2.964,701,0.98,702,0.98,703,0.98,704,0.98,705,0.98,706,1.685,707,0.98,708,0.98,709,0.98,710,0.98,711,0.98,712,0.98,713,0.98,714,0.98,715,0.98,716,0.98,717,1.685,718,0.98,719,0.98,720,0.98,721,0.98,722,0.98,723,0.98,724,0.98,725,0.98,726,0.98,727,0.98,728,1.685,729,1.685,730,0.98,731,0.98,732,0.98,733,0.98,734,0.98,735,0.98,736,0.98,737,0.98,738,0.98,739,0.98,740,0.98,741,0.98,742,0.98,743,0.98,744,0.98,745,0.98,746,0.98,747,0.98]],["title/modules.html",[748,2.665]],["body/modules.html",[24,0.041,34,0.041,35,0.041,748,3.097]],["title/overview.html",[749,3.142]],["body/overview.html",[0,0.286,24,0.041,34,0.041,35,0.041,191,1.814,749,3.593,750,4.42,751,4.42]],["title/miscellaneous/typealiases.html",[334,1.429,752,3.42]],["body/miscellaneous/typealiases.html",[1,1.78,7,2.681,8,0.669,12,0.237,24,0.045,25,0.581,26,0.665,30,0.503,34,0.036,35,0.032,37,2.054,38,3.093,42,1.78,43,2.054,59,1.966,60,2.054,62,1.78,70,3.093,94,3.225,99,1.561,121,1.78,134,1.78,143,1.78,149,1.78,153,2.379,156,1.78,161,1.78,169,1.78,174,1.78,183,1.78,194,1.78,267,2.421,287,2.421,288,3.093,289,2.421,308,2.421,334,1.78,357,2.421,390,3.646,391,2.421,407,2.421,408,3.093,546,2.421,587,2.421,648,2.421,748,2.054,753,2.978,754,4.486,755,2.978,756,2.978,757,4.991,758,4.486,759,4.486,760,4.486,761,4.486,762,2.978,763,2.978,764,4.486,765,2.978,766,2.978,767,2.978,768,4.486,769,2.978,770,2.978,771,2.978,772,2.978]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":133,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"coverage.html":{},"index.html":{}}}],["0.2",{"_index":474,"title":{},"body":{"index.html":{}}}],["0.3",{"_index":454,"title":{},"body":{"index.html":{}}}],["0.5",{"_index":472,"title":{},"body":{"index.html":{}}}],["0.8",{"_index":476,"title":{},"body":{"index.html":{}}}],["0/1",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["003366",{"_index":471,"title":{},"body":{"index.html":{}}}],["1",{"_index":167,"title":{},"body":{"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"index.html":{},"license.html":{}}}],["1/1",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":750,"title":{},"body":{"overview.html":{}}}],["16",{"_index":428,"title":{},"body":{"index.html":{}}}],["2",{"_index":751,"title":{},"body":{"overview.html":{}}}],["2.0",{"_index":498,"title":{},"body":{"license.html":{}}}],["2004",{"_index":500,"title":{},"body":{"license.html":{}}}],["23/26",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":354,"title":{},"body":{"index.html":{}}}],["50",{"_index":531,"title":{},"body":{"license.html":{}}}],["6",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":509,"title":{},"body":{"license.html":{}}}],["9a",{"_index":424,"title":{},"body":{"index.html":{}}}],["_e",{"_index":44,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["_i",{"_index":45,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["_o",{"_index":46,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["abov",{"_index":470,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":47,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["accept",{"_index":208,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["accompani",{"_index":219,"title":{},"body":{"contributing.html":{}}}],["act",{"_index":515,"title":{},"body":{"license.html":{}}}],["add",{"_index":657,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":659,"title":{},"body":{"license.html":{}}}],["addit",{"_index":364,"title":{},"body":{"index.html":{},"license.html":{}}}],["adopt",{"_index":371,"title":{},"body":{"index.html":{}}}],["advis",{"_index":712,"title":{},"body":{"license.html":{}}}],["again",{"_index":245,"title":{},"body":{"contributing.html":{}}}],["against",{"_index":623,"title":{},"body":{"license.html":{}}}],["agre",{"_index":679,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":218,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["alias",{"_index":753,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alleg",{"_index":627,"title":{},"body":{"license.html":{}}}],["allow",{"_index":9,"title":{},"body":{"classes/CustomError.html":{}}}],["alon",{"_index":620,"title":{},"body":{"license.html":{}}}],["along",{"_index":650,"title":{},"body":{"license.html":{}}}],["alongsid",{"_index":658,"title":{},"body":{"license.html":{}}}],["alreadi",{"_index":240,"title":{},"body":{"contributing.html":{}}}],["and(b",{"_index":637,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":642,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":646,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":718,"title":{},"body":{"license.html":{}}}],["annot",{"_index":561,"title":{},"body":{"license.html":{}}}],["anyarrayvalu",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["anyvalu",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["apach",{"_index":496,"title":{},"body":{"license.html":{}}}],["appear",{"_index":655,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":555,"title":{},"body":{"license.html":{}}}],["appli",{"_index":615,"title":{},"body":{"license.html":{}}}],["applic",{"_index":677,"title":{},"body":{"license.html":{}}}],["appropri",{"_index":688,"title":{},"body":{"license.html":{}}}],["archiv",{"_index":740,"title":{},"body":{"license.html":{}}}],["aris",{"_index":704,"title":{},"body":{"license.html":{}}}],["array",{"_index":407,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["array/tupl",{"_index":409,"title":{},"body":{"index.html":{}}}],["arrayvalu",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["assert",{"_index":726,"title":{},"body":{"license.html":{}}}],["associ",{"_index":691,"title":{},"body":{"license.html":{}}}],["assum",{"_index":689,"title":{},"body":{"license.html":{}}}],["attach",{"_index":554,"title":{},"body":{"license.html":{}}}],["attribut",{"_index":644,"title":{},"body":{"license.html":{}}}],["author",{"_index":512,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":550,"title":{},"body":{"license.html":{}}}],["avail",{"_index":376,"title":{},"body":{"index.html":{},"license.html":{}}}],["base",{"_index":558,"title":{},"body":{"license.html":{}}}],["basi",{"_index":680,"title":{},"body":{"license.html":{}}}],["be",{"_index":467,"title":{},"body":{"index.html":{}}}],["behalf",{"_index":574,"title":{},"body":{"license.html":{}}}],["below",{"_index":556,"title":{},"body":{"license.html":{}}}],["benefici",{"_index":535,"title":{},"body":{"license.html":{}}}],["between",{"_index":181,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["bind",{"_index":570,"title":{},"body":{"license.html":{}}}],["boilerpl",{"_index":727,"title":{},"body":{"license.html":{}}}],["booleanvalu",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["both",{"_index":385,"title":{},"body":{"index.html":{}}}],["bracket",{"_index":729,"title":{},"body":{"license.html":{}}}],["build",{"_index":346,"title":{},"body":{"index.html":{}}}],["carri",{"_index":639,"title":{},"body":{"license.html":{}}}],["case",{"_index":482,"title":{},"body":{"index.html":{}}}],["caus",{"_index":521,"title":{},"body":{"license.html":{}}}],["chang",{"_index":641,"title":{},"body":{"license.html":{}}}],["char",{"_index":164,"title":{},"body":{"classes/ExpectedNoneOf.html":{},"coverage.html":{}}}],["charact",{"_index":337,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["charg",{"_index":599,"title":{},"body":{"license.html":{}}}],["choos",{"_index":713,"title":{},"body":{"license.html":{}}}],["cla",{"_index":238,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":616,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"coverage.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["code",{"_index":246,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["color",{"_index":412,"title":{},"body":{"index.html":{}}}],["colortextdecod",{"_index":444,"title":{},"body":{"index.html":{}}}],["colortextdecoder('#003355",{"_index":451,"title":{},"body":{"index.html":{}}}],["colortextdecoder('gray",{"_index":453,"title":{},"body":{"index.html":{}}}],["colortextdecoder('gray0.2",{"_index":456,"title":{},"body":{"index.html":{}}}],["colortextdecoder('hsl(0.1,0.2,0.3",{"_index":458,"title":{},"body":{"index.html":{}}}],["colorvaluedecod",{"_index":478,"title":{},"body":{"index.html":{}}}],["combin",{"_index":344,"title":{},"body":{"index.html":{},"license.html":{}}}],["come",{"_index":461,"title":{},"body":{"index.html":{}}}],["comment",{"_index":731,"title":{},"body":{"license.html":{}}}],["commerci",{"_index":711,"title":{},"body":{"license.html":{}}}],["common",{"_index":517,"title":{},"body":{"license.html":{}}}],["commun",{"_index":260,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["compil",{"_index":546,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["compli",{"_index":662,"title":{},"body":{"license.html":{}}}],["complianc",{"_index":742,"title":{},"body":{"license.html":{}}}],["comput",{"_index":709,"title":{},"body":{"license.html":{}}}],["concat",{"_index":130,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedNoneOf.html":{},"coverage.html":{}}}],["concator(this.valu",{"_index":168,"title":{},"body":{"classes/ExpectedNoneOf.html":{}}}],["condit",{"_index":503,"title":{},"body":{"license.html":{}}}],["configur",{"_index":543,"title":{},"body":{"license.html":{}}}],["consequenti",{"_index":703,"title":{},"body":{"license.html":{}}}],["consid",{"_index":396,"title":{},"body":{"index.html":{}}}],["consist",{"_index":720,"title":{},"body":{"license.html":{}}}],["conspicu",{"_index":586,"title":{},"body":{"license.html":{}}}],["const",{"_index":118,"title":{},"body":{"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"index.html":{}}}],["constitut",{"_index":628,"title":{},"body":{"license.html":{}}}],["constru",{"_index":660,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{}}}],["constructor(ent",{"_index":123,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{}}}],["constructor(field",{"_index":151,"title":{},"body":{"classes/ExpectedField.html":{}}}],["constructor(input",{"_index":57,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["constructor(messag",{"_index":19,"title":{},"body":{"classes/CustomError.html":{}}}],["constructor(min",{"_index":136,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"classes/ExpectedWithinRange.html":{}}}],["constructor(pattern",{"_index":185,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["constructor(readonli",{"_index":32,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"index.html":{}}}],["constructor(valu",{"_index":158,"title":{},"body":{"classes/ExpectedMatch.html":{}}}],["consult",{"_index":256,"title":{},"body":{"contributing.html":{}}}],["contain",{"_index":648,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["content",{"_index":656,"title":{},"body":{"license.html":{}}}],["contract",{"_index":525,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":205,"title":{"contributing.html":{}},"body":{"contributing.html":{},"license.html":{}}}],["contribution(",{"_index":619,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":216,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["contributori",{"_index":629,"title":{},"body":{"license.html":{}}}],["control",{"_index":351,"title":{},"body":{"index.html":{},"license.html":{}}}],["convers",{"_index":547,"title":{},"body":{"license.html":{}}}],["copi",{"_index":632,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":222,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["counterclaim",{"_index":625,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":263,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpu",{"_index":404,"title":{},"body":{"index.html":{}}}],["cross",{"_index":624,"title":{},"body":{"license.html":{}}}],["current",{"_index":233,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["custom",{"_index":10,"title":{},"body":{"classes/CustomError.html":{}}}],["customari",{"_index":674,"title":{},"body":{"license.html":{}}}],["customerror",{"_index":1,"title":{"classes/CustomError.html":{}},"body":{"classes/CustomError.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["cycl",{"_index":405,"title":{},"body":{"index.html":{}}}],["damag",{"_index":700,"title":{},"body":{"license.html":{}}}],["date",{"_index":631,"title":{},"body":{"license.html":{}}}],["deal",{"_index":480,"title":{},"body":{"index.html":{}}}],["debug",{"_index":379,"title":{},"body":{"index.html":{}}}],["decod",{"_index":94,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decodeerror",{"_index":288,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decodeerror.combin",{"_index":445,"title":{},"body":{"index.html":{}}}],["decodefailur",{"_index":43,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["decodefailure(input",{"_index":120,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodefailure(this.input",{"_index":113,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodererror",{"_index":374,"title":{},"body":{"index.html":{}}}],["decoderesult",{"_index":38,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decoderesultbas",{"_index":36,"title":{"classes/DecodeResultBase.html":{}},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{}}}],["decodesuccess",{"_index":42,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decodesuccess(f(this.input",{"_index":103,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodesuccess(input",{"_index":119,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodesuccess(this.input",{"_index":100,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["decodetext",{"_index":290,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["decodevalu",{"_index":313,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["default",{"_index":27,"title":{},"body":{"classes/CustomError.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{}}}],["defend",{"_index":722,"title":{},"body":{"license.html":{}}}],["defin",{"_index":21,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{},"license.html":{}}}],["definit",{"_index":479,"title":{},"body":{"index.html":{},"license.html":{}}}],["deliber",{"_index":697,"title":{},"body":{"license.html":{}}}],["deriv",{"_index":557,"title":{},"body":{"license.html":{}}}],["describ",{"_index":469,"title":{},"body":{"index.html":{},"license.html":{}}}],["descript",{"_index":6,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"license.html":{}}}],["design",{"_index":588,"title":{},"body":{"license.html":{}}}],["determin",{"_index":687,"title":{},"body":{"license.html":{}}}],["differ",{"_index":242,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["digit",{"_index":291,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["direct",{"_index":519,"title":{},"body":{"license.html":{}}}],["directli",{"_index":372,"title":{},"body":{"index.html":{}}}],["disclaim",{"_index":675,"title":{},"body":{"license.html":{}}}],["discuss",{"_index":583,"title":{},"body":{"license.html":{}}}],["display",{"_index":606,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":505,"title":{},"body":{"license.html":{}}}],["document",{"_index":264,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["don't",{"_index":244,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["each",{"_index":593,"title":{},"body":{"license.html":{}}}],["easier",{"_index":738,"title":{},"body":{"license.html":{}}}],["editori",{"_index":559,"title":{},"body":{"license.html":{}}}],["elabor",{"_index":562,"title":{},"body":{"license.html":{}}}],["electron",{"_index":575,"title":{},"body":{"license.html":{}}}],["employ",{"_index":220,"title":{},"body":{"contributing.html":{}}}],["empti",{"_index":487,"title":{},"body":{"index.html":{}}}],["enclos",{"_index":728,"title":{},"body":{"license.html":{}}}],["end",{"_index":148,"title":{},"body":{"classes/ExpectedEoi.html":{},"classes/UnexpectedEoi.html":{},"license.html":{}}}],["entir",{"_index":388,"title":{},"body":{"index.html":{}}}],["entiti",{"_index":124,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["enumer",{"_index":335,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eoi",{"_index":197,"title":{},"body":{"classes/UnexpectedEoi.html":{},"coverage.html":{}}}],["eot",{"_index":145,"title":{},"body":{"classes/ExpectedEoi.html":{}}}],["err",{"_index":60,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["err2",{"_index":73,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["error",{"_index":7,"title":{},"body":{"classes/CustomError.html":{},"classes/ExpectedNoneOf.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["error(\"can't",{"_index":107,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["even",{"_index":241,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["event",{"_index":693,"title":{},"body":{"license.html":{}}}],["exampl",{"_index":410,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":610,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":585,"title":{},"body":{"license.html":{}}}],["exclus",{"_index":598,"title":{},"body":{"license.html":{}}}],["execut",{"_index":668,"title":{},"body":{"license.html":{}}}],["exercis",{"_index":537,"title":{},"body":{"license.html":{}}}],["expect",{"_index":126,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{}}}],["expected_any_of",{"_index":166,"title":{},"body":{"classes/ExpectedNoneOf.html":{}}}],["expectedanyof",{"_index":121,"title":{"classes/ExpectedAnyOf.html":{}},"body":{"classes/ExpectedAnyOf.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedatleast",{"_index":134,"title":{"classes/ExpectedAtLeast.html":{}},"body":{"classes/ExpectedAtLeast.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedeoi",{"_index":143,"title":{"classes/ExpectedEoi.html":{}},"body":{"classes/ExpectedEoi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedfield",{"_index":149,"title":{"classes/ExpectedField.html":{}},"body":{"classes/ExpectedField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedmatch",{"_index":156,"title":{"classes/ExpectedMatch.html":{}},"body":{"classes/ExpectedMatch.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectednoneof",{"_index":161,"title":{"classes/ExpectedNoneOf.html":{}},"body":{"classes/ExpectedNoneOf.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedonc",{"_index":169,"title":{"classes/ExpectedOnce.html":{}},"body":{"classes/ExpectedOnce.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expectedwithinrang",{"_index":174,"title":{"classes/ExpectedWithinRange.html":{}},"body":{"classes/ExpectedWithinRange.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["explicitli",{"_index":664,"title":{},"body":{"license.html":{}}}],["export",{"_index":31,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{}}}],["express",{"_index":395,"title":{},"body":{"index.html":{},"license.html":{}}}],["extend",{"_index":93,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["extract",{"_index":764,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["f",{"_index":69,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f(this.failur",{"_index":114,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f(this.valu",{"_index":97,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f(v",{"_index":101,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["f]{6})/iy",{"_index":425,"title":{},"body":{"index.html":{}}}],["fail",{"_index":111,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"index.html":{}}}],["failur",{"_index":92,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["failure(f(this.input",{"_index":117,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["failure(this.input",{"_index":115,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["failuretostr",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["fals",{"_index":105,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["fee",{"_index":714,"title":{},"body":{"license.html":{}}}],["few",{"_index":211,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["field",{"_index":153,"title":{},"body":{"classes/ExpectedField.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["fifti",{"_index":529,"title":{},"body":{"license.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"coverage.html":{},"license.html":{}}}],["finitenumbervalu",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["fit",{"_index":375,"title":{},"body":{"index.html":{},"license.html":{}}}],["flag",{"_index":399,"title":{},"body":{"index.html":{}}}],["flatmap",{"_index":48,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["flatmap(f",{"_index":64,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["flatmaperror",{"_index":49,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["flatmaperror(f",{"_index":71,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["flexibl",{"_index":382,"title":{},"body":{"index.html":{}}}],["follow",{"_index":215,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["form",{"_index":538,"title":{},"body":{"license.html":{}}}],["format",{"_index":733,"title":{},"body":{"license.html":{}}}],["free",{"_index":601,"title":{},"body":{"license.html":{}}}],["full",{"_index":350,"title":{},"body":{"index.html":{}}}],["function",{"_index":70,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["gener",{"_index":236,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["get",{"_index":203,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["getunsafefailur",{"_index":50,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["getunsafesuccess",{"_index":51,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["github",{"_index":252,"title":{},"body":{"contributing.html":{}}}],["give",{"_index":224,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["given",{"_index":766,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["goodwil",{"_index":707,"title":{},"body":{"license.html":{}}}],["google'",{"_index":261,"title":{},"body":{"contributing.html":{}}}],["govern",{"_index":747,"title":{},"body":{"license.html":{}}}],["grant",{"_index":513,"title":{},"body":{"license.html":{}}}],["granular",{"_index":383,"title":{},"body":{"index.html":{}}}],["grey",{"_index":415,"title":{},"body":{"index.html":{}}}],["grey(0.2",{"_index":457,"title":{},"body":{"index.html":{}}}],["grey(0.3",{"_index":455,"title":{},"body":{"index.html":{}}}],["grey(v",{"_index":435,"title":{},"body":{"index.html":{}}}],["grey(v.grey",{"_index":489,"title":{},"body":{"index.html":{}}}],["greydecod",{"_index":430,"title":{},"body":{"index.html":{}}}],["greyvalu",{"_index":486,"title":{},"body":{"index.html":{}}}],["grossli",{"_index":698,"title":{},"body":{"license.html":{}}}],["guidelin",{"_index":213,"title":{},"body":{"contributing.html":{}}}],["h",{"_index":473,"title":{},"body":{"index.html":{}}}],["handi",{"_index":462,"title":{},"body":{"index.html":{}}}],["harmless",{"_index":724,"title":{},"body":{"license.html":{}}}],["head",{"_index":229,"title":{},"body":{"contributing.html":{}}}],["help",{"_index":257,"title":{},"body":{"contributing.html":{}}}],["here",{"_index":477,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":594,"title":{},"body":{"license.html":{}}}],["herein",{"_index":666,"title":{},"body":{"license.html":{}}}],["hold",{"_index":723,"title":{},"body":{"license.html":{}}}],["hsl",{"_index":416,"title":{},"body":{"index.html":{}}}],["hsl(0.1,0.2,0.3)anoth",{"_index":459,"title":{},"body":{"index.html":{}}}],["hsl(v.h",{"_index":492,"title":{},"body":{"index.html":{}}}],["hsl(v[0",{"_index":440,"title":{},"body":{"index.html":{}}}],["hsldecod",{"_index":436,"title":{},"body":{"index.html":{}}}],["hslvalu",{"_index":490,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licens",{"_index":501,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":744,"title":{},"body":{"license.html":{}}}],["https://cla.developers.google.com",{"_index":231,"title":{},"body":{"contributing.html":{}}}],["hue",{"_index":417,"title":{},"body":{"index.html":{}}}],["identif",{"_index":739,"title":{},"body":{"license.html":{}}}],["identifi",{"_index":265,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["ii",{"_index":527,"title":{},"body":{"license.html":{}}}],["iii",{"_index":534,"title":{},"body":{"license.html":{}}}],["implement",{"_index":406,"title":{},"body":{"index.html":{}}}],["impli",{"_index":681,"title":{},"body":{"license.html":{}}}],["import",{"_index":128,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"license.html":{}}}],["improv",{"_index":584,"title":{},"body":{"license.html":{}}}],["in2",{"_index":84,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["inabl",{"_index":705,"title":{},"body":{"license.html":{}}}],["incident",{"_index":702,"title":{},"body":{"license.html":{}}}],["includ",{"_index":249,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["inclus",{"_index":573,"title":{},"body":{"license.html":{}}}],["incorpor",{"_index":591,"title":{},"body":{"license.html":{}}}],["incur",{"_index":725,"title":{},"body":{"license.html":{}}}],["indemn",{"_index":716,"title":{},"body":{"license.html":{}}}],["indemnifi",{"_index":721,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["indic",{"_index":552,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":520,"title":{},"body":{"license.html":{}}}],["individu",{"_index":536,"title":{},"body":{"license.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{}}}],["inform",{"_index":259,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["infring",{"_index":618,"title":{},"body":{"license.html":{}}}],["input",{"_index":59,"title":{},"body":{"classes/DecodeResultBase.html":{},"classes/ExpectedEoi.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["instanc",{"_index":413,"title":{},"body":{"index.html":{}}}],["institut",{"_index":621,"title":{},"body":{"license.html":{}}}],["int",{"_index":765,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["integervalu",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["intend",{"_index":392,"title":{},"body":{"index.html":{}}}],["intention",{"_index":572,"title":{},"body":{"license.html":{}}}],["interfac",{"_index":191,"title":{"interfaces/TextInput.html":{},"interfaces/ValueInput.html":{}},"body":{"interfaces/TextInput.html":{},"interfaces/ValueInput.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["irrevoc",{"_index":602,"title":{},"body":{"license.html":{}}}],["isfailur",{"_index":52,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["issu",{"_index":582,"title":{},"body":{"license.html":{}}}],["issuccess",{"_index":53,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["istoken",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["it'",{"_index":361,"title":{},"body":{"index.html":{}}}],["januari",{"_index":499,"title":{},"body":{"license.html":{}}}],["js",{"_index":369,"title":{},"body":{"index.html":{}}}],["json",{"_index":466,"title":{},"body":{"index.html":{}}}],["json.pars",{"_index":468,"title":{},"body":{"index.html":{}}}],["json.stringify(this.input",{"_index":108,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["keep",{"_index":387,"title":{},"body":{"index.html":{}}}],["kind",{"_index":15,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{},"license.html":{}}}],["l",{"_index":475,"title":{},"body":{"index.html":{}}}],["languag",{"_index":746,"title":{},"body":{"license.html":{}}}],["law",{"_index":678,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":626,"title":{},"body":{"license.html":{}}}],["lazi",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["leav",{"_index":381,"title":{},"body":{"index.html":{}}}],["left",{"_index":449,"title":{},"body":{"index.html":{}}}],["legal",{"_index":514,"title":{},"body":{"license.html":{}}}],["length",{"_index":131,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["letter",{"_index":293,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["level",{"_index":770,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["liabil",{"_index":692,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":699,"title":{},"body":{"license.html":{}}}],["librari",{"_index":345,"title":{},"body":{"index.html":{}}}],["licens",{"_index":217,"title":{"license.html":{}},"body":{"contributing.html":{},"license.html":{}}}],["license.y",{"_index":661,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":510,"title":{},"body":{"license.html":{}}}],["light",{"_index":419,"title":{},"body":{"index.html":{}}}],["limit",{"_index":541,"title":{},"body":{"license.html":{}}}],["link",{"_index":569,"title":{},"body":{"license.html":{}}}],["list",{"_index":580,"title":{},"body":{"license.html":{}}}],["liter",{"_index":86,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["literalvalu",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["literalvalue('hsl",{"_index":491,"title":{},"body":{"index.html":{}}}],["litig",{"_index":622,"title":{},"body":{"license.html":{}}}],["loss",{"_index":706,"title":{},"body":{"license.html":{}}}],["love",{"_index":207,"title":{},"body":{"contributing.html":{}}}],["lower_case_lett",{"_index":341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lowercas",{"_index":342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lowercaselett",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["made",{"_index":551,"title":{},"body":{"license.html":{}}}],["mail",{"_index":579,"title":{},"body":{"license.html":{}}}],["make",{"_index":295,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["malfunct",{"_index":710,"title":{},"body":{"license.html":{}}}],["manag",{"_index":522,"title":{},"body":{"license.html":{}}}],["map",{"_index":54,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["map(f",{"_index":78,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["map(v",{"_index":426,"title":{},"body":{"index.html":{}}}],["maperror",{"_index":55,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["maperror(f",{"_index":80,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["mapinput",{"_index":56,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["mapinput(f",{"_index":82,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["mark",{"_index":587,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["markoptionalfield",{"_index":758,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["match",{"_index":35,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["match(o",{"_index":85,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["matchanycharof",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["matchinsensit",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["matchinsensitive('gray",{"_index":432,"title":{},"body":{"index.html":{}}}],["matchinsensitive('grey').or(decodeerror.combin",{"_index":431,"title":{},"body":{"index.html":{}}}],["matchinsensitive('hsl",{"_index":437,"title":{},"body":{"index.html":{}}}],["matchnocharof",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["max",{"_index":176,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["mean",{"_index":488,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechan",{"_index":544,"title":{},"body":{"license.html":{}}}],["media",{"_index":548,"title":{},"body":{"license.html":{}}}],["medium",{"_index":633,"title":{},"body":{"license.html":{}}}],["meet",{"_index":635,"title":{},"body":{"license.html":{}}}],["member",{"_index":250,"title":{},"body":{"contributing.html":{}}}],["memori",{"_index":403,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":683,"title":{},"body":{"license.html":{}}}],["mere",{"_index":568,"title":{},"body":{"license.html":{}}}],["messag",{"_index":11,"title":{},"body":{"classes/CustomError.html":{}}}],["method",{"_index":16,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{}}}],["min",{"_index":139,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"classes/ExpectedWithinRange.html":{}}}],["miscellan",{"_index":334,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mismatch",{"_index":188,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["modif",{"_index":540,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":638,"title":{},"body":{"license.html":{}}}],["modul",{"_index":748,"title":{"modules.html":{}},"body":{"modules.html":{},"miscellaneous/typealiases.html":{}}}],["more",{"_index":258,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["name",{"_index":25,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["nativ",{"_index":368,"title":{},"body":{"index.html":{}}}],["necessarili",{"_index":617,"title":{},"body":{"license.html":{}}}],["need",{"_index":214,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["neglig",{"_index":696,"title":{},"body":{"license.html":{}}}],["never",{"_index":772,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["new",{"_index":99,"title":{},"body":{"classes/DecodeResultBase.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["non",{"_index":597,"title":{},"body":{"license.html":{}}}],["normal",{"_index":654,"title":{},"body":{"license.html":{}}}],["noth",{"_index":448,"title":{},"body":{"index.html":{},"license.html":{}}}],["notic",{"_index":553,"title":{},"body":{"license.html":{}}}],["notwithstand",{"_index":665,"title":{},"body":{"license.html":{}}}],["nullablevalu",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["nullvalu",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["number",{"_index":137,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"interfaces/TextInput.html":{},"interfaces/ValueInput.html":{},"index.html":{}}}],["numbervalu",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["numbervalue.test(v",{"_index":484,"title":{},"body":{"index.html":{}}}],["o",{"_index":88,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["o.failure(thi",{"_index":112,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["o.success(thi",{"_index":96,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["object",{"_index":408,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["objectvalu",{"_index":321,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["oblig",{"_index":717,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":743,"title":{},"body":{"license.html":{}}}],["offer",{"_index":612,"title":{},"body":{"license.html":{}}}],["on",{"_index":235,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["onc",{"_index":172,"title":{},"body":{"classes/ExpectedOnce.html":{},"contributing.html":{}}}],["oneof",{"_index":274,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["open",{"_index":262,"title":{},"body":{"contributing.html":{}}}],["option",{"_index":26,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["optionalvalu",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["optionalwhitespac",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["origin",{"_index":565,"title":{},"body":{"license.html":{}}}],["otherwis",{"_index":526,"title":{},"body":{"license.html":{}}}],["out",{"_index":62,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["out2",{"_index":68,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["output",{"_index":390,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["outstand",{"_index":532,"title":{},"body":{"license.html":{}}}],["over",{"_index":230,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["overview",{"_index":749,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":511,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":528,"title":{},"body":{"license.html":{}}}],["page",{"_index":737,"title":{},"body":{"license.html":{}}}],["paramet",{"_index":23,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"index.html":{}}}],["pars",{"_index":411,"title":{},"body":{"index.html":{}}}],["parseint(v",{"_index":427,"title":{},"body":{"index.html":{}}}],["parser",{"_index":363,"title":{},"body":{"index.html":{}}}],["parsers/decod",{"_index":347,"title":{},"body":{"index.html":{}}}],["part",{"_index":228,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["parti",{"_index":653,"title":{},"body":{"license.html":{}}}],["particular",{"_index":684,"title":{},"body":{"license.html":{}}}],["parts",{"_index":343,"title":{},"body":{"index.html":{}}}],["partsing/core/decod",{"_index":352,"title":{},"body":{"index.html":{}}}],["partsing/error",{"_index":377,"title":{},"body":{"index.html":{}}}],["partsing/text",{"_index":367,"title":{},"body":{"index.html":{}}}],["partsing/valu",{"_index":370,"title":{},"body":{"index.html":{}}}],["patch",{"_index":209,"title":{},"body":{"contributing.html":{}}}],["patent",{"_index":609,"title":{},"body":{"license.html":{}}}],["path",{"_index":202,"title":{},"body":{"interfaces/ValueInput.html":{},"index.html":{}}}],["pathtostr",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["pattern",{"_index":187,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["patternmismatch",{"_index":183,"title":{"classes/PatternMismatch.html":{}},"body":{"classes/PatternMismatch.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["payload",{"_index":465,"title":{},"body":{"index.html":{}}}],["percent",{"_index":530,"title":{},"body":{"license.html":{}}}],["perform",{"_index":607,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":225,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["perpetu",{"_index":595,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":645,"title":{},"body":{"license.html":{}}}],["picknext",{"_index":438,"title":{},"body":{"index.html":{}}}],["picknext(ratiodecod",{"_index":434,"title":{},"body":{"index.html":{}}}],["place",{"_index":649,"title":{},"body":{"license.html":{}}}],["plural",{"_index":129,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"coverage.html":{}}}],["pluralize(this.ent",{"_index":142,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{}}}],["portion",{"_index":356,"title":{},"body":{"index.html":{}}}],["posit",{"_index":360,"title":{},"body":{"index.html":{}}}],["possibl",{"_index":41,"title":{},"body":{"classes/DecodeResultBase.html":{},"license.html":{}}}],["power",{"_index":518,"title":{},"body":{"license.html":{}}}],["predic",{"_index":338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":539,"title":{},"body":{"license.html":{}}}],["prepar",{"_index":604,"title":{},"body":{"license.html":{}}}],["print",{"_index":736,"title":{},"body":{"license.html":{}}}],["probabl",{"_index":243,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["product",{"_index":672,"title":{},"body":{"license.html":{}}}],["project",{"_index":210,"title":{},"body":{"contributing.html":{}}}],["promin",{"_index":640,"title":{},"body":{"license.html":{}}}],["properti",{"_index":13,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{}}}],["provid",{"_index":353,"title":{},"body":{"index.html":{},"license.html":{}}}],["publicli",{"_index":605,"title":{},"body":{"license.html":{}}}],["pull",{"_index":253,"title":{},"body":{"contributing.html":{}}}],["purpos",{"_index":255,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["r",{"_index":65,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["rang",{"_index":179,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["ratiodecod",{"_index":420,"title":{},"body":{"index.html":{}}}],["ratiovalu",{"_index":483,"title":{},"body":{"index.html":{}}}],["readabl",{"_index":647,"title":{},"body":{"license.html":{}}}],["readonli",{"_index":14,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"index.html":{}}}],["realli",{"_index":348,"title":{},"body":{"index.html":{}}}],["realloc",{"_index":400,"title":{},"body":{"index.html":{}}}],["reason",{"_index":673,"title":{},"body":{"license.html":{}}}],["receiv",{"_index":589,"title":{},"body":{"license.html":{}}}],["recipi",{"_index":636,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":734,"title":{},"body":{"license.html":{}}}],["redistribut",{"_index":227,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["regard",{"_index":669,"title":{},"body":{"license.html":{}}}],["regexp",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["regexp(/0[.]\\d+/y).map(numb",{"_index":421,"title":{},"body":{"index.html":{}}}],["regexp(/[#]([0",{"_index":423,"title":{},"body":{"index.html":{}}}],["regular",{"_index":394,"title":{},"body":{"index.html":{}}}],["remain",{"_index":566,"title":{},"body":{"license.html":{}}}],["rememb",{"_index":355,"title":{},"body":{"index.html":{}}}],["replac",{"_index":730,"title":{},"body":{"license.html":{}}}],["repres",{"_index":563,"title":{},"body":{"license.html":{}}}],["represent",{"_index":384,"title":{},"body":{"index.html":{}}}],["reproduc",{"_index":603,"title":{},"body":{"license.html":{}}}],["reproduct",{"_index":504,"title":{},"body":{"license.html":{}}}],["request",{"_index":254,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["requir",{"_index":251,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["respons",{"_index":686,"title":{},"body":{"license.html":{}}}],["rest",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["result",{"_index":34,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["retain",{"_index":221,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["return",{"_index":30,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["review",{"_index":247,"title":{},"body":{"contributing.html":{}}}],["revis",{"_index":560,"title":{},"body":{"license.html":{}}}],["rgb",{"_index":414,"title":{},"body":{"index.html":{}}}],["rgb(0x003355",{"_index":452,"title":{},"body":{"index.html":{}}}],["rgb(v",{"_index":429,"title":{},"body":{"index.html":{}}}],["rgbdecod",{"_index":422,"title":{},"body":{"index.html":{}}}],["rgbvalu",{"_index":495,"title":{},"body":{"index.html":{}}}],["right",{"_index":719,"title":{},"body":{"license.html":{}}}],["risk",{"_index":690,"title":{},"body":{"license.html":{}}}],["royalti",{"_index":600,"title":{},"body":{"license.html":{}}}],["s",{"_index":91,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{}}}],["safeintegervalu",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["same",{"_index":735,"title":{},"body":{"license.html":{}}}],["satur",{"_index":418,"title":{},"body":{"index.html":{}}}],["save",{"_index":402,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":460,"title":{},"body":{"index.html":{}}}],["section",{"_index":507,"title":{},"body":{"license.html":{}}}],["see",{"_index":232,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["sell",{"_index":613,"title":{},"body":{"license.html":{}}}],["sent",{"_index":578,"title":{},"body":{"license.html":{}}}],["separ",{"_index":567,"title":{},"body":{"license.html":{}}}],["separatedbytimes(match",{"_index":439,"title":{},"body":{"index.html":{}}}],["sequenc",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["servic",{"_index":671,"title":{},"body":{"license.html":{}}}],["set",{"_index":365,"title":{},"body":{"index.html":{}}}],["shall",{"_index":506,"title":{},"body":{"license.html":{}}}],["shape",{"_index":373,"title":{},"body":{"index.html":{}}}],["share",{"_index":533,"title":{},"body":{"license.html":{}}}],["sign",{"_index":234,"title":{},"body":{"contributing.html":{}}}],["signatur",{"_index":762,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["simpl",{"_index":378,"title":{},"body":{"index.html":{}}}],["simpli",{"_index":223,"title":{},"body":{"contributing.html":{}}}],["simplifi",{"_index":389,"title":{},"body":{"index.html":{}}}],["skipnext(eoi",{"_index":446,"title":{},"body":{"index.html":{}}}],["skipnext(match",{"_index":443,"title":{},"body":{"index.html":{}}}],["skipnext(optionalwhitespac",{"_index":433,"title":{},"body":{"index.html":{}}}],["slice",{"_index":401,"title":{},"body":{"index.html":{}}}],["small",{"_index":212,"title":{},"body":{"contributing.html":{}}}],["softwar",{"_index":542,"title":{},"body":{"license.html":{}}}],["sole",{"_index":685,"title":{},"body":{"license.html":{}}}],["somehow",{"_index":359,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"contributing.html":{},"license.html":{}}}],["special",{"_index":701,"title":{},"body":{"license.html":{}}}],["specif",{"_index":745,"title":{},"body":{"license.html":{}}}],["specifi",{"_index":769,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../decoder.t",{"_index":756,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../entity.t",{"_index":336,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.t",{"_index":754,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../result.t",{"_index":755,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../type_level.t",{"_index":757,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/core/decoder.t",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/result.t",{"_index":37,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/result.ts:22",{"_index":61,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:23",{"_index":63,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:24",{"_index":58,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:27",{"_index":87,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:32",{"_index":67,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:33",{"_index":72,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:35",{"_index":79,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:36",{"_index":81,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:37",{"_index":83,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:39",{"_index":77,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:40",{"_index":76,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:42",{"_index":75,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:43",{"_index":74,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/result.ts:45",{"_index":89,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["src/core/type_level.t",{"_index":763,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/error/custom_error.t",{"_index":5,"title":{},"body":{"classes/CustomError.html":{},"coverage.html":{}}}],["src/error/custom_error.ts:21",{"_index":22,"title":{},"body":{"classes/CustomError.html":{}}}],["src/error/custom_error.ts:23",{"_index":29,"title":{},"body":{"classes/CustomError.html":{}}}],["src/error/entity.t",{"_index":284,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/error/expected_any_of.t",{"_index":122,"title":{},"body":{"classes/ExpectedAnyOf.html":{},"coverage.html":{}}}],["src/error/expected_any_of.ts:33",{"_index":125,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["src/error/expected_any_of.ts:35",{"_index":127,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["src/error/expected_at_least.t",{"_index":135,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"coverage.html":{}}}],["src/error/expected_at_least.ts:20",{"_index":138,"title":{},"body":{"classes/ExpectedAtLeast.html":{}}}],["src/error/expected_at_least.ts:22",{"_index":140,"title":{},"body":{"classes/ExpectedAtLeast.html":{}}}],["src/error/expected_eoi.t",{"_index":144,"title":{},"body":{"classes/ExpectedEoi.html":{},"coverage.html":{}}}],["src/error/expected_eoi.ts:18",{"_index":146,"title":{},"body":{"classes/ExpectedEoi.html":{}}}],["src/error/expected_eoi.ts:19",{"_index":147,"title":{},"body":{"classes/ExpectedEoi.html":{}}}],["src/error/expected_field.t",{"_index":150,"title":{},"body":{"classes/ExpectedField.html":{},"coverage.html":{}}}],["src/error/expected_field.ts:18",{"_index":152,"title":{},"body":{"classes/ExpectedField.html":{}}}],["src/error/expected_field.ts:20",{"_index":154,"title":{},"body":{"classes/ExpectedField.html":{}}}],["src/error/expected_match.t",{"_index":157,"title":{},"body":{"classes/ExpectedMatch.html":{},"coverage.html":{}}}],["src/error/expected_match.ts:18",{"_index":159,"title":{},"body":{"classes/ExpectedMatch.html":{}}}],["src/error/expected_match.ts:20",{"_index":160,"title":{},"body":{"classes/ExpectedMatch.html":{}}}],["src/error/expected_none_of.t",{"_index":162,"title":{},"body":{"classes/ExpectedNoneOf.html":{},"coverage.html":{}}}],["src/error/expected_none_of.ts:21",{"_index":163,"title":{},"body":{"classes/ExpectedNoneOf.html":{}}}],["src/error/expected_none_of.ts:23",{"_index":165,"title":{},"body":{"classes/ExpectedNoneOf.html":{}}}],["src/error/expected_once.t",{"_index":170,"title":{},"body":{"classes/ExpectedOnce.html":{},"coverage.html":{}}}],["src/error/expected_once.ts:20",{"_index":171,"title":{},"body":{"classes/ExpectedOnce.html":{}}}],["src/error/expected_once.ts:22",{"_index":173,"title":{},"body":{"classes/ExpectedOnce.html":{}}}],["src/error/expected_within_range.t",{"_index":175,"title":{},"body":{"classes/ExpectedWithinRange.html":{},"coverage.html":{}}}],["src/error/expected_within_range.ts:18",{"_index":177,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["src/error/expected_within_range.ts:20",{"_index":180,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["src/error/index.t",{"_index":287,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/error/pattern_mismatch.t",{"_index":184,"title":{},"body":{"classes/PatternMismatch.html":{},"coverage.html":{}}}],["src/error/pattern_mismatch.ts:18",{"_index":186,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["src/error/pattern_mismatch.ts:20",{"_index":189,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["src/error/unexpected_eoi.t",{"_index":195,"title":{},"body":{"classes/UnexpectedEoi.html":{},"coverage.html":{}}}],["src/error/unexpected_eoi.ts:18",{"_index":198,"title":{},"body":{"classes/UnexpectedEoi.html":{}}}],["src/error/unexpected_eoi.ts:19",{"_index":199,"title":{},"body":{"classes/UnexpectedEoi.html":{}}}],["src/text/index.t",{"_index":289,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/text/input.t",{"_index":193,"title":{},"body":{"interfaces/TextInput.html":{},"coverage.html":{}}}],["src/value/index.t",{"_index":308,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/value/input.t",{"_index":201,"title":{},"body":{"interfaces/ValueInput.html":{},"coverage.html":{}}}],["start",{"_index":204,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":611,"title":{},"body":{"license.html":{}}}],["statement",{"_index":266,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["sticki",{"_index":398,"title":{},"body":{"index.html":{}}}],["still",{"_index":380,"title":{},"body":{"index.html":{}}}],["stoppag",{"_index":708,"title":{},"body":{"license.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"classes/UnexpectedEoi.html":{},"interfaces/ValueInput.html":{},"index.html":{}}}],["stringvalu",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["subject",{"_index":592,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":608,"title":{},"body":{"license.html":{}}}],["submiss",{"_index":248,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["submit",{"_index":237,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["subsequ",{"_index":590,"title":{},"body":{"license.html":{}}}],["succ",{"_index":110,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["succe",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["success",{"_index":90,"title":{},"body":{"classes/DecodeResultBase.html":{},"coverage.html":{}}}],["successfulli",{"_index":362,"title":{},"body":{"index.html":{}}}],["such",{"_index":523,"title":{},"body":{"license.html":{}}}],["super(input",{"_index":95,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["supersed",{"_index":667,"title":{},"body":{"license.html":{}}}],["support",{"_index":715,"title":{},"body":{"license.html":{}}}],["sure",{"_index":447,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":732,"title":{},"body":{"license.html":{}}}],["system",{"_index":581,"title":{},"body":{"license.html":{}}}],["t",{"_index":767,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tabl",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":391,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["takecharbetween",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["takecharwhil",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["term",{"_index":502,"title":{},"body":{"license.html":{}}}],["termin",{"_index":630,"title":{},"body":{"license.html":{}}}],["testchar",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["testobject",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["testtyp",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["testvalu",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["text",{"_index":386,"title":{},"body":{"index.html":{},"license.html":{}}}],["textdecod",{"_index":759,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["textinput",{"_index":192,"title":{"interfaces/TextInput.html":{}},"body":{"interfaces/TextInput.html":{},"coverage.html":{},"index.html":{}}}],["theori",{"_index":694,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":571,"title":{},"body":{"license.html":{}}}],["third",{"_index":652,"title":{},"body":{"license.html":{}}}],["this.failur",{"_index":109,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["this.failures.map(f",{"_index":116,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["this.field",{"_index":155,"title":{},"body":{"classes/ExpectedField.html":{}}}],["this.flatmap(v",{"_index":98,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["this.max",{"_index":182,"title":{},"body":{"classes/ExpectedWithinRange.html":{}}}],["this.messag",{"_index":33,"title":{},"body":{"classes/CustomError.html":{}}}],["this.min",{"_index":141,"title":{},"body":{"classes/ExpectedAtLeast.html":{},"classes/ExpectedWithinRange.html":{}}}],["this.pattern",{"_index":190,"title":{},"body":{"classes/PatternMismatch.html":{}}}],["this.valu",{"_index":102,"title":{},"body":{"classes/DecodeResultBase.html":{},"classes/ExpectedMatch.html":{}}}],["those",{"_index":481,"title":{},"body":{"index.html":{},"license.html":{}}}],["through",{"_index":508,"title":{},"body":{"license.html":{}}}],["throw",{"_index":106,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["time",{"_index":357,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["titl",{"_index":682,"title":{},"body":{"license.html":{}}}],["tort",{"_index":695,"title":{},"body":{"license.html":{}}}],["tostr",{"_index":17,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"index.html":{}}}],["track",{"_index":358,"title":{},"body":{"index.html":{},"license.html":{}}}],["trade",{"_index":670,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":643,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":614,"title":{},"body":{"license.html":{}}}],["transform",{"_index":464,"title":{},"body":{"index.html":{},"license.html":{}}}],["translat",{"_index":545,"title":{},"body":{"license.html":{}}}],["true",{"_index":104,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["tupletounion",{"_index":760,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tuplevalu",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["two",{"_index":40,"title":{},"body":{"classes/DecodeResultBase.html":{},"index.html":{}}}],["type",{"_index":8,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"interfaces/TextInput.html":{},"interfaces/ValueInput.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":752,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":768,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["undefineablevalu",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["undefinedvalu",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["under",{"_index":516,"title":{},"body":{"license.html":{}}}],["unexpect",{"_index":196,"title":{},"body":{"classes/UnexpectedEoi.html":{}}}],["unexpectedeoi",{"_index":194,"title":{"classes/UnexpectedEoi.html":{}},"body":{"classes/UnexpectedEoi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["union",{"_index":39,"title":{},"body":{"classes/DecodeResultBase.html":{},"license.html":{}}}],["unless",{"_index":663,"title":{},"body":{"license.html":{}}}],["uppercas",{"_index":340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uppercase_lett",{"_index":339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uppercaselett",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["us",{"_index":226,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":771,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["util",{"_index":366,"title":{},"body":{"index.html":{}}}],["v",{"_index":485,"title":{},"body":{"index.html":{}}}],["v.",{"_index":493,"title":{},"body":{"index.html":{}}}],["v.l",{"_index":494,"title":{},"body":{"index.html":{}}}],["v[1",{"_index":441,"title":{},"body":{"index.html":{}}}],["v[2",{"_index":442,"title":{},"body":{"index.html":{}}}],["valid",{"_index":463,"title":{},"body":{"index.html":{}}}],["valu",{"_index":28,"title":{},"body":{"classes/CustomError.html":{},"classes/DecodeResultBase.html":{},"classes/ExpectedAnyOf.html":{},"classes/ExpectedAtLeast.html":{},"classes/ExpectedEoi.html":{},"classes/ExpectedField.html":{},"classes/ExpectedMatch.html":{},"classes/ExpectedNoneOf.html":{},"classes/ExpectedOnce.html":{},"classes/ExpectedWithinRange.html":{},"classes/PatternMismatch.html":{},"classes/UnexpectedEoi.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["valuedecod",{"_index":761,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["valueinput",{"_index":200,"title":{"interfaces/ValueInput.html":{}},"body":{"interfaces/ValueInput.html":{},"coverage.html":{},"index.html":{}}}],["values.length",{"_index":132,"title":{},"body":{"classes/ExpectedAnyOf.html":{}}}],["variabl",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["verbal",{"_index":576,"title":{},"body":{"license.html":{}}}],["version",{"_index":497,"title":{},"body":{"license.html":{}}}],["void",{"_index":66,"title":{},"body":{"classes/DecodeResultBase.html":{}}}],["want",{"_index":349,"title":{},"body":{"index.html":{}}}],["warranti",{"_index":676,"title":{},"body":{"license.html":{}}}],["we'd",{"_index":206,"title":{},"body":{"contributing.html":{}}}],["wherev",{"_index":651,"title":{},"body":{"license.html":{}}}],["whether",{"_index":524,"title":{},"body":{"license.html":{}}}],["whitespac",{"_index":306,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["whole",{"_index":564,"title":{},"body":{"license.html":{}}}],["within",{"_index":178,"title":{},"body":{"classes/ExpectedWithinRange.html":{},"index.html":{},"license.html":{}}}],["without",{"_index":634,"title":{},"body":{"license.html":{}}}],["withposit",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["work",{"_index":549,"title":{},"body":{"license.html":{}}}],["worldwid",{"_index":596,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":450,"title":{},"body":{"index.html":{}}}],["write",{"_index":393,"title":{},"body":{"index.html":{},"license.html":{}}}],["written",{"_index":577,"title":{},"body":{"license.html":{}}}],["y",{"_index":397,"title":{},"body":{"index.html":{}}}],["you'v",{"_index":239,"title":{},"body":{"contributing.html":{}}}],["yyyi",{"_index":741,"title":{},"body":{"license.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/CustomError.html":{"url":"classes/CustomError.html","title":"class - CustomError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/custom_error.ts\n        \n\n            \n                Description\n            \n            \n                Error type that allows for a customized message.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/custom_error.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'custom-error'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/custom_error.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/custom_error.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class CustomError {\n  readonly kind: 'custom-error' = 'custom-error'\n  constructor(readonly message: string) {}\n  toString() {\n    return this.message\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DecodeResultBase.html":{"url":"classes/DecodeResultBase.html","title":"class - DecodeResultBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DecodeResultBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/result.ts\n        \n\n            \n                Description\n            \n            \n                DecodeResult is a union type that has two possible constructors\nDecodeSuccess and DecodeFailure.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _E\n                            \n                            \n                                    Readonly\n                                _I\n                            \n                            \n                                    Readonly\n                                _O\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                flatMap\n                            \n                            \n                                    Abstract\n                                flatMapError\n                            \n                            \n                                    Abstract\n                                getUnsafeFailures\n                            \n                            \n                                    Abstract\n                                getUnsafeSuccess\n                            \n                            \n                                    Abstract\n                                isFailure\n                            \n                            \n                                    Abstract\n                                isSuccess\n                            \n                            \n                                    Abstract\n                                map\n                            \n                            \n                                    Abstract\n                                mapError\n                            \n                            \n                                    Abstract\n                                mapInput\n                            \n                            \n                                    Abstract\n                                match\n                            \n                            \n                                    Abstract\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: In)\n                    \n                \n                        \n                            \n                                Defined in src/core/result.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                    In\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            _E\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _E:     Err\n\n                    \n                \n                    \n                        \n                            Type :     Err\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/result.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            _I\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _I:     In\n\n                    \n                \n                    \n                        \n                            Type :     In\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/result.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            _O\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _O:     Out\n\n                    \n                \n                    \n                        \n                            Type :     Out\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/result.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            flatMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        flatMap(f: (r: Out) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:32\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        Out2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            flatMapError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        flatMapError(f: (r: Err[]) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:33\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        Err2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            getUnsafeFailures\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUnsafeFailures()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Err[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            getUnsafeSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUnsafeSuccess()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Out\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            isFailure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isFailure()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     DecodeFailure\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            isSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isSuccess()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     DecodeSuccess\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        map(f: (r: Out) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:35\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        Out2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            mapError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mapError(f: (r: Err) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:36\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        Err2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            mapInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mapInput(f: (i: In) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:37\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        In2\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DecodeResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        match(o: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:27\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        O\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     O\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/result.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        abstract class DecodeResultBase {\n  readonly _I!: In\n  readonly _O!: Out\n  readonly _E!: Err\n\n  constructor(readonly input: In) {}\n  abstract match(o: {\n    success: (s: DecodeSuccess) => O\n    failure: (f: DecodeFailure) => O\n  }): O\n\n  abstract flatMap(f: (r: Out) => DecodeResult): DecodeResult\n  abstract flatMapError(f: (r: Err[]) => DecodeResult): DecodeResult\n\n  abstract map(f: (r: Out) => Out2): DecodeResult\n  abstract mapError(f: (r: Err) => Err2): DecodeResult\n  abstract mapInput(f: (i: In) => In2): DecodeResult\n\n  abstract isSuccess(): this is DecodeSuccess\n  abstract isFailure(): this is DecodeFailure\n\n  abstract getUnsafeSuccess(): Out\n  abstract getUnsafeFailures(): Err[]\n\n  abstract toString(): string\n}\n\nexport class DecodeSuccess extends DecodeResultBase {\n  readonly kind = 'decode-success'\n  constructor(input: In, readonly value: Out) {\n    super(input)\n  }\n\n  match(o: { success: (s: DecodeSuccess) => O; failure: (f: DecodeFailure) => O }): O {\n    return o.success(this)\n  }\n\n  flatMap(f: (r: Out) => DecodeResult): DecodeResult {\n    return f(this.value)\n  }\n  map(f: (r: Out) => Out2): DecodeResult {\n    return this.flatMap(v => new DecodeSuccess(this.input, f(v)))\n  }\n  flatMapError(f: (r: Err[]) => DecodeResult): DecodeResult {\n    return new DecodeSuccess(this.input, this.value)\n  }\n  mapError(f: (r: Err) => Err2): DecodeResult {\n    return new DecodeSuccess(this.input, this.value)\n  }\n  mapInput(f: (i: In) => In2): DecodeResult {\n    return new DecodeSuccess(f(this.input), this.value)\n  }\n\n  isSuccess(): this is DecodeSuccess {\n    return true\n  }\n  isFailure(): this is DecodeFailure {\n    return false\n  }\n\n  getUnsafeSuccess(): Out {\n    return this.value\n  }\n  getUnsafeFailures(): Err[] {\n    throw new Error(\"can't get failures from success\")\n  }\n\n  toString(): string {\n    return `DecodeSuccess: ${JSON.stringify(this.input)}`\n  }\n}\n\nexport class DecodeFailure extends DecodeResultBase {\n  readonly kind = 'decode-failure'\n  readonly failures: Err[]\n  constructor(input: In, ...failures: Err[]) {\n    super(input)\n    this.failures = failures\n  }\n\n  match(o: {\n    success: (succ: DecodeSuccess) => O\n    failure: (fail: DecodeFailure) => O\n  }): O {\n    return o.failure(this)\n  }\n\n  flatMap(f: (r: Out) => DecodeResult): DecodeResult {\n    return new DecodeFailure(this.input, ...this.failures)\n  }\n  map(f: (r: Out) => Out2): DecodeResult {\n    return new DecodeFailure(this.input, ...this.failures)\n  }\n  flatMapError(f: (r: Err[]) => DecodeResult): DecodeResult {\n    return f(this.failures)\n  }\n  mapError(f: (r: Err) => Err2): DecodeResult {\n    return failure(this.input, ...this.failures.map(f))\n  }\n  mapInput(f: (i: In) => In2): DecodeResult {\n    return failure(f(this.input), ...this.failures)\n  }\n\n  isSuccess(): this is DecodeSuccess {\n    return false\n  }\n  isFailure(): this is DecodeFailure {\n    return true\n  }\n  getUnsafeSuccess(): Out {\n    throw new Error(\"can't get success from failure\")\n  }\n  getUnsafeFailures(): Err[] {\n    return this.failures\n  }\n\n  toString(): string {\n    return `DecodeFailure: ${JSON.stringify(this.input)}`\n  }\n}\n\nexport type DecodeResult = DecodeSuccess | DecodeFailure\n\nexport const success = (input: In, result: Out): DecodeResult =>\n  new DecodeSuccess(input, result)\nexport const failure = (input: In, ...failures: Err[]): DecodeResult =>\n  new DecodeFailure(input, ...failures)\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedAnyOf.html":{"url":"classes/ExpectedAnyOf.html","title":"class - ExpectedAnyOf","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedAnyOf\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_any_of.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: Entity, values: string[])\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_any_of.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Entity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-any-of'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_any_of.ts:33\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_any_of.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, pluralize } from './entity'\n\nexport const concatOr = (values: string[]) => {\n  const length = values.length\n  if (length === 0) {\n    return ''\n  } else if (length \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedAtLeast.html":{"url":"classes/ExpectedAtLeast.html","title":"class - ExpectedAtLeast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedAtLeast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_at_least.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(min: number, entity: Entity)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_at_least.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Entity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-at-least'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_at_least.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_at_least.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, pluralize } from './entity'\n\nexport class ExpectedAtLeast {\n  readonly kind: 'expected-at-least' = 'expected-at-least'\n  constructor(readonly min: number, readonly entity: Entity) {}\n  toString() {\n    return `at least ${this.min} ${pluralize(this.entity, this.min)}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedEoi.html":{"url":"classes/ExpectedEoi.html","title":"class - ExpectedEoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedEoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_eoi.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-eot'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_eoi.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_eoi.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class ExpectedEoi {\n  readonly kind: 'expected-eot' = 'expected-eot'\n  toString() {\n    return `end of input`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedField.html":{"url":"classes/ExpectedField.html","title":"class - ExpectedField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_field.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_field.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-field'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_field.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_field.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class ExpectedField {\n  readonly kind: 'expected-field' = 'expected-field'\n  constructor(readonly field: string) {}\n  toString() {\n    return `field \"${this.field}\"`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedMatch.html":{"url":"classes/ExpectedMatch.html","title":"class - ExpectedMatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedMatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_match.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_match.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-match'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_match.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_match.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class ExpectedMatch {\n  readonly kind: 'expected-match' = 'expected-match'\n  constructor(readonly value: string) {}\n  toString() {\n    return `${this.value}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedNoneOf.html":{"url":"classes/ExpectedNoneOf.html","title":"class - ExpectedNoneOf","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedNoneOf\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_none_of.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: Entity, values: string[])\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_none_of.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Entity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'no-char-of-error'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_none_of.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_none_of.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, pluralize } from './entity'\nimport { concatOr } from './expected_any_of'\n\nexport class ExpectedNoneOf {\n  readonly kind: 'no-char-of-error' = 'no-char-of-error'\n  constructor(readonly entity: Entity, readonly values: string[]) {}\n  toString() {\n    return `no ${pluralize(this.entity, 1)} like ${concatOr(this.values)}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedOnce.html":{"url":"classes/ExpectedOnce.html","title":"class - ExpectedOnce","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedOnce\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_once.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: Entity)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_once.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Entity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-once'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_once.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_once.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, pluralize } from './entity'\n\nexport class ExpectedOnce {\n  readonly kind: 'expected-once' = 'expected-once'\n  constructor(readonly entity: Entity) {}\n  toString() {\n    return `a ${pluralize(this.entity, 1)}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpectedWithinRange.html":{"url":"classes/ExpectedWithinRange.html","title":"class - ExpectedWithinRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpectedWithinRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/expected_within_range.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(min: string, max: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/expected_within_range.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        max\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'expected-within-range'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/expected_within_range.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/expected_within_range.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class ExpectedWithinRange {\n  readonly kind: 'expected-within-range' = 'expected-within-range'\n  constructor(readonly min: string, readonly max: string) {}\n  toString() {\n    return `between ${this.min} and ${this.max}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatternMismatch.html":{"url":"classes/PatternMismatch.html","title":"class - PatternMismatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatternMismatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/pattern_mismatch.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pattern: string)\n                    \n                \n                        \n                            \n                                Defined in src/error/pattern_mismatch.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pattern\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'pattern-mismatch'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/pattern_mismatch.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/pattern_mismatch.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class PatternMismatch {\n  readonly kind: 'pattern-mismatch' = 'pattern-mismatch'\n  constructor(readonly pattern: string) {}\n  toString() {\n    return `to match pattern ${this.pattern}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextInput.html":{"url":"interfaces/TextInput.html","title":"interface - TextInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TextInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text/input.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                                \n                                        input\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TextInput {\n  readonly input: string\n  readonly index: number\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnexpectedEoi.html":{"url":"classes/UnexpectedEoi.html","title":"class - UnexpectedEoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnexpectedEoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/unexpected_eoi.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                kind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            kind\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kind:     \n\n                    \n                \n                    \n                        \n                            Default value : 'unexpected-eoi'\n                        \n                    \n                        \n                            \n                                    Defined in src/error/unexpected_eoi.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/error/unexpected_eoi.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnexpectedEoi {\n  readonly kind: 'unexpected-eoi' = 'unexpected-eoi'\n  toString() {\n    return `NOT end of input`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValueInput.html":{"url":"interfaces/ValueInput.html","title":"interface - ValueInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValueInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/value/input.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        input\n                                \n                                \n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     (string | number)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (string | number)[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ValueInput {\n  readonly input: any\n  readonly path: (string | number)[]\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nHow to Contribute\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\nContributor License Agreement\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to https://cla.developers.google.com/ to see\nyour current agreements on file or to sign a new one.\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\nCode reviews\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\nGitHub Help for more\ninformation on using pull requests.\nCommunity Guidelines\nThis project follows\nGoogle's Open Source Community Guidelines.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                class\n            \n            \n                Decoder\n            \n            \n                88 %\n                (23/26)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                fail\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                lazy\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                oneOf\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                sequence\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/decoder.ts\n            \n            \n                variable\n            \n            \n                succeed\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                class\n            \n            \n                DecodeFailure\n            \n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                class\n            \n            \n                DecodeResultBase\n            \n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                class\n            \n            \n                DecodeSuccess\n            \n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                variable\n            \n            \n                failure\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/result.ts\n            \n            \n                variable\n            \n            \n                success\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error/custom_error.ts\n            \n            \n                class\n            \n            \n                CustomError\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/error/entity.ts\n            \n            \n                variable\n            \n            \n                pluralize\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error/expected_any_of.ts\n            \n            \n                class\n            \n            \n                ExpectedAnyOf\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/error/expected_any_of.ts\n            \n            \n                variable\n            \n            \n                concatOr\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error/expected_at_least.ts\n            \n            \n                class\n            \n            \n                ExpectedAtLeast\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/error/expected_eoi.ts\n            \n            \n                class\n            \n            \n                ExpectedEoi\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/error/expected_field.ts\n            \n            \n                class\n            \n            \n                ExpectedField\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/error/expected_match.ts\n            \n            \n                class\n            \n            \n                ExpectedMatch\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/error/expected_none_of.ts\n            \n            \n                class\n            \n            \n                ExpectedNoneOf\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/error/expected_once.ts\n            \n            \n                class\n            \n            \n                ExpectedOnce\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/error/expected_within_range.ts\n            \n            \n                class\n            \n            \n                ExpectedWithinRange\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/error/index.ts\n            \n            \n                variable\n            \n            \n                DecodeError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error/pattern_mismatch.ts\n            \n            \n                class\n            \n            \n                PatternMismatch\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/error/unexpected_eoi.ts\n            \n            \n                class\n            \n            \n                UnexpectedEoi\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                char\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                decodeText\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                digit\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                digits\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                eoi\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                failureToString\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                letter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                letters\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                lowerCaseLetter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                lowerCaseLetters\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                make\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                match\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                matchAnyCharOf\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                matchInsensitive\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                matchNoCharOf\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                optionalWhitespace\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                regexp\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                rest\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                \n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                takeCharBetween\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                takeCharWhile\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                testChar\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                upperCaseLetter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                upperCaseLetters\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                whitespace\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/index.ts\n            \n            \n                variable\n            \n            \n                withPosition\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text/input.ts\n            \n            \n                interface\n            \n            \n                TextInput\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                anyArrayValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                anyValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                arrayValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                booleanValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                decodeValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                failureToString\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                finiteNumberValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                integerValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                isToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                literalValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                make\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                nullableValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                nullValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                numberValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                objectValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                optionalValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                pathToString\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                safeIntegerValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                stringValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                testObject\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                testType\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                testValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                tupleValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                undefineableValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/index.ts\n            \n            \n                variable\n            \n            \n                undefinedValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/value/input.ts\n            \n            \n                interface\n            \n            \n                ValueInput\n            \n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Entity   (src/.../entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/error/entity.ts\n    \n        \n            \n                \n                    \n                        \n                        Entity\n                    \n                \n                        \n                            \n                                 CHARACTER\n                            \n                        \n                        \n                            \n                                Value : character\n                            \n                        \n                        \n                            \n                                 PREDICATE\n                            \n                        \n                        \n                            \n                                Value : predicate\n                            \n                        \n                        \n                            \n                                 LETTER\n                            \n                        \n                        \n                            \n                                Value : letter\n                            \n                        \n                        \n                            \n                                 UPPERCASE_LETTER\n                            \n                        \n                        \n                            \n                                Value : uppercase letter\n                            \n                        \n                        \n                            \n                                 LOWER_CASE_LETTER\n                            \n                        \n                        \n                            \n                                Value : lowercase letter\n                            \n                        \n                        \n                            \n                                 DIGIT\n                            \n                        \n                        \n                            \n                                Value : digit\n                            \n                        \n                        \n                            \n                                 WHITESPACE\n                            \n                        \n                        \n                            \n                                Value : whitespace\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nParTSing\nParTSing is a decoder combinator library. You can use it to build parsers/decoders from string or really any input values.\nIf you want full control over what to decode your should start from partsing/core/decoder. It provides 3 types parameters\n\nIn for the input. Remember that you will need to decode one portion of your input at the time and your input probably needs to track somehow the current position.\nOut it's the type of the value if successfully decoded.\nErr it's the type of the failure returned when the parser fails.\n\nThe library provides two additional set of utility functions to decode string values (partsing/text) and native JS values (partsing/value).\nDecoder Error\nIf you adopt the generic Decoder directly, you can define the shape of your error. The library provides a DecoderError type that should fit most decoding needs. The type of errors available are defined in partsing/error.\nDecoderError provides a simple method to debug the result of the decoding (toString) but still leaves the flexibility to give granular control on the representation of the error.\nBoth [Text Decoding] and [Value Decoding] use DecodeError.\nText Decoding\nTo be able to keep track of the position of the decoding within a string, Text Decoding uses TextInput to track both the entire text input and the current index.\nThe decodeText function simplifies the inputs and outputs of decoding text. It takes a text decoder (Decoder) and return a function that takes a string input and returns a DecodeResult (where input and error are of type string).\nIf you intend to write your own regular expressions decoder functions, consider using the y (sticky) flag. When used, there is no need to reallocate slices of the input string saving memory and CPU cycles. The sticky flag is not available for all implementations of JS.\nValue Decoding\nTo be able to keep track of the position of the decoding within any value, Value Decoding uses ValueInput to track both the input value and the current position within it using a path. path is an array of either string (object field name) or number (array/tuple index position).\nThe decodeValue function simplifies the inputs and outputs of decoding values. It takes a value decoder (Decoder) and return a function that takes any and returns a DecodeResult (where input is of type any and error is of type string).\nExample\nA simple decoder combinator to parse color values from strings into class instances.\nclass RGB {\n  constructor(readonly rgb: number) {}\n}\n\nclass Grey {\n  constructor(readonly value: number) {}\n}\n\nclass HSL {\n  constructor(readonly hue: number, readonly saturation: number, readonly lightness: number) {}\n}\n\ntype Color = RGB | Grey | HSL\n\nconst ratioDecoder = regexp(/0[.]\\d+/y).map(Number)\nconst rgbDecoder   = regexp(/[#]([0-9a-f]{6})/iy, 1)\n                       .map(v => parseInt(v, 16))\n                       .map(v => new RGB(v))\nconst greyDecoder  = matchInsensitive('grey').or(DecodeError.combine, matchInsensitive('gray'))\n                       .skipNext(optionalWhitespace)\n                       .pickNext(ratioDecoder)\n                       .map(v => new Grey(v))\nconst hslDecoder   = matchInsensitive('hsl(')\n                       .pickNext(\n                         ratioDecoder\n                           .separatedByTimes(match(','), 3)\n                           .map(v => new HSL(v[0], v[1], v[2]))\n                       )\n                       .skipNext(match(')'))\n\nconst colorTextDecoder = decodeText(\n    oneOf(\n      DecodeError.combine,\n      rgbDecoder,\n      greyDecoder,\n      hslDecoder\n    ).skipNext(eoi) // make sure that there is nothing left to decode\n  )\n\n// all results are wrapped in a DecodeSuccess\n// colorTextDecoder('#003355')          == new RGB(0x003355)\n// colorTextDecoder('gray 0.3')         == new Grey(0.3)\n// colorTextDecoder('gray0.2')          == new Grey(0.2)\n// colorTextDecoder('HSL(0.1,0.2,0.3)') == new HSL(0.1,0.2,0.3)Another scenario where decoding comes in handy is to validate, type and transform payloads from JSON requests. You can decode a value (after being parsed by JSON.parse) into one of the Color types described above.\nA few examples of valid JSON payloads:\n\"#003366\"{ \"grey\": 0.5 }{ \"kind\": \"hsl\", \"h\": 0.2, \"s\": 0.5, \"l\": 0.8 }Here is a colorValueDecoder definition that can deal with those cases:\nconst ratioValue = numberValue.test(v => v >= 0 && v  ({ input, index: 0 }), v => v)\n\n// example: { \"grey\": 0.5 }\nconst greyValue = objectValue(\n    { grey: ratioValue },\n    [] // the empty array means that no fields are optional\n  ).map(v => new Grey(v.grey))\n\n// example: { \"kind\": \"hsl\", \"h\": 0.2, \"s\": 0.5, \"l\": 0.8 }\nconst hslValue = objectValue(\n    {\n      kind: literalValue('hsl'),\n      h: ratioValue,\n      s: ratioValue,\n      l: ratioValue\n    },\n    []\n  ).map(v => new HSL(v.h, v.s, v.l))\n\nconst colorValueDecoder = decodeValue(\n    oneOf(\n      DecodeError.combine,\n      rgbValue,\n      greyValue,\n      hslValue\n    )\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DecodeError   (src/.../index.ts)\n                        \n                        \n                            DecodeResult   (src/.../result.ts)\n                        \n                        \n                            Decoding   (src/.../decoder.ts)\n                        \n                        \n                            Error   (src/.../type_level.ts)\n                        \n                        \n                            Input   (src/.../type_level.ts)\n                        \n                        \n                            MarkOptionalFields   (src/.../type_level.ts)\n                        \n                        \n                            Output   (src/.../type_level.ts)\n                        \n                        \n                            TextDecoder   (src/.../index.ts)\n                        \n                        \n                            TupleToUnion   (src/.../type_level.ts)\n                        \n                        \n                            ValueDecoder   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/error/index.ts\n    \n        \n            \n                \n                    \n                        \n                        DecodeError\n                    \n                \n                \n                    \n                        DecodeError:     CustomError | ExpectedAnyOf | ExpectedAtLeast | ExpectedEoi | ExpectedField | ExpectedMatch | ExpectedNoneOf | ExpectedOnce | ExpectedWithinRange | PatternMismatch | UnexpectedEoi\n\n                    \n                \n            \n        \n\n    src/core/result.ts\n    \n        \n            \n                \n                    \n                        \n                        DecodeResult\n                    \n                \n                \n                    \n                        DecodeResult:     DecodeSuccess | DecodeFailure\n\n                    \n                \n            \n        \n\n    src/core/decoder.ts\n    \n        \n            \n                \n                    \n                        \n                        Decoding\n                    \n                \n                    \n                        \n                            Type signature for a function that takes an input and decodes it into a\nresult object.\n\n                        \n                    \n                \n                    \n                        Decoding:     function\n\n                    \n                \n            \n        \n\n    src/core/type_level.ts\n    \n        \n            \n                \n                    \n                        \n                        Error\n                    \n                \n                    \n                        \n                            Extracts the Err type from a Decoder type.\n\n                        \n                    \n                \n                    \n                        Error:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Input\n                    \n                \n                    \n                        \n                            Extracts the Int type from a Decoder type.\n\n                        \n                    \n                \n                    \n                        Input:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        MarkOptionalFields\n                    \n                \n                    \n                        \n                            Given a type for an object T and an array U of field names from U,\nreturn a new object type with the specified fields U marked as optional.\n\n                        \n                    \n                \n                    \n                        MarkOptionalFields:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Output\n                    \n                \n                    \n                        \n                            Extracts the Out type from a Decoder type.\n\n                        \n                    \n                \n                    \n                        Output:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TupleToUnion\n                    \n                \n                    \n                        \n                            This module contains type-level functions for compile-time usage.\n\n                        \n                    \n                \n                    \n                        TupleToUnion:      | never\n\n                    \n                \n            \n        \n\n    src/text/index.ts\n    \n        \n            \n                \n                    \n                        \n                        TextDecoder\n                    \n                \n                \n                    \n                        TextDecoder:     Decoder\n\n                    \n                \n            \n        \n\n    src/value/index.ts\n    \n        \n            \n                \n                    \n                        \n                        ValueDecoder\n                    \n                \n                \n                    \n                        ValueDecoder:     Decoder\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
